[{"E:\\fudan-secsys\\my-react\\src\\index.js":"1","E:\\fudan-secsys\\my-react\\src\\App.js":"2","E:\\fudan-secsys\\my-react\\src\\reportWebVitals.js":"3","E:\\fudan-secsys\\my-react\\src\\routerGuard.js":"4","E:\\fudan-secsys\\my-react\\src\\routes.js":"5","E:\\fudan-secsys\\my-react\\src\\components\\GlobalStyles.js":"6","E:\\fudan-secsys\\my-react\\src\\theme\\index.js":"7","E:\\fudan-secsys\\my-react\\src\\views\\updateUserInfo\\UpdateUserInfoView.js":"8","E:\\fudan-secsys\\my-react\\src\\views\\trainingScheme\\TrainingSchemeView.js":"9","E:\\fudan-secsys\\my-react\\src\\views\\userManagemet\\UserManagementView.js":"10","E:\\fudan-secsys\\my-react\\src\\views\\device\\DeviceView.js":"11","E:\\fudan-secsys\\my-react\\src\\views\\NotFoundView.js":"12","E:\\fudan-secsys\\my-react\\src\\views\\LoginView.js":"13","E:\\fudan-secsys\\my-react\\src\\views\\ResetPasswordView.js":"14","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinListView.js":"15","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManageView.js":"16","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarView.js":"17","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\essayRecommendation\\EssayRecommendationView.js":"18","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\battle\\BattleView.js":"19","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\student\\StudentView.js":"20","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\groupLeader\\GroupLeaderView.js":"21","E:\\fudan-secsys\\my-react\\src\\views\\lab\\eliteStudent\\EliteStudentView.js":"22","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\teacher\\TeacherView.js":"23","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManagementView.js":"24","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\boss\\BossView.js":"25","E:\\fudan-secsys\\my-react\\src\\views\\lab\\normalStudent\\NormalStudentView.js":"26","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorder\\RecorderView.js":"27","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorderGroup\\RecorderGroupView.js":"28","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\BaseInformationViewForMng.js":"29","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessConfigView.js":"30","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\baseInformation\\selfEdit\\selfEditView.js":"31","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\ProcessForTeaView.js":"32","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessForMngView.js":"33","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\ProcessDoubleForStuView.js":"34","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessConfigMngView.js":"35","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForStudent\\StudentScoreView.js":"36","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForStudent\\ProcessForStuView.js":"37","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForTeacher\\ScoreView.js":"38","E:\\fudan-secsys\\my-react\\src\\theme\\typography.js":"39","E:\\fudan-secsys\\my-react\\src\\theme\\shadows.js":"40","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\detail\\index.js":"41","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\index.js":"42","E:\\fudan-secsys\\my-react\\src\\layouts\\MainLayout\\index.js":"43","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\planAllocation\\index.js":"44","E:\\fudan-secsys\\my-react\\src\\components\\Page.js":"45","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManage.js":"46","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinList.js":"47","E:\\fudan-secsys\\my-react\\src\\layouts\\Context.js":"48","E:\\fudan-secsys\\my-react\\src\\settings.js":"49","E:\\fudan-secsys\\my-react\\src\\components\\Style\\ViewStyle.js":"50","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorderGroup\\eachRecorderGroup\\RecorderGroupForMng.js":"51","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorderGroup\\eachRecorderGroup\\RecorderGroupForStu.js":"52","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForTeacher\\ScoreForTea.js":"53","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessConfigForStu.js":"54","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorder\\Arrangement\\Arrangement.js":"55","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForTeacher\\ScoreForBoss.js":"56","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForMng\\ScoreForMng.js":"57","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessConfig.js":"58","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorder\\Arrangement\\ArrangementForStu.js":"59","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessForStu.js":"60","E:\\fudan-secsys\\my-react\\src\\components\\Style\\PageView.js":"61","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForStudent\\ScoreGraphForStu.js":"62","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessEssentialForStu.js":"63","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessBaseForStu.js":"64","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\StuBaseInformation.js":"65","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForStudent\\ScoreForStu.js":"66","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessADVConfig.js":"67","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\GraduateInformation.js":"68","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\processForTeaApply\\ProcessForTeaApply.js":"69","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\EditStage.js":"70","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\StageButton.js":"71","E:\\fudan-secsys\\my-react\\src\\base\\index.js":"72","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\WorkTable.js":"73","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\Process.js":"74","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\AssignUser.js":"75","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManageForm.js":"76","E:\\fudan-secsys\\my-react\\src\\components\\Style\\ContentStyle.js":"77","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinCard.js":"78","E:\\fudan-secsys\\my-react\\src\\components\\Style\\ContentStyleForPage.js":"79","E:\\fudan-secsys\\my-react\\src\\service\\userService.js":"80","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\TeaCommentForm.js":"81","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessGroupDelayForm.js":"82","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessDelayForm.js":"83","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessEditForm.js":"84","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ConfirmForm.js":"85","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessAddForm.js":"86","E:\\fudan-secsys\\my-react\\src\\components\\AlertBox\\index.js":"87","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessTinyCategoryAddForm.js":"88","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\TeaCommentForTeaForm.js":"89","E:\\fudan-secsys\\my-react\\src\\components\\ConfirmModal\\index.js":"90","E:\\fudan-secsys\\my-react\\src\\components\\NoData\\index.js":"91","E:\\fudan-secsys\\my-react\\src\\components\\Loading\\index.js":"92","E:\\fudan-secsys\\my-react\\src\\components\\AlertBox\\AlertBox.js":"93","E:\\fudan-secsys\\my-react\\src\\components\\ConfirmModal\\ConfirmModal.js":"94","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\EditWork.js":"95","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\processForTeaApply\\ProcessForTeaApplyDelay.js":"96","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\processForTeaApply\\ProcessForTeaApplyAgree.js":"97","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessDelay.js":"98","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessAffirmDelay.js":"99","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\ScoreEditForm.js":"100","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\ScoreAddForm.js":"101","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\ScoreStudentComment.js":"102","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessDetailForm.js":"103","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessPartAddForm.js":"104","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessDisagreeForm.js":"105","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessGroupDelay.js":"106","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\boss\\WeeklyPublicationForBoss.js":"107","E:\\fudan-secsys\\my-react\\src\\views\\updateUserInfo\\UpdateUserInfoForm.js":"108","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\groupLeader\\WeeklyPublicationForGroupLeaderSelf.js":"109","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\groupLeader\\WeeklyPublicationForGroupStudents.js":"110","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\manager\\WeeklyPublicationForManager.js":"111","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\ProcessForTea.js":"112","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\TopBar.js":"113","E:\\fudan-secsys\\my-react\\src\\views\\lab\\normalStudent\\PersonalLab.js":"114","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\baseInformation\\selfEdit\\selfEditForm.js":"115","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\BaseInformationForMng.js":"116","E:\\fudan-secsys\\my-react\\src\\layouts\\MainLayout\\TopBar.js":"117","E:\\fudan-secsys\\my-react\\src\\views\\lab\\common\\LabPublish.js":"118","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\UndoneStudentDialog.js":"119","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\UndoneStudentDialogForMng.js":"120","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\WeeklyPublicationDialog.js":"121","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\PublicationUploadDialog.js":"122","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessForTeachDelay.js":"123","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\NavBar\\index.js":"124","E:\\fudan-secsys\\my-react\\src\\views\\lab\\dialog\\UploadLabWork.js":"125","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\SelectWeekDialog.js":"126","E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\DeviceApplyHistory.js":"127","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\NavBar\\NavItem.js":"128","E:\\fudan-secsys\\my-react\\src\\views\\lab\\dialog\\UploadLabData.js":"129","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessForTeachApprove.js":"130","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\PublicationComment.js":"131","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\EditPublicationComment.js":"132","E:\\fudan-secsys\\my-react\\src\\views\\userManagemet\\UserManage.js":"133","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\student\\WeeklyPublicationAllTime.js":"134","E:\\fudan-secsys\\my-react\\src\\views\\device\\DeviceNormal.js":"135","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\essayRecommendation\\EssayRecommendation.js":"136","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarHead.js":"137","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\teacher\\WeeklyPublicationForTea.js":"138","E:\\fudan-secsys\\my-react\\src\\views\\trainingScheme\\TrainingScheme.js":"139","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\battle\\Battle.js":"140","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\student\\WeeklyPublicationForStu.js":"141","E:\\fudan-secsys\\my-react\\src\\views\\userManagemet\\UserManageForm.js":"142","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\essayRecommendation\\EssayEditForm.js":"143","E:\\fudan-secsys\\my-react\\src\\components\\TabPanel.js":"144","E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\HistoryTable.js":"145","E:\\fudan-secsys\\my-react\\src\\components\\NewClassForm.js":"146","E:\\fudan-secsys\\my-react\\src\\components\\NewArticleForm.js":"147","E:\\fudan-secsys\\my-react\\src\\components\\CatalogCard.js":"148","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\seminarMng\\SeminarForDoc.js":"149","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\seminarMng\\SeminarForMaster.js":"150","E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\DeviceTable.js":"151","E:\\fudan-secsys\\my-react\\src\\service\\deviceService.js":"152","E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\EditDevice.js":"153","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarSectionDetailForm.js":"154","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarSectionEditForm.js":"155"},{"size":571,"mtime":1623220198000,"results":"156","hashOfConfig":"157"},{"size":666,"mtime":1640058506000,"results":"158","hashOfConfig":"157"},{"size":375,"mtime":1623220198000,"results":"159","hashOfConfig":"157"},{"size":1057,"mtime":1640058506000,"results":"160","hashOfConfig":"157"},{"size":6179,"mtime":1663313362000,"results":"161","hashOfConfig":"157"},{"size":895,"mtime":1649491538000,"results":"162","hashOfConfig":"157"},{"size":586,"mtime":1649490994000,"results":"163","hashOfConfig":"157"},{"size":2088,"mtime":1643100948000,"results":"164","hashOfConfig":"157"},{"size":725,"mtime":1623220198000,"results":"165","hashOfConfig":"157"},{"size":539,"mtime":1645939380000,"results":"166","hashOfConfig":"157"},{"size":527,"mtime":1654328562000,"results":"167","hashOfConfig":"157"},{"size":1615,"mtime":1623220198000,"results":"168","hashOfConfig":"157"},{"size":4772,"mtime":1664440565664,"results":"169","hashOfConfig":"157"},{"size":4520,"mtime":1648901202000,"results":"170","hashOfConfig":"157"},{"size":503,"mtime":1646475988000,"results":"171","hashOfConfig":"157"},{"size":696,"mtime":1623220198000,"results":"172","hashOfConfig":"157"},{"size":639,"mtime":1646537350000,"results":"173","hashOfConfig":"157"},{"size":583,"mtime":1646533882000,"results":"174","hashOfConfig":"157"},{"size":644,"mtime":1646533842000,"results":"175","hashOfConfig":"157"},{"size":1988,"mtime":1662389766000,"results":"176","hashOfConfig":"157"},{"size":1987,"mtime":1663313362000,"results":"177","hashOfConfig":"157"},{"size":2069,"mtime":1663313362000,"results":"178","hashOfConfig":"157"},{"size":2153,"mtime":1660378812000,"results":"179","hashOfConfig":"157"},{"size":4623,"mtime":1639359922000,"results":"180","hashOfConfig":"157"},{"size":510,"mtime":1660371372000,"results":"181","hashOfConfig":"157"},{"size":2326,"mtime":1663313362000,"results":"182","hashOfConfig":"157"},{"size":799,"mtime":1646533842000,"results":"183","hashOfConfig":"157"},{"size":873,"mtime":1650033472000,"results":"184","hashOfConfig":"157"},{"size":1558,"mtime":1655178424000,"results":"185","hashOfConfig":"157"},{"size":2780,"mtime":1651495094000,"results":"186","hashOfConfig":"157"},{"size":2544,"mtime":1646725874000,"results":"187","hashOfConfig":"157"},{"size":2886,"mtime":1663318042000,"results":"188","hashOfConfig":"157"},{"size":2322,"mtime":1651495490000,"results":"189","hashOfConfig":"157"},{"size":3019,"mtime":1650864858000,"results":"190","hashOfConfig":"157"},{"size":1346,"mtime":1655209108000,"results":"191","hashOfConfig":"157"},{"size":3056,"mtime":1663313362000,"results":"192","hashOfConfig":"157"},{"size":6196,"mtime":1663313362000,"results":"193","hashOfConfig":"157"},{"size":2158,"mtime":1655177808000,"results":"194","hashOfConfig":"157"},{"size":579,"mtime":1623220198000,"results":"195","hashOfConfig":"157"},{"size":1645,"mtime":1623220198000,"results":"196","hashOfConfig":"157"},{"size":6940,"mtime":1623220198000,"results":"197","hashOfConfig":"157"},{"size":2579,"mtime":1648435100000,"results":"198","hashOfConfig":"157"},{"size":1343,"mtime":1648387300000,"results":"199","hashOfConfig":"157"},{"size":9365,"mtime":1623220198000,"results":"200","hashOfConfig":"157"},{"size":430,"mtime":1640061388000,"results":"201","hashOfConfig":"157"},{"size":4597,"mtime":1623220198000,"results":"202","hashOfConfig":"157"},{"size":3258,"mtime":1648389608000,"results":"203","hashOfConfig":"157"},{"size":229,"mtime":1648395116000,"results":"204","hashOfConfig":"157"},{"size":12168,"mtime":1664436595449,"results":"205","hashOfConfig":"157"},{"size":349,"mtime":1645865742000,"results":"206","hashOfConfig":"157"},{"size":7307,"mtime":1650034090000,"results":"207","hashOfConfig":"157"},{"size":2465,"mtime":1650034090000,"results":"208","hashOfConfig":"157"},{"size":13453,"mtime":1663228380000,"results":"209","hashOfConfig":"157"},{"size":14808,"mtime":1655289274000,"results":"210","hashOfConfig":"157"},{"size":9790,"mtime":1650035364000,"results":"211","hashOfConfig":"157"},{"size":19025,"mtime":1663228596000,"results":"212","hashOfConfig":"157"},{"size":3555,"mtime":1653824570000,"results":"213","hashOfConfig":"157"},{"size":17521,"mtime":1663303038000,"results":"214","hashOfConfig":"157"},{"size":17854,"mtime":1650035878000,"results":"215","hashOfConfig":"157"},{"size":17498,"mtime":1655205560000,"results":"216","hashOfConfig":"157"},{"size":462,"mtime":1664424141212,"results":"217","hashOfConfig":"157"},{"size":3973,"mtime":1663313362000,"results":"218","hashOfConfig":"157"},{"size":14160,"mtime":1650292036000,"results":"219","hashOfConfig":"157"},{"size":16778,"mtime":1650294336000,"results":"220","hashOfConfig":"157"},{"size":998,"mtime":1655196478000,"results":"221","hashOfConfig":"157"},{"size":12638,"mtime":1663313362000,"results":"222","hashOfConfig":"157"},{"size":19201,"mtime":1653620378000,"results":"223","hashOfConfig":"157"},{"size":3944,"mtime":1663314310000,"results":"224","hashOfConfig":"157"},{"size":3122,"mtime":1663313362000,"results":"225","hashOfConfig":"157"},{"size":2857,"mtime":1623220198000,"results":"226","hashOfConfig":"157"},{"size":1517,"mtime":1623220198000,"results":"227","hashOfConfig":"157"},{"size":5317,"mtime":1664440228878,"results":"228","hashOfConfig":"157"},{"size":5860,"mtime":1623220198000,"results":"229","hashOfConfig":"157"},{"size":8062,"mtime":1623220198000,"results":"230","hashOfConfig":"157"},{"size":5746,"mtime":1623220198000,"results":"231","hashOfConfig":"157"},{"size":2660,"mtime":1623220198000,"results":"232","hashOfConfig":"157"},{"size":450,"mtime":1662389916000,"results":"233","hashOfConfig":"157"},{"size":3302,"mtime":1648395358000,"results":"234","hashOfConfig":"157"},{"size":833,"mtime":1664424140999,"results":"235","hashOfConfig":"157"},{"size":4277,"mtime":1651371840000,"results":"236","hashOfConfig":"157"},{"size":1413,"mtime":1663229364000,"results":"237","hashOfConfig":"157"},{"size":4551,"mtime":1654152934000,"results":"238","hashOfConfig":"157"},{"size":6591,"mtime":1650699574000,"results":"239","hashOfConfig":"157"},{"size":5270,"mtime":1655205946000,"results":"240","hashOfConfig":"157"},{"size":5802,"mtime":1650696872000,"results":"241","hashOfConfig":"157"},{"size":7589,"mtime":1652335188000,"results":"242","hashOfConfig":"157"},{"size":710,"mtime":1623220198000,"results":"243","hashOfConfig":"157"},{"size":4660,"mtime":1652335382000,"results":"244","hashOfConfig":"157"},{"size":3559,"mtime":1663229364000,"results":"245","hashOfConfig":"157"},{"size":731,"mtime":1623220198000,"results":"246","hashOfConfig":"157"},{"size":274,"mtime":1623220198000,"results":"247","hashOfConfig":"157"},{"size":179,"mtime":1623220198000,"results":"248","hashOfConfig":"157"},{"size":961,"mtime":1623220198000,"results":"249","hashOfConfig":"157"},{"size":1394,"mtime":1649235842000,"results":"250","hashOfConfig":"157"},{"size":2304,"mtime":1623220198000,"results":"251","hashOfConfig":"157"},{"size":7868,"mtime":1663122322000,"results":"252","hashOfConfig":"157"},{"size":8164,"mtime":1663122620000,"results":"253","hashOfConfig":"157"},{"size":3409,"mtime":1654830546000,"results":"254","hashOfConfig":"157"},{"size":2606,"mtime":1654578468000,"results":"255","hashOfConfig":"157"},{"size":3689,"mtime":1663164890000,"results":"256","hashOfConfig":"157"},{"size":7233,"mtime":1663205882000,"results":"257","hashOfConfig":"157"},{"size":1702,"mtime":1663229364000,"results":"258","hashOfConfig":"157"},{"size":1748,"mtime":1650112734000,"results":"259","hashOfConfig":"157"},{"size":6263,"mtime":1650292966000,"results":"260","hashOfConfig":"157"},{"size":4078,"mtime":1654569058000,"results":"261","hashOfConfig":"157"},{"size":3667,"mtime":1654583514000,"results":"262","hashOfConfig":"157"},{"size":12970,"mtime":1661346054000,"results":"263","hashOfConfig":"157"},{"size":5874,"mtime":1650032428000,"results":"264","hashOfConfig":"157"},{"size":6365,"mtime":1661345230000,"results":"265","hashOfConfig":"157"},{"size":9627,"mtime":1661345230000,"results":"266","hashOfConfig":"157"},{"size":8239,"mtime":1661351078000,"results":"267","hashOfConfig":"157"},{"size":7426,"mtime":1663312312000,"results":"268","hashOfConfig":"157"},{"size":5444,"mtime":1648394172000,"results":"269","hashOfConfig":"157"},{"size":1834,"mtime":1663074622000,"results":"270","hashOfConfig":"157"},{"size":6706,"mtime":1655209848000,"results":"271","hashOfConfig":"157"},{"size":6105,"mtime":1663313390000,"results":"272","hashOfConfig":"157"},{"size":902,"mtime":1623220198000,"results":"273","hashOfConfig":"157"},{"size":5053,"mtime":1663078442000,"results":"274","hashOfConfig":"157"},{"size":1493,"mtime":1661329584000,"results":"275","hashOfConfig":"157"},{"size":2871,"mtime":1661351210000,"results":"276","hashOfConfig":"157"},{"size":3402,"mtime":1662366850000,"results":"277","hashOfConfig":"157"},{"size":8227,"mtime":1662206834000,"results":"278","hashOfConfig":"157"},{"size":7054,"mtime":1655196478000,"results":"279","hashOfConfig":"157"},{"size":8322,"mtime":1663076992000,"results":"280","hashOfConfig":"157"},{"size":1677,"mtime":1663074588000,"results":"281","hashOfConfig":"157"},{"size":4152,"mtime":1662430214000,"results":"282","hashOfConfig":"157"},{"size":3967,"mtime":1660811344000,"results":"283","hashOfConfig":"157"},{"size":2242,"mtime":1623220198000,"results":"284","hashOfConfig":"157"},{"size":5187,"mtime":1663084042000,"results":"285","hashOfConfig":"157"},{"size":5885,"mtime":1654267048000,"results":"286","hashOfConfig":"157"},{"size":1410,"mtime":1662431406000,"results":"287","hashOfConfig":"157"},{"size":4038,"mtime":1662432212000,"results":"288","hashOfConfig":"157"},{"size":6466,"mtime":1651371840000,"results":"289","hashOfConfig":"157"},{"size":7596,"mtime":1662389350000,"results":"290","hashOfConfig":"157"},{"size":2714,"mtime":1623220198000,"results":"291","hashOfConfig":"157"},{"size":5124,"mtime":1646535372000,"results":"292","hashOfConfig":"157"},{"size":1340,"mtime":1646537350000,"results":"293","hashOfConfig":"157"},{"size":14117,"mtime":1662344432000,"results":"294","hashOfConfig":"157"},{"size":2671,"mtime":1623220198000,"results":"295","hashOfConfig":"157"},{"size":8823,"mtime":1648022938000,"results":"296","hashOfConfig":"157"},{"size":9592,"mtime":1662389766000,"results":"297","hashOfConfig":"157"},{"size":7420,"mtime":1654219608000,"results":"298","hashOfConfig":"157"},{"size":5197,"mtime":1646962012000,"results":"299","hashOfConfig":"157"},{"size":664,"mtime":1645866906000,"results":"300","hashOfConfig":"157"},{"size":2723,"mtime":1648953948000,"results":"301","hashOfConfig":"157"},{"size":2045,"mtime":1623220198000,"results":"302","hashOfConfig":"157"},{"size":3299,"mtime":1664424140989,"results":"303","hashOfConfig":"157"},{"size":3087,"mtime":1664424140979,"results":"304","hashOfConfig":"157"},{"size":13220,"mtime":1650350738000,"results":"305","hashOfConfig":"157"},{"size":13347,"mtime":1650351332000,"results":"306","hashOfConfig":"157"},{"size":8349,"mtime":1649573102000,"results":"307","hashOfConfig":"157"},{"size":435,"mtime":1643445326000,"results":"308","hashOfConfig":"157"},{"size":6230,"mtime":1648953948000,"results":"309","hashOfConfig":"157"},{"size":1319,"mtime":1650351154000,"results":"310","hashOfConfig":"157"},{"size":3274,"mtime":1648451612000,"results":"311","hashOfConfig":"157"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},"19uqgd7",{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"314"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"314"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"314"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"314"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"314"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"314"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"314"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"314"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"314"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"314"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"314"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"314"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"314"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"314"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"314"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"314"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"314"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"314"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"314"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"314"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"314"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"314"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"314"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"314"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"314"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"314"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"314"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"314"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"314"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"314"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"314"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"314"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"314"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"314"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"314"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"314"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"314"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"314"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"475","usedDeprecatedRules":"314"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"314"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"314"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"314"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"314"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"314"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"314"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"314"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"314"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"314"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"314"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"314"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"314"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"314"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"314"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"314"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"314"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"314"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"314"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"578","usedDeprecatedRules":"314"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"314"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"314"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"314"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"314"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"314"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"314"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"314"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"314"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"314"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"314"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"314"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"314"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"314"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"314"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"314"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"314"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"635","usedDeprecatedRules":"314"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"314"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"314"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"314"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"314"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"314"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"314"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"314"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"314"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"314"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"314"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"314"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"314"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"314"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"314"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"314"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"314"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"314"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"314"},"E:\\fudan-secsys\\my-react\\src\\index.js",[],["716","717"],"E:\\fudan-secsys\\my-react\\src\\App.js",[],"E:\\fudan-secsys\\my-react\\src\\reportWebVitals.js",[],"E:\\fudan-secsys\\my-react\\src\\routerGuard.js",["718","719"],"// routerGuard.jsx\r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport cookie from 'react-cookies';\r\n\r\n{/**这个文件的主要作用是在成功登录的前提下，根据路由路径渲染对应的组件；如果没登陆或者登陆失败会重新导向登录路径**/}\r\n\r\nconst checkLoginStatus = () => {//检查登录状态，如果登录成功，返回true，否则返回false\r\n    if(cookie.load(\"loggedIn\")==null) return false;\r\n    return true;\r\n}\r\n\r\nexport function RouteWithSubRoutes(route) {\r\n    if(route.auth && checkLoginStatus()==false)\r\n    {//没登陆就先登录\r\n        console.log(\"请先登录\")\r\n        return <Redirect to=\"/main/login\"/>\r\n    }\r\n    return (\r\n      <Route /**根据路由选择渲染的组件**/\r\n        path={route.path}\r\n        render={props => (\r\n          // pass the sub-routes down to keep nesting\r\n          <route.component  {...props}  routes={route.routes} />\r\n            //route.component是根据route选择要渲染的组件\r\n        )}\r\n      />\r\n    );\r\n  }\r\n","E:\\fudan-secsys\\my-react\\src\\routes.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\GlobalStyles.js",[],"E:\\fudan-secsys\\my-react\\src\\theme\\index.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\updateUserInfo\\UpdateUserInfoView.js",["720","721"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Typography,\r\n  Divider,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { MNG_GET_USER_DETAIL, U_GET_USER_DETAIL } from \"src/settings\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport UpdateUserInfoForm from \"./UpdateUserInfoForm\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"16px\",\r\n    \"& p\": {\r\n      lineHeight: 2,\r\n    },\r\n  },\r\n  box: {\r\n    padding: '16px'\r\n  }\r\n}));\r\nexport default function UpdateUserInfoView(props) {\r\n  const {id}=useParams();\r\n  const { userInfo } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [userDetail, setUserDetail] = useState({});\r\n  const classes = useStyles();\r\n  const [refresh, setRefresh]=useState(false);\r\n  const getUserInfo = () => {\r\n    fetch(\r\n      `${\r\n        userInfo.isSystemMng==1 ? MNG_GET_USER_DETAIL : U_GET_USER_DETAIL\r\n      }?stuId=${id}`,\r\n      {}\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => {\r\n        setUserDetail(response?.data || {});\r\n      });\r\n  };\r\n  useEffect(getUserInfo, [refresh]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Box className={classes.header}>\r\n          <Typography color=\"textPrimary\" size=\"small\">\r\n            用户编辑\r\n          </Typography>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={history.goBack}\r\n          >\r\n            返回\r\n          </Button>\r\n        </Box>\r\n        <Divider />\r\n        {/* <PerfectScrollbar> */}\r\n        <Box minWidth={800} className={classes.box}>\r\n          {userDetail?.id > 0 && <UpdateUserInfoForm userDetail={userDetail} handleRefreshS={()=>{\r\n            setRefresh((prev)=>!prev)\r\n          }}/>}\r\n        </Box>\r\n        {/* </PerfectScrollbar> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\trainingScheme\\TrainingSchemeView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\userManagemet\\UserManagementView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\device\\DeviceView.js",["722","723","724"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport DeviceNormal from \"./DeviceNormal\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n}));\r\n\r\nconst DeviceView = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Page className={classes.root} title=\"设备管理\">\r\n      <DeviceNormal />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default DeviceView;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\NotFoundView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\LoginView.js",["725","726"],"E:\\fudan-secsys\\my-react\\src\\views\\ResetPasswordView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinListView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManageView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarView.js",["727"],"import React from \"react\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport SeminarHead from \"./SeminarHead\";\r\nimport ViewStyle from \"../../../components/Style/ViewStyle\";\r\n\r\nconst SeminarView = () => { //这里应该是有两部分，一部分是硕士生的演讲论文，一部分是博士生的推荐论文，比较繁琐\r\n  const classes = ViewStyle()\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"演讲安排\">\r\n      <Container maxWidth={false}>\r\n        <SeminarHead></SeminarHead>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SeminarView;\r\n\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\essayRecommendation\\EssayRecommendationView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\battle\\BattleView.js",["728"],"import ViewStyle from \"../../../components/Style/ViewStyle\";\r\nimport {useContext} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport Page from \"../../../components/Page\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Battle from \"./Battle\";\r\n\r\nconst BattleView=()=>{\r\n    const classes=ViewStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n\r\n    return (\r\n        <Page\r\n            className={classes.root}\r\n            title=\"battle计分\"\r\n        >\r\n            <Container maxWidth={false}>\r\n                <Battle/>\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default BattleView\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\student\\StudentView.js",["729","730","731"],"import ViewStyle from \"../../../components/Style/ViewStyle\";\r\nimport Page from \"../../../components/Page\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport WeeklyPublicationForStu from \"./WeeklyPublicationForStu\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {MNG_GET_USER_DETAIL} from \"../../../settings\";\r\nimport WeeklyPublicationAllTime from \"./WeeklyPublicationAllTime\";\r\n\r\nexport default function StudentView(){\r\n    const classes=ViewStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const {stuId}=useParams()\r\n    const [userDetail, setUserDetail]=useState({})\r\n    const [selfPermission, setSelfPermission]=useState(true)\r\n    const [done,setDone]=useState(false)\r\n    /**当stuId为空时，说明是本人操作；当stuId不为空，并且userInfo.stuId和stuId不一样的时候，说明不是本人操作**/\r\n\r\n    useEffect(()=>{\r\n        if(stuId==null){\r\n            setSelfPermission(true)\r\n            setDone(true)\r\n        }\r\n        else{\r\n            fetch(`${MNG_GET_USER_DETAIL}?stuId=${stuId}`)\r\n                .then((res)=>res.json())\r\n                .catch((error) => console.error(\"Error:\", error))\r\n                .then((res)=>{\r\n                    setUserDetail(res?.data || {})\r\n                    setSelfPermission(false)\r\n                })\r\n                .then(()=>{\r\n                    setDone(true)\r\n                })\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <Page className={classes.root} title=\"周报模块\">\r\n            <Container maxWidth={false}>\r\n                {done ==true && (\r\n                    selfPermission == true?(\r\n                        <WeeklyPublicationForStu userInfo={userInfo}/>\r\n                    ):(\r\n                        <WeeklyPublicationAllTime userInfo={userDetail}/>\r\n                    )\r\n                )}\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\groupLeader\\GroupLeaderView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\lab\\eliteStudent\\EliteStudentView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\teacher\\TeacherView.js",["732"],"import ViewStyle from \"../../../components/Style/ViewStyle\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport Page from \"../../../components/Page\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport WeeklyPublicationForTea from \"./WeeklyPublicationForTea\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport WeeklyPublicationForManager from \"../manager/WeeklyPublicationForManager\";\r\n\r\nexport default function TeacherView(){\r\n    const classes=ViewStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [value, setValue]=useState(0)\r\n\r\n    return (\r\n        <Page className={classes.root} title=\"学生周报模块\">\r\n            {userInfo.isEducateMng == 1? (\r\n                <>\r\n                <Container maxWidth={false}>\r\n                    <ToggleButtonGroup\r\n                        color=\"primary\"\r\n                        exclusive\r\n                        onChange={(event, value)=>{\r\n                            setValue(value)\r\n                        }}\r\n                        aria-label=\"text alignment\">\r\n                        <ToggleButton value={0} aria-label=\"left aligned\">\r\n                            管理员身份\r\n                        </ToggleButton>\r\n                        <ToggleButton value={1} aria-label=\"right aligned\">\r\n                            非管理员身份\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Container>\r\n                    {value===0 ?(\r\n                        <Container maxWidth={false}>\r\n                            <WeeklyPublicationForManager/>\r\n                        </Container>\r\n                    ):(\r\n                        <Container maxWidth={false}>\r\n                            <WeeklyPublicationForTea userInfo={userInfo}/>\r\n                        </Container>\r\n                    )}\r\n                </>\r\n            ):(\r\n                <Container maxWidth={false}>\r\n                    <WeeklyPublicationForTea userInfo={userInfo}/>\r\n                </Container>\r\n            )}\r\n        </Page>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManagementView.js",["733"],"import React, { useRef, useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport alertBox from \"src/components/AlertBox\";\r\nimport Page from \"src/components/Page\";\r\nimport { MNG_ADD_BULLETIN_URL } from \"src/settings\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport { postFetch } from \"src/base\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: \"inline-block\",\r\n    maxWidth: \"100%\",\r\n    width: 560,\r\n  },\r\n}));\r\n\r\nconst BulletinManagementView = () => {\r\n  const classes = useStyles();\r\n  // const ref = useRef();\r\n  const { userInfo } = useContext(UserContext);\r\n  // const sendMessage = (msg) => {\r\n  //   //发送消息\r\n  //   ref.current.sendMessage(\"/app/server\", msg);\r\n  // };\r\n\r\n  return userInfo.roleId !== 10 && userInfo.roleId !== 60 ? (\r\n    <Redirect to=\"/404\" />\r\n  ) : (\r\n    <div>\r\n      {/* <SockJsClient\r\n        url={BASE_URL + \"/ws\"}\r\n        topics={[\"/topic/bulletin\"]}\r\n        onMessage={() => {}}\r\n        ref={ref}\r\n      /> */}\r\n      <Page className={classes.root} title=\"通告管理\">\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            <Formik\r\n              initialValues={{\r\n                title: \"\",\r\n                content: \"\",\r\n              }}\r\n              validationSchema={Yup.object().shape({\r\n                title: Yup.string().max(255).required(\"通知标题不能为空\"),\r\n                content: Yup.string().required(\"通知内容npm不能为空\"),\r\n              })}\r\n              onSubmit={(values) => {\r\n                postFetch({\r\n                  url: MNG_ADD_BULLETIN_URL,\r\n                  values,\r\n                  successCallback: () => {\r\n                    // sendMessage(\"xxx\");\r\n                    alertBox({ text: \"通知发送成功\", severity: \"success\" });\r\n                  },\r\n                });\r\n                // var url = ADD_BULLETIN_URL;\r\n                // fetch(url, {\r\n                //   method: \"POST\",\r\n                //   headers: new Headers({\r\n                //     token: cookie.load(\"userInfo\").token,\r\n                //     \"Content-Type\": \"application/json;charset=utf-8\",\r\n                //   }),\r\n                //   body: JSON.stringify(values),\r\n                // });\r\n                // sendMessage(\"xxx\");\r\n              }}\r\n            >\r\n              {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                //isSubmitting,\r\n                touched,\r\n                values,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    error={Boolean(errors.title)}\r\n                    fullWidth\r\n                    helperText={errors.title}\r\n                    label=\"编辑通知标题\"\r\n                    margin=\"normal\"\r\n                    name=\"title\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                  <TextField\r\n                    error={Boolean(errors.content)}\r\n                    fullWidth\r\n                    helperText={errors.content}\r\n                    label=\"编辑通知内容\"\r\n                    margin=\"normal\"\r\n                    name=\"content\"\r\n                    multiline\r\n                    rows={10}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                  <Box my={2}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      //disabled={isSubmitting}\r\n                      fullWidth\r\n                      // size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      发布新通知\r\n                    </Button>\r\n                  </Box>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </Container>\r\n        </Box>\r\n      </Page>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulletinManagementView;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\boss\\BossView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\lab\\normalStudent\\NormalStudentView.js",["734","735"],"import PageView from \"../../../components/Style/PageView\";\r\nimport {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport {a11yProps} from \"../../cultivationMenu/score/scoreForStudent/StudentScoreView\";\r\nimport PropTypes from \"prop-types\";\r\nimport LabPublish from \"../common/LabPublish\";\r\nimport PersonalLab from \"./PersonalLab\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\nexport default function NormalStudentView(){\r\n    const classes = PageView()\r\n    const classes2 = useStyles()\r\n    const {userInfo} = useContext(UserContext)\r\n    const [value, setValue] = useState(0)\r\n    const [refresh, setRefresh]=useState(false)\r\n\r\n    return (\r\n        <Page className={classes2.root} title=\"Lab管理\">\r\n            <Paper className={classes.root}>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                    <Tabs value={value} onChange={(event, value)=>{\r\n                        setValue(value)\r\n                    }} indicatorColor=\"primary\" textColor=\"primary\">\r\n                        <Tab label=\"已发布Lab资料\" {...a11yProps(0)}/>\r\n                        <Tab label=\"个人Lab中心\" {...a11yProps(1)}/>\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <TabPanel value={value} index={0}>\r\n                    <LabPublish elite={false}/>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={value} index={1}>\r\n                    <PersonalLab userInfo={userInfo}/>\r\n                </TabPanel>\r\n            </Paper>\r\n        </Page>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorder\\RecorderView.js",["736"],"import React, {useContext} from 'react';\r\nimport {\r\n  Container,\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport ViewStyle from \"../../../components/Style/ViewStyle\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport Arrangement from \"./Arrangement/Arrangement\";\r\nimport ArrangementForStu from \"./Arrangement/ArrangementForStu\";\r\n\r\n\r\nconst RecorderView = () => {\r\n  const classes = ViewStyle()\r\n  const {userInfo}=useContext(UserContext)\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"导读安排\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        {userInfo.groupId==0?<Arrangement/>:<ArrangementForStu/>}{/**groupId=0说明是博士或者是老师**/}\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RecorderView;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorderGroup\\RecorderGroupView.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\BaseInformationViewForMng.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessConfigView.js",["737"],"import Page from \"../../../../components/Page\";\r\nimport {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ProcessConfig from \"./ProcessConfig\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {MNG_GET_USER_DETAIL} from \"../../../../settings\";\r\nimport PageView from \"../../../../components/Style/PageView\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProcessADVConfig from \"./ProcessADVConfig\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ProcessConfigView(){\r\n    const classes=PageView()\r\n    const classesPage=useStyles()\r\n    const {stuId}=useParams()\r\n    const [userDetail,setUserDetail]=useState({})\r\n    const [value,setValue]=useState(0)\r\n\r\n    useEffect(()=>{\r\n        fetch(\r\n            `${MNG_GET_USER_DETAIL}?stuId=${stuId}`)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                setUserDetail(res?.data || {})\r\n            })\r\n    },[value])\r\n\r\n    return (\r\n        <Page className={classesPage.root} title=\"配置培养过程\">\r\n            <Paper className={classes.root}>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                    <Tabs value={value} onChange={(e,newValue)=>{\r\n                        setValue(newValue)\r\n                    }} indicatorColor=\"primary\" textColor=\"primary\">\r\n                        <Tab label=\"基本任务目标\" {...a11yProps(0)}/>\r\n                        <Tab label=\"进阶任务目标\" {...a11yProps(1)}/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel index={0} value={value}>\r\n                    {userDetail.id>0 &&  <ProcessConfig userDetail={userDetail} userStuId={stuId}/>}\r\n                </TabPanel>\r\n                <TabPanel index={1} value={value}>\r\n                    {userDetail.id>0 && <ProcessADVConfig userDetail={userDetail} userStuId={stuId}/>}\r\n                </TabPanel>\r\n            </Paper>\r\n        </Page>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\baseInformation\\selfEdit\\selfEditView.js",["738","739"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Typography,\r\n    Divider,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { MNG_GET_USER_DETAIL, U_GET_USER_DETAIL } from \"src/settings\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport SelfEditForm from \"./selfEditForm\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"16px\",\r\n        \"& p\": {\r\n            lineHeight: 2,\r\n        },\r\n    },\r\n    box: {\r\n        padding: '16px'\r\n    }\r\n}));\r\nexport default function SelfEditView() {\r\n    const { id } = useParams();\r\n    const { userInfo } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [userDetail, setUserDetail] = useState({});\r\n    const [refresh, setRefresh]=useState(false);\r\n    const classes = useStyles();\r\n    const getUserInfo = () => {\r\n        fetch(\r\n            `${\r\n                userInfo.isEducateMng>0 ? MNG_GET_USER_DETAIL : U_GET_USER_DETAIL\r\n            }?stuId=${id}`,\r\n            {}\r\n        )\r\n            .then((res) => res.json())\r\n            .catch((error) => console.error(\"Error:\", error))\r\n            .then((response) => {\r\n                setUserDetail(response?.data || {});\r\n            });\r\n    };\r\n    useEffect(getUserInfo, [refresh]);\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        编辑学生信息\r\n                    </Typography>\r\n\r\n                    {\r\n                        userInfo.isEducateMng==1 && (\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onClick={history.goBack}\r\n                            >\r\n                                返回\r\n                            </Button>\r\n                        )\r\n                    }\r\n                </Box>\r\n                <Divider />\r\n                <Box minWidth={800} className={classes.box}>\r\n                    {userDetail?.id > 0 && <SelfEditForm userDetail={userDetail} handleOnRefresh={()=>{\r\n                        setRefresh((prev)=>!prev);\r\n                    }}/>}\r\n                </Box>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\ProcessForTeaView.js",["740"],"import Page from \"../../../../components/Page\";\r\nimport {AppBar, Badge, IconButton, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport PageView from \"../../../../components/Style/PageView\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {a11yProps, TabPanel} from \"../../score/scoreForStudent/StudentScoreView\";\r\nimport PropTypes from \"prop-types\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport ProcessForTea from \"./ProcessForTea\";\r\nimport {MNG_GET_PROCESS_APPLY_COUNT} from \"../../../../settings\";\r\nimport ProcessForTeaApply from \"./processForTeaApply/ProcessForTeaApply\";\r\nimport GraduateInformation from \"./GraduateInformation\";\r\n\r\n;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ProcessForTeaView(){\r\n    const classes=PageView()\r\n    const twoClasses=useStyles()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [value,setValue]=useState(0)\r\n    const [count,setCount]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n\r\n    useEffect(()=>{\r\n        fetch(`${MNG_GET_PROCESS_APPLY_COUNT}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setCount(res?.data || 0)\r\n            })\r\n    },[refresh])\r\n\r\n    return (\r\n        <Page className={twoClasses.root} title=\"学生培养过程\">\r\n            <Paper className={classes.root}>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                    <Tabs value={value} onChange={(e,newValue)=>{\r\n                        setValue(newValue)\r\n                    }} indicatorColor=\"primary\" textColor=\"primary\">\r\n                        <Tab label=\"学生培养过程管理\" {...a11yProps(0)}/>\r\n                        <Tab label=\"毕业相关信息\" {...a11yProps(1)}/>\r\n                        <Tab label=\"学生任务申请管理\" {...a11yProps(2)}/>\r\n                        <IconButton>\r\n                            <Badge color=\"error\" badgeContent={count} max={99}>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel index={0} value={value}>\r\n                    <ProcessForTea/>\r\n                </TabPanel>\r\n                <TabPanel index={1} value={value}>\r\n                    <GraduateInformation/>\r\n                </TabPanel>\r\n                <TabPanel index={2} value={value}>\r\n                    <ProcessForTeaApply onRefresh={()=>{\r\n                        setRefresh((p)=>!p)\r\n                    }}/>\r\n                </TabPanel>\r\n            </Paper>\r\n        </Page>\r\n    )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessForMngView.js",["741","742"],"import ViewStyle from \"../../../../components/Style/ViewStyle\";\r\nimport {Container} from \"@mui/material\";\r\nimport Page from \"../../../../components/Page\";\r\nimport ProcessConfig from \"./ProcessConfig\";\r\nimport {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {useState} from \"react\";\r\nimport PageView from \"../../../../components/Style/PageView\";\r\nimport ProcessADVConfig from \"./ProcessADVConfig\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ProcessForMngView(){\r\n    const classes=PageView()\r\n    const classesPage=useStyles()\r\n    const [value,setValue]=useState(0)\r\n\r\n    return(\r\n        <Page className={classesPage.root} title=\"配置培养过程\">\r\n            <Paper className={classes.root}>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                    <Tabs value={value} onChange={(e,newValue)=>{\r\n                        setValue(newValue)\r\n                    }} indicatorColor=\"primary\" textColor=\"primary\">\r\n                        <Tab label=\"基本任务目标\" {...a11yProps(0)}/>\r\n                        <Tab label=\"进阶任务目标\" {...a11yProps(1)}/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel index={0} value={value}>\r\n                    <ProcessConfig />\r\n                </TabPanel>\r\n                <TabPanel index={1} value={value}>\r\n                    <ProcessADVConfig/>\r\n                </TabPanel>\r\n            </Paper>\r\n        </Page>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\ProcessDoubleForStuView.js",["743","744"],"import {useParams} from \"react-router-dom\";\r\nimport {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Page from \"../../../../components/Page\";\r\nimport PageView from \"../../../../components/Style/PageView\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProcessForStu from \"../ProcessForStu\";\r\nimport {MNG_GET_USER_DETAIL, U_GET_USER_DETAIL} from \"../../../../settings\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport StuBaseInformation from \"./StuBaseInformation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ProcessDoubleForStuView(){\r\n    const {userStuId}=useParams()\r\n    const {userInfo}=useContext(UserContext)\r\n    const classes2=PageView()\r\n    const classes=useStyles()\r\n    const [value,setValue]=useState()\r\n    const [userDetail,setUserDetail]=useState()\r\n\r\n    useEffect(()=>{\r\n        fetch(\r\n            `${userInfo.type==20 ? MNG_GET_USER_DETAIL:U_GET_USER_DETAIL }?stuId=${userStuId}`)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                setUserDetail(res?.data || {})\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <Page className={classes.root} title=\"学生培养过程\">\r\n            <Paper className={classes2.root}>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                    <Tabs value={value}\r\n                          onChange={(e,newValue)=>{\r\n                              setValue(newValue)\r\n                          }}\r\n                          indicatorColor=\"primary\"\r\n                          textColor=\"primary\">\r\n                        <Tab label=\"学生基础信息\" {...a11yProps(0)}/>\r\n                        <Tab label=\"学生培养过程\" {...a11yProps(1)}/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0}>\r\n                    {userDetail?.id>0 && <StuBaseInformation userDetail={userDetail}/>}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    {userDetail?.id>0 && <ProcessForStu userDetail={userDetail}/>}\r\n                </TabPanel>\r\n            </Paper>\r\n        </Page>\r\n    )\r\n}\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessConfigMngView.js",["745","746","747","748"],"import {Container, makeStyles} from \"@material-ui/core\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport ViewStyle from \"../../../../components/Style/ViewStyle\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {MNG_GET_USER_DETAIL, U_GET_USER_DETAIL} from \"../../../../settings\";\r\nimport Page from \"../../../../components/Page\";\r\nimport ProcessConfigForStu from \"../ProcessConfigForStu\";\r\n\r\nconst defaultStyles=makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ProcessConfigMngView(){\r\n    const {stuId}=useParams()\r\n    const classes=ViewStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [userDetail, setUserDetail]=useState({})\r\n\r\n    useEffect(()=>{\r\n        fetch(\r\n            `${userInfo.type==20 ? MNG_GET_USER_DETAIL:U_GET_USER_DETAIL }?stuId=${stuId}`)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                setUserDetail(res?.data || {})\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <Page classes={classes.root} title=\"学生培养过程\">\r\n            <Container maxWidth={false}>\r\n                {userDetail.stuId>0 && <ProcessConfigForStu userDetail={userDetail}/>}\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForStudent\\StudentScoreView.js",["749","750"],"import {useParams} from \"react-router-dom\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {MNG_GET_USER_DETAIL, U_GET_USER_DETAIL} from \"../../../../settings\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport Page from \"../../../../components/Page\";\r\nimport {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport ScoreForStu from \"./ScoreForStu\";\r\nimport PageView from \"../../../../components/Style/PageView\";\r\nimport PropTypes from \"prop-types\";\r\nimport ScoreGraphForStu from \"./ScoreGraphForStu\";\r\n\r\nconst defaultStyles=makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function StudentScoreView(){\r\n    const {stuId}=useParams() //这个stuId一定是学生的\r\n    const {userInfo}=useContext(UserContext)\r\n    const [userDetail,setUserDetail]=useState({})\r\n    const [value,setValue]=useState(0)\r\n    const classes=PageView()\r\n    const twoClasses=defaultStyles()\r\n\r\n    useEffect(()=>{\r\n        fetch(\r\n            `${\r\n                userInfo.type==20 ? MNG_GET_USER_DETAIL : U_GET_USER_DETAIL\r\n            }?stuId=${stuId}`,\r\n            {}\r\n        )\r\n            .then((res) => res.json())\r\n            .catch((error) => console.error(\"Error:\", error))\r\n            .then((response) => {\r\n                setUserDetail(response?.data || {});\r\n            });\r\n    },[])\r\n\r\n    return (\r\n        <Page className={twoClasses.root} title=\"季度评分\">\r\n            <Paper className={classes.root}>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                    <Tabs value={value} onChange={(e,newValue)=>{\r\n                        setValue(newValue)\r\n                    }} indicatorColor=\"primary\" textColor=\"primary\">\r\n                        <Tab label=\"季度评分\" {...a11yProps(0)}/>\r\n                        <Tab label=\"评分统计图\" {...a11yProps(1)}/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel index={0} value={value}>\r\n                    {userDetail?.id>0 && <ScoreForStu userDetail={userDetail}/>}\r\n                </TabPanel>\r\n                <TabPanel index={1} value={value}>\r\n                    {userDetail?.id>0 && <ScoreGraphForStu userDetail={userDetail}/>}\r\n                </TabPanel>\r\n            </Paper>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForStudent\\ProcessForStuView.js",["751","752","753","754","755","756","757","758","759","760","761","762"],"import {useHistory, useParams} from \"react-router-dom\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {MNG_GET_USER_DETAIL, U_GET_USER_DETAIL} from \"../../../../settings\";\r\nimport Page from \"../../../../components/Page\";\r\nimport {AppBar, Box, Button, Container, makeStyles, Paper, Tab, Tabs, Typography} from \"@material-ui/core\";\r\nimport PageView from \"../../../../components/Style/PageView\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProcessEssentialForStu from \"../ProcessEssentialForStu\";\r\nimport ProcessBaseForStu from \"../ProcessBaseForStu\";\r\nimport ViewStyle from \"../../../../components/Style/ViewStyle\";\r\nimport ProcessForStu from \"../ProcessForStu\";\r\nimport ProcessConfig from \"../processForMng/ProcessConfig\";\r\nimport theme from \"../../../../theme\";\r\nimport ProcessConfigForStu from \"../ProcessConfigForStu\";\r\nconst defaultStyles=makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ProcessForStuView(){\r\n    const {stuId}=useParams()\r\n    const classes=ViewStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const history=useHistory()\r\n    const [userDetail, setUserDetail]=useState({})\r\n\r\n    useEffect(()=>{\r\n        fetch(\r\n            `${userInfo.type==20 ? MNG_GET_USER_DETAIL:U_GET_USER_DETAIL }?stuId=${stuId}`)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                setUserDetail(res?.data || {})\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <Page classes={classes.root} title=\"学生培养过程\">\r\n            <Container maxWidth={false}>\r\n                {userDetail.id>0 && (\r\n                    (userDetail.keshuo===0 ? (\r\n                        <Paper>\r\n                            <div style={{\r\n                                backgroundColor:theme.palette.background.paper,\r\n                                padding: theme.spacing(2),\r\n                            }}>\r\n                                <div style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"space-between\",\r\n                                    paddingBottom: theme.spacing(2),\r\n                                    \"& .MuiTextField-root\": {\r\n                                        width: \"150px\",\r\n                                    },\r\n                                    \"& .MuiButton-root\": {\r\n                                        width: \"150px\",\r\n                                        height: \"40px\",\r\n                                    },\r\n                                }}>\r\n                                    <Typography color=\"textPrimary\" size=\"small\">\r\n                                        {userDetail.stuId===userInfo.stuId?\r\n                                            \"您的身份不是硕士，或者您的硕士类型未被确认，请联系管理员修改您的硕士类型。\" :\r\n                                            \"该学生的身份不是硕士，或者他的硕士类型未被确认，请修改他的硕士类型。\"\r\n                                        }\r\n                                    </Typography>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        onClick={()=>{\r\n                                            history.goBack()\r\n                                        }}>返回</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    ):(\r\n                        userDetail.studyType===0? (\r\n                            userDetail.stuId===userInfo.stuId ? (\r\n                                <ProcessConfigForStu userDetail={userDetail}/>\r\n                            ):(\r\n                                <Paper>\r\n                                    <div style={{\r\n                                        backgroundColor:theme.palette.background.paper,\r\n                                        padding: theme.spacing(2),\r\n                                    }}>\r\n                                        <div style={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"space-between\",\r\n                                            paddingBottom: theme.spacing(2),\r\n                                            \"& .MuiTextField-root\": {\r\n                                                width: \"150px\",\r\n                                            },\r\n                                            \"& .MuiButton-root\": {\r\n                                                width: \"150px\",\r\n                                                height: \"40px\",\r\n                                            },\r\n                                        }}>\r\n                                            <Typography color=\"textPrimary\" size=\"small\">\r\n                                                该学生还没有选择对应的培养过程\r\n                                            </Typography>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    history.goBack()\r\n                                                }}>返回</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Paper>\r\n                            )\r\n                        ):(\r\n                            <ProcessForStu userDetail={userDetail}/>\r\n                        )\r\n                    )))}\r\n            </Container>\r\n        </Page>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForTeacher\\ScoreView.js",[],"E:\\fudan-secsys\\my-react\\src\\theme\\typography.js",["763"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","E:\\fudan-secsys\\my-react\\src\\theme\\shadows.js",["764"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\detail\\index.js",["765"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport {\r\n  makeStyles,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport {\r\n  MNG_GET_PLAN_DETAIL_URL,\r\n  MNG_DELETE_STAGE_URL,\r\n  U_GET_PLAN_DETAIL_URL,\r\n} from \"src/settings\";\r\nimport { deleteFetch } from \"src/base\";\r\nimport corfirmModal from \"src/components/ConfirmModal\";\r\nimport alertBox from \"src/components/AlertBox\";\r\nimport WorkTable from '../components/WorkTable'\r\nimport EditStage from '../components/EditStage'\r\nimport StageButton from \"../components/StageButton\";\r\n// import EssayClasses from \"./EssayClasses\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    padding: theme.spacing(3),\r\n    \"& .MuiCard-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  header: {\r\n    backgroundColor: \"#fff\",\r\n    padding: theme.spacing(3),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"& h2\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n  stages: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    \"& .MuiButton-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  endDate: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n  },\r\n  return: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  empty: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'center'\r\n  },\r\n}));\r\nconst StudyPlanDetailView = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [plan, setPlan] = useState({})\r\n  const [currentKey, setCurrentKey] = useState(0)\r\n  const [open, setOpen] = useState(false);\r\n  const [stageDetail, setStageDetail] = useState({});\r\n  const { userInfo } = useContext(UserContext);\r\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 50;\r\n  useEffect(() => {\r\n    fetch(\r\n      `${hasPermission ? MNG_GET_PLAN_DETAIL_URL : U_GET_PLAN_DETAIL_URL}?${\r\n        hasPermission ? \"id\" : \"planId\"\r\n      }=${id}`,\r\n      {}\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => {\r\n        setPlan(response?.data || {});\r\n      });\r\n  }, [refresh]);\r\n  const currentStage = plan?.stages ? plan?.stages[currentKey] : [];\r\n  const  handleDelete = (stageId, name) => {\r\n    const cor = corfirmModal({\r\n      title: \"确定要删除改阶段吗？\",\r\n      handleCorfirm: () => {\r\n        cor.close();\r\n        deleteFetch({\r\n          url: `${MNG_DELETE_STAGE_URL}?id=${stageId}`,\r\n          successCallback: () => {\r\n            alertBox({ text: \"删除成功\", severity: \"success\" });\r\n            setRefresh(!refresh);\r\n          },\r\n        });\r\n      },\r\n    });\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box className={classes.header}>\r\n        <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n          {plan?.name || \"\"}\r\n        </Typography>\r\n        {hasPermission && (\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            添加阶段\r\n          </Button>\r\n        )}\r\n        <Button\r\n          className={classes.return}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          endIcon={<KeyboardReturnIcon />}\r\n          onClick={history.goBack}\r\n        >\r\n          返回\r\n        </Button>\r\n      </Box>\r\n      {plan?.stages?.length > 0 ? (\r\n        <>\r\n          <Box className={classes.stages}>\r\n            {plan?.stages?.map((stage, i) => (\r\n              <StageButton\r\n                text={`第${stage.term}学期 ~ 阶段${stage.index}`}\r\n                color={currentKey === i ? \"primary\" : \"default\"}\r\n                key={stage.id}\r\n                stage={stage}\r\n                handleClick={() => setCurrentKey(i)}\r\n                handleDelete={() => handleDelete(stage.id)}\r\n                handleEdit={() => {\r\n                  setStageDetail(stage);\r\n                  setOpen(true);\r\n                }}\r\n                hasPermission={hasPermission}\r\n              />\r\n            ))}\r\n          </Box>\r\n          <Divider />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            size=\"small\"\r\n            component=\"h2\"\r\n            className={classes.endDate}\r\n          >\r\n            {`截止日期：${currentStage?.endDate?.slice(0, 11) || \"--\"}`}\r\n          </Typography>\r\n          {(hasPermission || currentStage?.commonWorks?.length > 0) && (\r\n            <WorkTable\r\n              works={currentStage?.commonWorks}\r\n              workType={100}\r\n              planStageId={currentStage?.id}\r\n              refresh={() => setRefresh(!refresh)}\r\n              hasPermission={hasPermission}\r\n            />\r\n          )}\r\n          {(hasPermission || currentStage?.keshuoWorks?.length > 0) && (\r\n            <WorkTable\r\n              works={currentStage?.keshuoWorks}\r\n              workType={200}\r\n              planStageId={currentStage?.id}\r\n              refresh={() => setRefresh(!refresh)}\r\n              hasPermission={hasPermission}\r\n            />\r\n          )}\r\n          {(hasPermission || currentStage?.academicWorks?.length > 0) && (\r\n            <WorkTable\r\n              works={currentStage?.academicWorks}\r\n              workType={310}\r\n              planStageId={currentStage?.id}\r\n              refresh={() => setRefresh(!refresh)}\r\n              hasPermission={hasPermission}\r\n            />\r\n          )}\r\n          {(hasPermission || currentStage?.synthesizingWorks?.length > 0) && (\r\n            <WorkTable\r\n              works={currentStage?.synthesizingWorks}\r\n              workType={320}\r\n              planStageId={currentStage?.id}\r\n              refresh={() => setRefresh(!refresh)}\r\n              hasPermission={hasPermission}\r\n            />\r\n          )}\r\n          {(hasPermission || currentStage?.technologyWorks?.length > 0) && (\r\n            <WorkTable\r\n              works={currentStage?.technologyWorks}\r\n              workType={330}\r\n              planStageId={currentStage?.id}\r\n              refresh={() => setRefresh(!refresh)}\r\n              hasPermission={hasPermission}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Card className={classes.empty}>还未添加任何培养阶段</Card>\r\n      )}\r\n      <EditStage\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          setStageDetail({});\r\n          setRefresh(!refresh);\r\n        }}\r\n        stageDetail={stageDetail}\r\n        planId={plan.id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudyPlanDetailView;\r\n","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\index.js",["766"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\nimport { getUserInfo } from 'src/service/userService';\r\nimport { RouteWithSubRoutes } from \"src/routerGuard\";\r\n// import SockJsClient from 'react-stomp';\r\nimport { RefreshContext, UserContext} from '../Context'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = ({ routes }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({ userId: 0 });\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const [refresh,setRefresh]=useState(false)\r\n\r\n  const handleRefresh=()=>{\r\n    setRefresh((p)=>!p)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserInfo().then(res => {\r\n      if (res?.success) {\r\n        setUser(res?.data)\r\n      }\r\n    })\r\n  }, [refresh])\r\n\r\n  if (user.userId === 0) return null\r\n  return (\r\n    <UserContext.Provider value={{\r\n      userInfo: user\r\n    }}>\r\n      <div className={classes.root}>\r\n        {/* <SockJsClient url={BASE_URL+'/ws'} topics={['/topic/bulletin']}\r\n              onMessage={()=>{window.alert(\" 您有一条新的通知！\");}}\r\n        /> */}\r\n        <RefreshContext.Provider value={{\r\n          refreshValue: handleRefresh\r\n        }}>\r\n          <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n        </RefreshContext.Provider>\r\n        <NavBar\r\n          onMobileClose={() => setMobileNavOpen(false)}\r\n          openMobile={isMobileNavOpen}\r\n        />\r\n        <div className={classes.wrapper}>\r\n          <div className={classes.contentContainer}>\r\n            <div className={classes.content}>\r\n            <Switch>\r\n            {routes.map((route, i) => (\r\n              <RouteWithSubRoutes key={i} {...route}/>\r\n            ))}\r\n          </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","E:\\fudan-secsys\\my-react\\src\\layouts\\MainLayout\\index.js",["767"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\nimport { RouteWithSubRoutes } from \"src/routerGuard\";\r\nimport{Switch} from 'react-router-dom'\r\n\r\n{/**MainLayout组件的目的是提供一个TopBar，并且作为其他以/main开头页面的容器**/}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = ({ routes }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n          <Switch>\r\n          {routes.map((route, i) => (\r\n            <RouteWithSubRoutes key={i} {...route} />\r\n          ))}\r\n        </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\planAllocation\\index.js",["768","769"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Typography,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Loading from \"src/components/Loading\";\r\nimport NoData from \"src/components/NoData\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport { postFetch } from \"src/base\";\r\nimport corfirmModal from \"src/components/ConfirmModal\";\r\nimport {\r\n  MNG_GET_ALLOCATION_URL,\r\n  MNG_DELETE_ALLOCATION,\r\n  MNG_GET_USER_LIST,\r\n  MNG_ASSGIN_STUDY,\r\n} from \"src/settings\";\r\nimport { deleteFetch } from \"src/base\";\r\nimport alertBox from \"src/components/AlertBox\";\r\nimport AssignUser from \"../components/AssignUser\";\r\nimport Process from \"../components/Process\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  actions: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  td: {\r\n    maxWidth: \"200px\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    padding: \"16px\",\r\n    \"& p\": {\r\n      lineHeight: 2,\r\n    },\r\n    \"& .MuiTypography-root\": {\r\n      flex: 1,\r\n    },\r\n  },\r\n  empty: {\r\n    padding: theme.spacing(6),\r\n    textAlign: \"center\",\r\n  },\r\n  return: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  Pagination: {\r\n    padding: theme.spacing(2),\r\n    \"& .MuiPagination-ul\": {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\nconst STATUS_TYPE = {\r\n  0: {\r\n    text: \"未分配\",\r\n    color: \"#ff9d00\",\r\n  },\r\n  10: {\r\n    text: \"已分配\",\r\n    color: \"#263238\",\r\n  },\r\n  20: {\r\n    text: \"已过期\",\r\n    color: \"#ff0000\",\r\n  },\r\n};\r\n\r\nconst PlanAllocationView = () => {\r\n  const classes = useStyles();\r\n  const { planId } = useParams();\r\n  const history = useHistory();\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [userId, setUserId] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [openProcess, setOpenProcess] = useState(false);\r\n  const { userInfo } = useContext(UserContext);\r\n  const [page, setPage] = useState(1);\r\n  const [pageNo, setPageNo] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    getUserList();\r\n  }, []);\r\n  const getUserList = () => {\r\n    fetch(`${MNG_GET_USER_LIST}?planId=${planId}`, {})\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => {\r\n        setUsers(response?.data || []);\r\n      });\r\n  }\r\n  const getList = () => {\r\n    fetch(\r\n      `${MNG_GET_ALLOCATION_URL}?id=${planId}&limit=10&offset=${\r\n        (page - 1) * 10\r\n      }`,\r\n      {}\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => {\r\n        setList(response?.data || []);\r\n        setPageNo(Math.ceil(response?.paging?.total / 10) || 0);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    if (users?.length > 0) {\r\n      setOpen(true);\r\n    } else {\r\n      alertBox({ text: '没有可分配的用户' })\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setRefresh((prev) => !prev);\r\n  };\r\n\r\n  const handleDelete = (id, name, userId) => {\r\n    const cor = corfirmModal({\r\n      title: `确定要将[${name}]移出该培养计划吗？`,\r\n      handleCorfirm: () => {\r\n        cor.close()\r\n        deleteFetch({\r\n          url: `${MNG_DELETE_ALLOCATION}?id=${id}&userId=${userId}`,\r\n          successCallback: () => {\r\n            setRefresh((prev) => !prev);\r\n            getUserList();\r\n          },\r\n        });\r\n      },\r\n    });\r\n  };\r\n  const assignStudy = (userIds) => {\r\n    postFetch({\r\n      url: MNG_ASSGIN_STUDY,\r\n      values: {\r\n        planId,\r\n        userIds,\r\n      },\r\n      successCallback: () => {\r\n        alertBox({ text: \"设置成功\", severity: \"success\" });\r\n        handleClose();\r\n      },\r\n    });\r\n  };\r\n  useEffect(getList, [refresh, page]);\r\n  const hasPermission = userInfo.roleId === 10 || userInfo.roleId === 50;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card>\r\n        <Box className={classes.header}>\r\n          <Typography color=\"textPrimary\" size=\"small\">\r\n            培养计划分配\r\n          </Typography>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            onClick={handleOpen}\r\n          >\r\n            分配学员\r\n          </Button>\r\n          <Button\r\n            className={classes.return}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            endIcon={<KeyboardReturnIcon />}\r\n            onClick={history.goBack}\r\n          >\r\n            返回\r\n          </Button>\r\n        </Box>\r\n        <Divider />\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>姓名</TableCell>\r\n                <TableCell>学号</TableCell>\r\n                <TableCell>状态</TableCell>\r\n                <TableCell align=\"center\">任务总数/已完成</TableCell>\r\n                <TableCell align=\"center\">延期未完成/已完成</TableCell>\r\n                <TableCell align=\"center\">超期未完成/已完成</TableCell>\r\n                {hasPermission && <TableCell align=\"center\">操作</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {list.map((plan) => (\r\n                <TableRow hover key={plan.id}>\r\n                  <TableCell>{plan.userName}</TableCell>\r\n                  <TableCell>{plan.userStuId}</TableCell>\r\n                  <TableCell>\r\n                    <span\r\n                      style={{ color: STATUS_TYPE[plan?.status || 0]?.color }}\r\n                    >\r\n                      {STATUS_TYPE[plan?.status || 0]?.text}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {`${plan?.info.total || 0} / ${plan?.info.finished || 0}`}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {`${plan?.info.delayUnfinished || 0} / ${\r\n                      plan?.info.delayFinished || 0\r\n                    }`}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <span\r\n                      style={{\r\n                        color:\r\n                          plan?.info.overtimeUnfinished === 1\r\n                            ? \"#ff9d00\"\r\n                            : plan?.info.overtimeUnfinished > 1\r\n                            ? \"#ff0000\"\r\n                            : \"\",\r\n                      }}\r\n                    >\r\n                      {plan?.info.overtimeUnfinished || 0}\r\n                    </span>\r\n                    {` / ${plan?.info.overtimeFinished || 0}`}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {plan?.status !== 10 && (\r\n                      <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"text\"\r\n                        onClick={() => assignStudy([plan.userId])}\r\n                      >\r\n                        {plan?.status === 20 ? \"重新分配\" : \"分配任务\"}\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"text\"\r\n                      onClick={() => {\r\n                        setUserId(plan.userId);\r\n                        setOpenProcess(true);\r\n                      }}\r\n                    >\r\n                      完成进度\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"text\"\r\n                      onClick={(e) =>\r\n                        handleDelete(plan.id, plan.userName, plan.userId)\r\n                      }\r\n                    >\r\n                      删除\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n        {pageNo > 1 && (\r\n          <Pagination\r\n            className={classes.Pagination}\r\n            count={pageNo}\r\n            color=\"primary\"\r\n            onChange={(e, i) => setPage(i)}\r\n          />\r\n        )}\r\n\r\n        {loading && <Loading />}\r\n        {!loading && list?.length === 0 && <NoData msg=\"暂未分配学员\" />}\r\n      </Card>\r\n      {users?.length > 0 && (\r\n        <AssignUser\r\n          open={open}\r\n          onClose={handleClose}\r\n          users={users}\r\n          planId={planId}\r\n          assignStudy={assignStudy}\r\n        />\r\n      )}\r\n      {userId > 0 && (\r\n        <Process\r\n          open={openProcess}\r\n          onClose={() => setOpenProcess(false)}\r\n          planId={planId}\r\n          userId={userId}\r\n          refresh={() => setRefresh((prev) => !prev)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanAllocationView;\r\n","E:\\fudan-secsys\\my-react\\src\\components\\Page.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManage.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinList.js",["770","771","772","773","774","775"],"import React, {useState, useEffect, useContext} from \"react\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Button, Card, Divider, Badge,\r\n} from \"@material-ui/core\";\r\nimport Page from \"src/components/Page\";\r\nimport { GET_ALL_BULLETIN_URL, MARK_READ_ALL } from \"src/settings\";\r\nimport BulletinCard from \"./BulletinCard\";\r\nimport { postFetch } from \"src/base\";\r\nimport {UserContext} from \"../../layouts/Context\";\r\nimport ContentStyle from \"../../components/Style/ContentStyle\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\r\n\r\nconst BulletinList = () => {\r\n    const classes=ContentStyle()\r\n    const [refresh,setRefresh]=useState(false)\r\n    const {userInfo}=useContext(UserContext)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [page,setPage]=useState(1)\r\n    const [bulletins, setBulletins] = useState([]); //所有通知\r\n    //向后台调取所有通知\r\n\r\n    const getAllBulletin = ({page}) => {//只调取属于自己的通知\r\n        fetch(`${GET_ALL_BULLETIN_URL}?stuId=${userInfo.stuId}&limit=${10}&offset=${(page-1)*10}`, {})\r\n            .then((res) => res.json())\r\n            .catch((error) => console.error(\"Error:\", error))\r\n            .then((response) => {\r\n                setBulletins(response?.data || []);\r\n                setPageNo(Math.ceil(response?.paging.total /10) || 0)\r\n            });\r\n    };\r\n\r\n    const handleReadAll=()=>{ //全部已读\r\n        fetch(`${MARK_READ_ALL}?stuId=${userInfo.stuId}`,{\r\n            method:\"POST\"\r\n        })\r\n            .then(()=>{\r\n                // setRefresh((p)=>!p)\r\n                window.location.reload()\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllBulletin({page})\r\n    }, [page, pageNo, refresh]);\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h4\">\r\n                        通知记录\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={() =>{\r\n                            handleReadAll()\r\n                        }\r\n                        }\r\n                    >\r\n                        全部已读\r\n                    </Button>\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    {bulletins.map((bul) => (\r\n                        <BulletinCard\r\n                            refresh={()=>{\r\n                                setRefresh((p)=>!p)\r\n                            }}\r\n                            bulletin={bul}\r\n                        />\r\n                    ))}\r\n\r\n                </Box>\r\n                {pageNo > 1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e, i) => setPage(i)}\r\n                    />\r\n                )}\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BulletinList;\r\n","E:\\fudan-secsys\\my-react\\src\\layouts\\Context.js",[],"E:\\fudan-secsys\\my-react\\src\\settings.js",["776"],"\r\nexport const RoleName= {\r\n    0:\"普通用户\",\r\n    1:\"管理员\"\r\n}\r\n\r\n{/**这应该是向后台调取服务的地址**/}\r\n\r\n//本地开发环境\r\n// export const BASE_URL = 'http://localhost:8080';\r\n//部署开发环境\r\nexport const BASE_URL ='http://localhost:8088/v1'\r\n// export const BASE_URL ='http://localhost:18888'\r\n//export const BASE_URL = 'http://10.176.36.7:8088/v1'\r\n\r\n// 解决跨域问题临时使用\r\n//export const BASE_URL = \"http://:80/v1\";\r\n// export const BASE_URL = \"http://localhost/v1\";\r\n// export const BASE_URL = \"http://fd.foxbank.cn\";\r\n// export const BASE_URL = \"http://fd.foxzz.cn\";\r\n\r\n/**\r\n * MNG_: 管理员\r\n * U_: 普通用户\r\n */\r\n\r\n//登录、用户管理\r\nexport const USER_INFO = BASE_URL + \"/u/user/info\";\r\nexport const LOGIN_URL = BASE_URL + \"/u/user/login\";\r\nexport const RESET_PASSWORD_URL = BASE_URL + \"/u/user/reset\";\r\nexport const MNG_RESET_PASSWORD_URL =BASE_URL + \"/mng/user/reset\";\r\nexport const ADD_USER_URL = BASE_URL + \"/mng/user/add\";\r\nexport const MNG_UPDATE_USER_URL = BASE_URL + \"/mng/user/update\";\r\nexport const MNG_UPDATE_USERGROUP_URL =BASE_URL+\"/mng/user/updateGroup\";\r\nexport const U_UPDATE_USER_URL = BASE_URL + \"/u/user/update\";\r\nexport const DELETE_USER_URL = BASE_URL + \"/mng/user/delete\";\r\nexport const GET_ALL_USER_URL = BASE_URL + \"/mng/user/paging\";\r\nexport const MNG_GET_USER_DETAIL = BASE_URL + \"/mng/user/detail\";\r\nexport const U_GET_USER_DETAIL = BASE_URL + \"/u/user/detail\";\r\nexport const MNG_GET_ALL_USER=BASE_URL+\"/mng/user/list\";\r\nexport const MNG_GET_ONE_STUDENT_DETAIL_URL=BASE_URL+\"/mng/user/oneStudent\";\r\nexport const MNG_GET_STUDENT_List = BASE_URL + \"/mng/user/studentList\";\r\n\r\n//会议安排\r\nexport const ADD_SEMINAR_URL = BASE_URL + \"/seminar/add\";\r\nexport const UPDATE_SEMINAR_URL = BASE_URL + \"/seminar/update\";\r\nexport const DELETE_SEMINAR_URL = BASE_URL + \"/seminar/delete\";\r\nexport const GET_ALL_SEMINAR_URL = BASE_URL + \"/seminar/paging\";\r\nexport const ADD_SEMINAR_LINK_URL = BASE_URL + \"/seminar/addlink\";\r\nexport const UPLOAD_SEMINAR_URL = BASE_URL + \"/seminar/upload\";\r\nexport const DOWNLOAD_SEMINAR_URL = BASE_URL + \"/seminar/download\"\r\n\r\n//专题安排\r\nexport const GET_ALL_SECTION_URL = BASE_URL + \"/section/paging\";\r\nexport const ADD_SECTION_URL = BASE_URL + \"/section/add\";\r\nexport const DELETE_SECTION_URL = BASE_URL + \"/section/delete\";\r\nexport const UPDATE_SECTION_URL = BASE_URL + \"/section/update\";\r\nexport const UPLOAD_SECTION_URL = BASE_URL + \"/section/upload\";\r\nexport const DOWNLOAD_SECTION_URL = BASE_URL + \"/section/download\";\r\n\r\n//辅读安排\r\nexport const ADD_RECORDER_URL = BASE_URL + \"/recorder/add\";\r\nexport const GET_ALL_RECORDER_URL = BASE_URL + \"/recorder/paging\";\r\nexport const DELETE_RECORDER_URL = BASE_URL + \"/recorder/delete\";\r\nexport const UPDATE_BATTLE__URL = BASE_URL + \"/recorder/updateBattle\";\r\n\r\nexport const UPLOAD_RECORDER_URL = BASE_URL + \"/recorder/recorderUpload\";\r\nexport const MNG_RESET_GROUPID = BASE_URL + \"/mng/user/resetGroup\"\r\nexport const MNG_UPDATE_RECORDER = BASE_URL + \"/recorder/update\"\r\n\r\nexport const UPLOAD_RECORDER1_URL = BASE_URL + \"/recorder/uploadRecorder1\";\r\nexport const UPLOAD_RECORDER2_URL = BASE_URL + \"/recorder/uploadRecorder2\";\r\nexport const UPLOAD_SUMMARY_URL = BASE_URL + \"/recorder/uploadSummary\";\r\nexport const DOWNLOAD_RECORDER1_URL = BASE_URL + \"/recorder/downloadRecorder1\";\r\nexport const DOWNLOAD_RECORDER2_URL = BASE_URL + \"/recorder/downloadRecorder2\";\r\nexport const DOWNLOAD_SUMMARY_URL = BASE_URL + \"/recorder/downloadSummary\";\r\nexport const DOWNLOAD_RECORDER_URL = BASE_URL + \"/recorder/downloadRecorder\";\r\nexport const DOWNLOAD_SUMMARIZER_URL = BASE_URL + \"/recorder/downloadSummarizer\";\r\n\r\n//推荐论文\r\nexport const GET_ALL_CLASS_URL = BASE_URL + \"/article/category/list\";\r\nexport const EDIT_CLASS_URL =BASE_URL+ \"/article/category/edit\";\r\nexport const ADD_CLASS_URL = BASE_URL + \"/article/category/add\";\r\nexport const DELETE_CLASS_URL = BASE_URL + \"/article/category/delete\";\r\n\r\nexport const GET_ALL_ARTICLE_URL = BASE_URL + \"/article/paging\";\r\nexport const GET_ARTICLE_URL = BASE_URL + \"/article/\";\r\nexport const ADD_ARTICLE_URL = BASE_URL + \"/article/add\";\r\nexport const EDIT_ARTICLE_URL = BASE_URL + \"/article/edit\";\r\nexport const DELETE_ARTICLE_URL = BASE_URL + \"/article/delete\";\r\n\r\n//周报\r\nexport const STU_GET_PUBLICATION = BASE_URL+\"/mng/weeklyPublication/paging\";\r\nexport const UPLOAD_WEEKLYPUBLICATION = BASE_URL+\"/mng/weeklyPublication/upload\";\r\nexport const DELETE_WEEKLYPUBLICATION = BASE_URL+\"/mng/weeklyPublication/delete\";\r\nexport const DOWNLOAD_WEEKLYPUBLICATION = BASE_URL+\"/mng/weeklyPublication/download\";\r\nexport const MENTOR_GET_PUBLICATION=BASE_URL+\"/mng/weeklyPublication/mentor/paging\";\r\nexport const MENTOR_STATISTICS_PUBLICATION = BASE_URL+\"/mng/weeklyPublication/mentor/statistics\"\r\nexport const UPDATE_WEEKLYPUBLICATION=BASE_URL +\"/mng/weeklyPublication/update\";\r\nexport const GROUPLEADER_GET_PUBLICATION = BASE_URL +　\"/mng/weeklyPublication/groupLeader/paging\";\r\nexport const GROUPLEADER_STATISTICS_PUBLICATION=BASE_URL+\"/mng/weeklyPublication/groupLeader/statistics\"\r\nexport const BOSS_GET_PUBLICATION=BASE_URL+\"/mng/weeklyPublication/boss/paging\";\r\nexport const MANAGER_GET_PUBLICATION=BASE_URL+\"/mng/weeklyPublication/manager/paging\";\r\nexport const MANAGER_STATISTICS_PUBLICATION=BASE_URL+\"/mng/weeklyPublication/manager/statistics\";\r\n\r\n//Lab\r\nexport const GET_LAB_DATA = BASE_URL+\"/lab/labData\"\r\nexport const GET_LAB_NAME = BASE_URL+\"/lab/labName\"\r\nexport const DELETE_LAB_DATA = BASE_URL+\"/lab/deleteLabData\"\r\nexport const UPLOAD_LAB_DATA = BASE_URL+\"/lab/uploadLabData\"\r\n\r\n//培养计划 管理员\r\nexport const MNG_GET_ALL_PLAN_URL = BASE_URL + \"/mng/study/plan/paging\";\r\nexport const MNG_ADD_PLAN_URL = BASE_URL + \"/mng/study/plan/add\";\r\nexport const MNG_UPDATE_PLAN_URL = BASE_URL + \"/mng/study/plan/update\";\r\nexport const MNG_DELETE_PLAN_URL = BASE_URL + \"/mng/study/plan/delete\";\r\nexport const MNG_GET_PLAN_DETAIL_URL = BASE_URL + \"/mng/study/plan/overview\";\r\nexport const MNG_ADD_WORK_URL = BASE_URL + \"/mng/study/plan/work/add\";\r\nexport const MNG_UPDATE_WORK_URL = BASE_URL + \"/mng/study/plan/work/update\";\r\nexport const MNG_DELETE_WORK_URL = BASE_URL + \"/mng/study/plan/work/delete\";\r\nexport const MNG_ADD_STAGE_URL = BASE_URL + \"/mng/study/plan/stage/add\";\r\nexport const MNG_UPDATE_STAGE_URL = BASE_URL + \"/mng/study/plan/stage/update\";\r\nexport const MNG_DELETE_STAGE_URL = BASE_URL + \"/mng/study/plan/stage/delete\";\r\nexport const GET_ALL_STUDENT_URL = BASE_URL + \"/mng/user/student\";\r\nexport const GET_ALL_STUDENT_FROMMENTOR_URL = BASE_URL+ \"/mng/user/mentorStudent\";\r\nexport const GET_MASTER_FROMMENTOR_URL = BASE_URL+\"/mng/user/master\";\r\nexport const MNG_GET_ALLOCATION_URL =\r\n  BASE_URL + \"/mng/study/plan/allocation/info/list\";\r\nexport const MNG_ASSGIN_STUDY = BASE_URL + \"/mng/study/plan/assign\";\r\nexport const MNG_DELETE_ALLOCATION = BASE_URL + \"/mng/study/plan/allocation/delete\";\r\n// export const MNG_GET_ALLOCATION_INfO = BASE_URL + \"/mng/study/plan/allocation/info\";\r\nexport const MNG_GET_ALLOCATION_INfO =\r\n  BASE_URL + \"/mng/study/plan/allocation/user/overview\";\r\nexport const MNG_EDIT_ALLOCATION= BASE_URL + \"/mng/study/plan/allocation/edit\";\r\nexport const MNG_GET_USER_LIST = BASE_URL + \"/mng/user/allocation/list\";\r\nexport const MNG_ADD_SCORE =BASE_URL+ \"/mng/study/score/add\";\r\nexport const MNG_UPDATE_SCORE =BASE_URL+\"/mng/study/score/update\";\r\nexport const MNG_RETURN_SCORE=BASE_URL+\"/mng/study/score/return\";\r\nexport const MNG_RETURN_SCORE_VITAL=BASE_URL +\"/mng/study/score/vital\"\r\nexport const MNG_RETURN_SINGLESCORE=BASE_URL+\"/mng/study/score/returnSingle\"\r\nexport const MNG_DELETE_SCORE=BASE_URL+\"/mng/study/score/delete\";\r\nexport const MNG_GET_SCORE_DATE=BASE_URL+\"/mng/study/score/getDate\";\r\nexport const GET_SCORE_UNDONELIST = BASE_URL+\"/mng/study/score/mentorStatics\"\r\nexport const MNG_GET_UNDONE_SCORE=BASE_URL+\"/mng/study/score/unDone\";\r\nexport const MNG_GET_PROCESS_LIST=BASE_URL+ \"/mng/study/process/paging\";\r\nexport const MNG_ESSENTIAL_PROCESS_INIT=BASE_URL+ \"/mng/study/process/essential/init\";\r\n//初始化必要任务\r\nexport const MNG_BASE_PROCESS_INIT=BASE_URL+\"/mng/study/process/base/init\";\r\nexport const MNG_ADV_PROCESS_INIT=BASE_URL+\"/mng/study/process/adv/init\";\r\nexport const MNG_PROCESS_ADD=BASE_URL+ \"/mng/study/process/add\";\r\nexport const MNG_PROCESS_RESET=BASE_URL +\"/mng/study/process/reset\";\r\nexport const MNG_PROCESS_UPDATE=BASE_URL+\"/mng/study/process/update\";\r\nexport const MNG_PROCESS_GROUPDONE=BASE_URL+\"/mng/study/process/groupDone\"\r\nexport const MNG_PROCESS_GROUPDELAY=BASE_URL+\"/mng/study/process/groupDelay\"\r\nexport const MNG_PROCESS_GROUP_APPROVE=BASE_URL+\"/mng/study/process/groupApprove\"\r\nexport const MNG_PROCESS_GROUP_APPROBE_DELAY=BASE_URL+\"/mng/study/process/groupApproveDelay\"\r\nexport const MNG_PROCESS_DELETE=BASE_URL+ \"/mng/study/process/delete\";\r\nexport const MNG_RECONFIG_PROCESS=BASE_URL+\"/mng/study/process/reConfig\"\r\nexport const MNG_PROCESS_GROUP_UPDATE=BASE_URL+\"/mng/study/process/groupUpdate\"\r\nexport const MNG_PROCESS_GET_STUMISSIONSTATUS=BASE_URL+\"/mng/study/process/getMissionStatus\"\r\nexport const MNG_PROCESS_GET_COUNT=BASE_URL+\"/mng/study/process/count\"\r\nexport const MNG_PROCESS_GET_STUDENT = BASE_URL+\"/mng/study/process/student\"\r\nexport const PROCESS_GET_MASTERFROMMENTOR_TOTAL = BASE_URL+\"/mng/study/process/total\"\r\nexport const MNG_GET_ALL_PROCESS_APPROVE = BASE_URL+\"/mng/study/process/getAllApprove\"\r\nexport const MNG_GET_PROCESS_APPLY_COUNT = BASE_URL+\"/mng/study/process/getAllApplyCount\"\r\nexport const MNG_GET_ALL_PROCESS_DELAY= BASE_URL+\"/mng/study/process/getAllDelay\"\r\nexport const MNG_GET_ALL_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/category/paging\"\r\nexport const MNG_ADD_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/category/add\"\r\nexport const MNG_RESET_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/category/reset\"\r\nexport const MNG_DELETE_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/category/delete\"\r\nexport const MNG_UPDATE_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/category/update\"\r\nexport const MNG_ADD_TINY_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/tinyCategory/add\"\r\nexport const MNG_GET_TINY_PROCESS_CATEGORY=BASE_URL+\"/mng/study/process/tinyCategory/paging\"\r\nexport const PROCESS_GET_GRADUATE_INFORMATION = BASE_URL+\"/mng/study/process/graduate\"\r\n\r\n//培养计划 普通用户\r\nexport const U_GET_ALL_PLAN_URL = BASE_URL + \"/u/study/plan/allocation/list\";\r\nexport const U_GET_PLAN_DETAIL_URL = BASE_URL + \"/u/study/plan/allocation/overview\";\r\nexport const U_EDIT_ALLOCATION = BASE_URL + \"/u/study/plan/allocation/edit\";\r\n\r\n//通告管理\r\nexport const MNG_ADD_BULLETIN_URL = BASE_URL + \"/mng/bulletin/add\";\r\nexport const MNG_UPDATE_BULLETIN_URL = BASE_URL + \"/mng/bulletin/update\";\r\nexport const MNG_DELETE_BULLETIN_URL = BASE_URL + \"/mng/bulletin/delete\";\r\nexport const MNG_GET_ALL_BULLETIN_URL = BASE_URL + \"/mng/bulletin/paging\";\r\nexport const GET_ALL_BULLETIN_URL = BASE_URL + \"/u/bulletin/paging\";\r\nexport const GET_NEW_BULLETIN_NUMBER_URL =\r\n  BASE_URL + \"/u/bulletin/newBulletinNumber\";\r\nexport const MARK_AS_READ_URL = BASE_URL + \"/u/bulletin/read\";\r\nexport const MARK_READ_ALL = BASE_URL + \"/u/bulletin/read/all\";\r\nexport const GET_BULLETIN_STATE = BASE_URL + \"/u/bulletin/state\";\r\n\r\n//设备管理\r\nexport const MNG_ADD_DEVICE_URL = BASE_URL + \"/mng/device/add\";\r\nexport const MNG_UPDATE_DEVICE_URL = BASE_URL + \"/mng/device/update\";\r\nexport const U_GET_ALL_DEVICE_URL = BASE_URL + \"/u/device/paging\";\r\nexport const MNG_GET_ALL_DEVICE_URL = BASE_URL + \"/mng/device/paging\";\r\nexport const MNG_DELETE_DEVICE_URL = BASE_URL + \"/mng/device/delete\";\r\nexport const U_APPLY_DEVICE_URL = BASE_URL + \"/u/device/allocation/apply\";\r\nexport const U_RETURN_DEVICE_URL = BASE_URL + \"/u/device/allocation/return\";\r\nexport const MNG_RETURN_DEVICE_URL = BASE_URL + \"/mng/device/allocation/return\";\r\nexport const U_DEVICE_USAGE_URL = BASE_URL + \"/u/device/usage/paging\";\r\nexport const MNG_DEVICE_USAGE_URL = BASE_URL + \"/mng/device/usage/paging\";\r\nexport const U_DEVICE_ALLOCATION_URL = BASE_URL + \"/u/device/allocation/paging\";\r\nexport const MNG_DEVICE_ALLOCATION_URL = BASE_URL + \"/mng/device/allocation/paging\";\r\n","E:\\fudan-secsys\\my-react\\src\\components\\Style\\ViewStyle.js",["777"],"import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst ViewStyle=makeStyles((theme)=>({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n            minHeight: \"100%\",\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3),\r\n    },\r\n}))\r\n\r\nexport default ViewStyle\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorderGroup\\eachRecorderGroup\\RecorderGroupForMng.js",["778"],"import ContentStyle from \"../../../../components/Style/ContentStyle\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider, Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {getAllStudent} from \"../../../../service/userService\";\r\nimport {MNG_GET_ALL_USER, MNG_RESET_GROUPID, MNG_UPDATE_USER_URL} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\nconst GROUP=[\r\n    {\r\n        id: 0,\r\n        name:\"所有组\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name:\"1组\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name:\"2组\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name:\"3组\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name:\"4组\"\r\n    }\r\n]\r\n\r\nexport default function RecorderGroupForMng(){\r\n    const classes=ContentStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [name,setName]=useState(\"\") //设置搜索的名字\r\n    const [students,setStudents]=useState([]) //从后台获取学生信息\r\n    const [groupId,setGroupId]=useState(0) //groupId\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n\r\n    const talkPermission= userInfo.isTalkMng===1 //是否是讨论班管理员\r\n    const teacherPermission=userInfo.type===20//是否是老师\r\n\r\n    const handleReset=()=>{//重置分组\r\n        fetch(MNG_RESET_GROUPID,{\r\n            method:\"POST\"\r\n        }).then(()=>{\r\n            alertBox({text:\"重置成功\",severity: \"success\" })\r\n            setGroupId(0)\r\n            setRefresh((prev)=>!prev)\r\n        })\r\n    }\r\n\r\n    const handleGroupChanged=(student,groupId)=>{ //分组变化\r\n        postFetch({\r\n            url:MNG_UPDATE_USER_URL,\r\n            values:{\r\n                id: student.id,\r\n                groupId: groupId\r\n            },\r\n            successCallback:()=>{\r\n                setRefresh((prev)=>!prev)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllStudent({page,groupId,name}).then((res)=>{\r\n            setStudents(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total /10) || 0)\r\n        })\r\n    },[refresh, page, pageNo, name, groupId])\r\n\r\n    return (\r\n        <div >\r\n            <Card>\r\n                <Box className={classes.header}>\r\n\r\n                    {(teacherPermission || talkPermission) && (\r\n                        <TextField\r\n                            select\r\n                            label=\"组号\"\r\n                            size=\"small\"\r\n                            value={groupId}\r\n                            onChange={(e)=>{\r\n                                setPage(1)\r\n                                if(pageNo>0){\r\n                                    setPageNo(1)\r\n                                }\r\n                                setGroupId(parseInt(e.target.value))\r\n                            }}\r\n                            SelectProps={{\r\n                                native:true\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {GROUP.map((option)=>(\r\n                                <option key={option.id} value={option.id}>\r\n                                    {option.name}\r\n                                </option>\r\n                            ))}\r\n                        </TextField>\r\n                    )}\r\n\r\n                    {(talkPermission || teacherPermission) && (\r\n                        <div>\r\n                            <TextField\r\n                                label=\"搜索学生\"\r\n                                size=\"small\"\r\n                                onChange={(e)=>{\r\n                                    setPage(1)\r\n                                    setName(e.target.value)\r\n                                }}/>\r\n\r\n                            <Divider/>\r\n\r\n                            {talkPermission && (\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={handleReset}\r\n                                >重置分组</Button>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>学生姓名</TableCell>\r\n                            <TableCell align=\"center\">学/工号</TableCell>\r\n                            <TableCell align=\"center\">组号</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {students.map(student=>(\r\n                            <TableRow>\r\n                                <TableCell>{student.name}</TableCell>\r\n                                <TableCell align=\"center\">{student.stuId}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {talkPermission?(//是否有讨论班管理员的权限\r\n                                        <TextField\r\n                                            select\r\n                                            label=\"所在组\"\r\n                                            size=\"small\"\r\n                                            value={student.groupId}\r\n                                            variant=\"outlined\"\r\n                                            onChange={(e)=>{\r\n                                                handleGroupChanged(student, parseInt(e.target.value))\r\n                                            }}\r\n                                            SelectProps={{\r\n                                                native:true\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                GROUP.map((group)=>(\r\n                                                    <option key={group.id} value={group.id}>\r\n                                                        {group.id}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </TextField>\r\n                                    ): (student.groupId)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n\r\n                {pageNo>1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}\r\n                    />\r\n                )}\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorderGroup\\eachRecorderGroup\\RecorderGroupForStu.js",["779"],"import ContentStyle from \"../../../../components/Style/ContentStyle\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {Box, Card, Divider, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport {getAllStudent} from \"../../../../service/userService\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\nexport default function RecorderGroupForStu(){\r\n    const classes=ContentStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const groupId=userInfo.groupId\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [groupStudent,setGroupStudent]=useState([])\r\n\r\n    useEffect(()=>{\r\n        getAllStudent({page,groupId}).then((res)=>{\r\n            setGroupStudent(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total /10) || 0)\r\n        })\r\n    },[page, pageNo])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        我所在的组：{userInfo.groupId}\r\n                    </Typography>\r\n\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>组内成员</TableCell>\r\n                            <TableCell align=\"center\">学/工号</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    {userInfo.groupId>0 && (\r\n                        <TableBody>\r\n                            {groupStudent.map((student)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{student.name}</TableCell>\r\n                                    <TableCell align=\"center\">{student.stuId}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    )}\r\n                </Table>\r\n\r\n                {(pageNo>1&&userInfo.groupId>0) && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}\r\n                    />\r\n                )}\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForTeacher\\ScoreForTea.js",["780","781","782","783","784","785"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {\r\n    GET_SCORE_UNDONELIST,\r\n    MNG_GET_SCORE_DATE,\r\n    MNG_RETURN_SINGLESCORE,\r\n    MNG_UPDATE_SCORE\r\n} from \"../../../../settings\";\r\nimport {\r\n    Box, Button,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ContentStyle from \"../../../../components/Style/ContentStyle\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport ScoreStudentComment from \"../scoreForm/ScoreStudentComment\";\r\nimport TeaCommentForTeaForm from \"../scoreForm/TeaCommentForTeaForm\";\r\nimport ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\n\r\nconst Role={\r\n    0: \"硕士\",\r\n    10: \"博士\"\r\n}\r\n\r\nexport default function ScoreForTea(){\r\n    const classes = ContentStyle()\r\n    const [page, setPage] = useState(1);\r\n    const [pageNo, setPageNo] = useState(0);\r\n    const {userInfo}=useContext(UserContext);\r\n    const [date,setDate]=useState([]); //所有的已经评分的年份和季度\r\n    const [nowDate,setNowDate]=useState(0);//当前查看的评分年份和季度的数组下标，所以默认是0\r\n    const [scoreData,setScoreData]=useState([])\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [scoreDetail, setScoreDetail]=useState({})\r\n    const [commentOpen, setCommentOpen]=useState(false)\r\n    const [teaCommentOpenForTea,setTeaCommentOpenForTea]=useState(false)\r\n    const [undoneList, setUndoneList] = useState([])\r\n\r\n    const getUserLastScore = async ({name=userInfo.name, page, limit=10, year, season, sort=0})=>{\r\n        try{\r\n            let response = await  fetch(\r\n                `${MNG_RETURN_SINGLESCORE}?limit=${limit}&offset=${(page-1)*limit}&name=${name}&year=${year}&season=${season}&sort=${sort}`)\r\n            return await response.json()\r\n        }catch (error){\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const getDate=async ()=>{//获取已经评分过的年份和季度\r\n        try {\r\n            let response=await fetch(MNG_GET_SCORE_DATE,{})\r\n            return await response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getUndoneList=({year, season, mentor})=>{\r\n        fetch(`${GET_SCORE_UNDONELIST}?year=${year}&season=${season}&mentor=${mentor}`,{method:\"GET\"})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setUndoneList(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const getNameLine=()=>{\r\n        let nameLine=\"\"\r\n        undoneList.map((l,index)=>{\r\n            let s= index==0 ? l : \"，\"+l\r\n            nameLine=nameLine+s\r\n        })\r\n        return nameLine\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDate().then((res)=>{\r\n            setDate(res?.data || [])\r\n            getUserLastScore({page, year:res.data[nowDate].year, season:res.data[nowDate].season}).then((res)=>{\r\n                setScoreData(res?.data || [])\r\n                setPageNo(Math.ceil(res?.paging?.total / 10) || 0)\r\n            })\r\n            getUndoneList({year:res.data[nowDate].year, season:res.data[nowDate].season, mentor:userInfo.name})\r\n        })\r\n\r\n\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getUserLastScore({page, year:date[nowDate]?.year, season:date[nowDate]?.season}).then((res)=>{\r\n            setScoreData(res?.data || [])\r\n        })\r\n    },[page, refresh])\r\n\r\n    useEffect(()=>{\r\n        getUserLastScore({page:1, year:date[nowDate]?.year, season:date[nowDate]?.season}).then((res)=>{\r\n            setScoreData(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total / 10) || 0)\r\n            setPage(1)\r\n        })\r\n    },[nowDate])\r\n\r\n    useEffect(()=>{\r\n        getUndoneList({year:date[nowDate]?.year, season:date[nowDate]?.season, mentor:userInfo.name})\r\n    },[nowDate])\r\n\r\n    const handleScoreChange=(data, newScore)=>{\r\n        const cor = confirmModal({\r\n            title:\"确定要修改评分吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_UPDATE_SCORE,\r\n                    values:{\r\n                        id: data.id,\r\n                        score: newScore\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"修改成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={ContentStyleForPage().root}>\r\n            <div className={ContentStyleForPage().header}>\r\n                {date.length===0?(\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        请先让学生完成自评\r\n                    </Typography>\r\n                ):(\r\n                    <>\r\n                        <Typography color=\"textPrimary\" size=\"small\">\r\n                            季度评分\r\n                        </Typography>\r\n\r\n                        <TextField\r\n                            size=\"medium\"\r\n                            select\r\n                            variant=\"outlined\"\r\n                            value={nowDate}\r\n                            onChange={(e)=>{\r\n                                setNowDate(parseInt(e.target.value))\r\n                            }}\r\n                            SelectProps={{\r\n                                native:true\r\n                            }}\r\n                        >\r\n                            {date.map((d,index)=>(\r\n                                //因为d是一个具体的对象，不能直接把它赋给value，所以我们换个思路，将数组下标赋值给value\r\n                                <option value={index}>\r\n                                    {d.year}年第{d.season}季\r\n                                </option>\r\n                            ))}\r\n                        </TextField>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                未完成本季度自评的人员名单：  {getNameLine()}\r\n            </Typography>\r\n\r\n            <br/>\r\n\r\n            <Divider/>\r\n\r\n            <Box minWidth={800}>\r\n                {date.length!==0 && (\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>姓名</TableCell>\r\n                                <TableCell align=\"center\">学/工号</TableCell>\r\n                                <TableCell align=\"center\">类型</TableCell>\r\n                                <TableCell align=\"center\">季度自评</TableCell>\r\n                                <TableCell align=\"center\">季度评分</TableCell>\r\n                                <TableCell align=\"center\">导师评语</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            { scoreData.map((data,index) => {\r\n                                return (\r\n                                    <TableRow hover key={data.id}>\r\n                                        <TableCell>{data.stuName}</TableCell>\r\n                                        <TableCell align=\"center\">{data.stuId}</TableCell>\r\n                                        <TableCell align=\"center\">{Role[data.stuType]}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{\r\n                                                    setScoreDetail(data)\r\n                                                    setCommentOpen(true)\r\n                                                }}>查看学生自评</Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <TextField\r\n                                                select\r\n                                                size=\"small\"\r\n                                                value={data.score}\r\n                                                variant=\"outlined\"\r\n                                                onChange={(e)=>{\r\n                                                    handleScoreChange(data, parseInt(e.target.value))\r\n                                                }}\r\n                                                SelectProps={{native:true}}\r\n                                            >\r\n                                                <option key={0} value={0}>0</option>\r\n                                                <option key={1} value={1}>1</option>\r\n                                                <option key={2} value={2}>2</option>\r\n                                                <option key={3} value={3}>3</option>\r\n                                                <option key={4} value={4}>4</option>\r\n                                                <option key={5} value={5}>5</option>\r\n                                            </TextField>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell align=\"center\">\r\n                                            {data.teaComment ? (\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        setTeaCommentOpenForTea(true)\r\n                                                        setScoreDetail(data)\r\n                                                    }}\r\n                                                >修改导师评价</Button>\r\n                                            ): (\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        setTeaCommentOpenForTea(true)\r\n                                                        setScoreDetail(data)\r\n                                                    }}\r\n                                                >添加导师评价</Button>\r\n                                            )}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"text\"\r\n                                                href={`/app/studyPlan/stuScore/${data.stuId}`}\r\n                                            >查看季度评分表\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                )}\r\n                {(pageNo > 1 && date.length!==0) && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        page={page}\r\n                        color=\"primary\"\r\n                        onChange={(e, i) => {\r\n                            setPage(i)\r\n                        }}\r\n                    />\r\n                )}\r\n            </Box>\r\n\r\n            <ScoreStudentComment open={commentOpen}\r\n                                 onClose={()=>{\r\n                                     setCommentOpen(false)\r\n                                     setRefresh((p)=>!p)\r\n                                     setScoreDetail({})\r\n                                 }}\r\n                                 scoreDetail={scoreDetail}\r\n            />\r\n\r\n\r\n            <TeaCommentForTeaForm open={teaCommentOpenForTea}\r\n                                  onClose={()=>{\r\n                                      setTeaCommentOpenForTea(false)\r\n                                      setRefresh((p)=>!p)\r\n                                      setScoreDetail({})\r\n                                  }}\r\n                                  scoreDetail={scoreDetail}/>\r\n        </div>);\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessConfigForStu.js",["786","787","788","789","790","791"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n    MNG_GET_ALL_PROCESS_CATEGORY,\r\n    MNG_GET_TINY_PROCESS_CATEGORY,\r\n    MNG_PROCESS_ADD, MNG_PROCESS_RESET,\r\n    MNG_UPDATE_USER_URL\r\n} from \"../../../settings\";\r\nimport { Checkbox } from '@mui/material'\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../base\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst STUDYTYPE={\r\n    1:\"学硕\",\r\n    2:\"专硕\",\r\n    3:\"学工\"\r\n}\r\n\r\nconst TYPES=[\r\n    {\r\n        value:1,\r\n        name:\"学术科研\",\r\n    },\r\n    {\r\n        value:2,\r\n        name:\"专业技术\",\r\n    },\r\n    {\r\n        value:3,\r\n        name:\"思政服务\"\r\n    }\r\n]\r\n\r\nexport default function ProcessConfigForStu(props){\r\n    const {userDetail}=props\r\n    const {userInfo}=useContext(UserContext)\r\n    const classes=ContentStyleForPage()\r\n    const history=useHistory()\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [type,setType]=useState(()=>{\r\n        if(userDetail.keshuo!==3){\r\n            return 1\r\n        }\r\n        else{\r\n            return 3\r\n        }\r\n    })\r\n    const [baseTinyCategory,setBaseTinyCategory]=useState([])//基础任务的大类别\r\n    const [baseCategory,setBaseCategory]=useState([])//基础任务的小类别\r\n    const [advTinyCategory,setADVTinyCategory]=useState([])\r\n    const [advCategory,setADVCategory]=useState([])\r\n    let advTinyCategoryList=[]\r\n\r\n    const mngPermission= userInfo.isEducateMng===1\r\n\r\n    const getBaseTiny=()=>{\r\n        fetch(`${MNG_GET_TINY_PROCESS_CATEGORY}?type=${0}&studyType=${userDetail.keshuo}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setBaseTinyCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const getBaseCategory=()=>{\r\n        fetch(`${MNG_GET_ALL_PROCESS_CATEGORY}?type=${0}&studyType=${userDetail.keshuo}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setBaseCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const getADVTiny=()=>{\r\n        fetch(`${MNG_GET_TINY_PROCESS_CATEGORY}?type=${type}&studyType=${userDetail.keshuo}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setADVTinyCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const getADVCategory=()=>{\r\n        fetch(`${MNG_GET_ALL_PROCESS_CATEGORY}?type=${type}&studyType=${userDetail.keshuo}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setADVCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleSubmit=()=>{\r\n        if(advTinyCategoryList.length ===0){\r\n            alertBox({text:\"请至少选择一项进阶任务\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(!mngPermission){\r\n            const cor=confirmModal({\r\n                title:\"只有一次提交机会，请先和导师商量好再做决定\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    let advCategoryList=[]\r\n                    advTinyCategoryList.map((advList)=>{//遍历选中的进阶任务的大类\r\n                        advCategory.map((category)=>{\r\n                            if(advList.processCategory===category.processCategory){\r\n                                advCategoryList.push(category)\r\n                            }\r\n                        })\r\n                    })\r\n                    postFetch({\r\n                        url:MNG_PROCESS_ADD,\r\n                        values:{\r\n                            stuName:userDetail.name,\r\n                            stuId:userDetail.stuId,\r\n                            advCategoryList:advCategoryList,\r\n                            baseCategoryList:baseCategory,\r\n                            enrollYear:userDetail.enrollYear\r\n                        },\r\n                        successCallback:()=>{\r\n                            postFetch({\r\n                                url:MNG_UPDATE_USER_URL,\r\n                                values:{\r\n                                    id:userDetail.id,\r\n                                    studyType:type,\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"提交成功\",severity:\"success\"})\r\n                                    window.location.reload()\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            const cor=confirmModal({\r\n                title:\"确定要重新配置该学生的培养过程吗？\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    let advCategoryList=[]\r\n                    advTinyCategoryList.map((advList)=>{//遍历选中的进阶任务的大类\r\n                        advCategory.map((category)=>{\r\n                            if(advList.processCategory===category.processCategory){\r\n                                advCategoryList.push(category)\r\n                            }\r\n                        })\r\n                    })\r\n                    postFetch({\r\n                        url: MNG_PROCESS_RESET,\r\n                        values:{\r\n                            stuName:userDetail.name,\r\n                            stuId:userDetail.stuId,\r\n                            advCategoryList:advCategoryList,\r\n                            enrollYear:userDetail.enrollYear\r\n                        },\r\n                        successCallback:()=>{\r\n                            postFetch({\r\n                                url:MNG_UPDATE_USER_URL,\r\n                                values:{\r\n                                    id:userDetail.id,\r\n                                    studyType:type,\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"提交成功\",severity:\"success\"})\r\n                                    window.location.reload()\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getBaseTiny()\r\n        getADVTiny()\r\n        getBaseCategory()\r\n        getADVCategory()\r\n    },[refresh])\r\n\r\n    return (\r\n        <Paper>\r\n            <div className={classes.root}>\r\n                <div className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        基本培养任务\r\n                    </Typography>\r\n\r\n                    <Box>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                handleSubmit()\r\n                            }}\r\n                        >提交</Button>\r\n\r\n                        {mngPermission && (\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onClick={()=>{\r\n                                    history.goBack()\r\n                                }}>返回</Button>\r\n                        )}\r\n                    </Box>\r\n                </div>\r\n                <Divider/>\r\n                <Paper>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>任务类别</TableCell>\r\n                                <TableCell>任务</TableCell>\r\n                                <TableCell align=\"center\">预计完成时间</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {baseTinyCategory.map((baseTiny)=>(\r\n                                <>\r\n                                    <TableRow>\r\n                                        <TableCell rowSpan={baseCategory.filter((category)=>{\r\n                                            return category.processCategory===baseTiny.processCategory\r\n                                        }).length+1}>{baseTiny.processCategory}</TableCell>\r\n                                    </TableRow>\r\n                                    {baseCategory.filter((category)=>{return category.processCategory===baseTiny.processCategory}).map((category)=>(\r\n                                        <TableRow>\r\n                                            <TableCell>{category.categoryMission}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {(category.month>=9 && category.month<=12)? (userDetail.enrollYear+category.year-1): (userDetail.enrollYear+category.year)}年第{category.month}月</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </>\r\n                                )\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <Divider />\r\n                <Box style={{height:\"20px\"}}/>\r\n                <div className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        进阶任务\r\n                    </Typography>\r\n                    <TextField\r\n                        select\r\n                        label=\"板块类型\"\r\n                        size=\"small\"\r\n                        value={type}\r\n                        onChange={(e) => {\r\n                            setType(parseInt(e.target.value))\r\n                            setRefresh((p)=>!p)\r\n                        }}\r\n                        SelectProps={{\r\n                            native: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    >{(userDetail.keshuo===1 || userDetail.keshuo===2)? (\r\n                        TYPES.filter((type)=>{\r\n                            return type.value!==3\r\n                        }).map((t)=>(\r\n                            <option value={t.value}>\r\n                                {t.name}\r\n                            </option>\r\n                        ))\r\n                    ):(\r\n                        TYPES.filter((type)=>{\r\n                            return type.value===3\r\n                        }).map((t)=>(\r\n                            <option value={t.value}>\r\n                                {t.name}\r\n                            </option>\r\n                        ))\r\n                    )}\r\n                    </TextField>\r\n                    <Box/>\r\n                </div>\r\n                <Divider/>\r\n                <Paper>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>任务类别</TableCell>\r\n                                <TableCell>任务</TableCell>\r\n                                <TableCell align=\"center\">预计完成时间</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {advTinyCategory.map((advTiny)=>(\r\n                                    <>\r\n                                        <TableRow>\r\n                                            <TableCell rowSpan={advCategory.filter((category)=>{\r\n                                                return category.processCategory===advTiny.processCategory\r\n                                            }).length+1}>\r\n                                                <Checkbox defaultChecked={false} color=\"primary\"\r\n                                                          onChange={(event, checked)=>{\r\n                                                              if(checked===true){\r\n                                                                  advTinyCategoryList.push(advTiny)\r\n                                                              }\r\n                                                              if(checked===false){\r\n                                                                  advTinyCategoryList=advTinyCategoryList.filter((adv)=>{\r\n                                                                      return adv.id!==advTiny.id\r\n                                                                  })\r\n                                                              }\r\n                                                          }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell rowSpan={advCategory.filter((category)=>{\r\n                                                return category.processCategory===advTiny.processCategory\r\n                                            }).length+1}>{advTiny.processCategory}</TableCell>\r\n                                        </TableRow>\r\n                                        {advCategory.filter((category)=>{return category.processCategory===advTiny.processCategory}).map((category)=>(\r\n                                            <TableRow>\r\n                                                <TableCell>{category.categoryMission}</TableCell>\r\n                                                <TableCell align=\"center\">{(category.month>=9 && category.month<=12)? (userDetail.enrollYear+category.year-1): (userDetail.enrollYear+category.year)}年第{category.month}月</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </>\r\n                                )\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorder\\Arrangement\\Arrangement.js",["792","793","794","795","796","797","798"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    Button, Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField, Typography\r\n} from \"@material-ui/core\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {\r\n    ADD_RECORDER_URL,\r\n    DELETE_RECORDER_URL,\r\n    MNG_ADD_BULLETIN_URL,\r\n    MNG_GET_ALL_USER,\r\n    MNG_UPDATE_RECORDER\r\n} from \"../../../../settings\";\r\nimport {deleteFetch, postFetch} from \"../../../../base\";\r\nimport {getAllLeader, getAllRecorder} from \"../../../../service/userService\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {MinusOutlined} from \"@ant-design/icons\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport ContentStyle from \"../../../../components/Style/ContentStyle\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\n\r\nexport default function Arrangement(){\r\n    const classes=ContentStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [page,setPage]=useState(1)\r\n    const [recorder,setRecorder]=useState([])\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [docs,setDocs]=useState([])\r\n\r\n    const hasPermission=userInfo.isTalkMng===1\r\n\r\n    const getAllDocs=async ()=>{//获得所有博士骨干学生的信息\r\n        try{\r\n            let response=await fetch(\r\n                `${MNG_GET_ALL_USER}?type=${10}&status=${1}`\r\n            )\r\n            return await response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleOpen=()=> { //添加一次辅读安排\r\n        postFetch({\r\n            url:ADD_RECORDER_URL,\r\n            successCallback:()=>{ //添加成功之后要发布通知，向各个组的组长发送通知，还应该向所有导读人员发布通知\r\n                getAllRecorder({limit:4}).then((res)=>{//这里是刚刚加上的四条导读记录\r\n                    res?.data.map((re)=>{\r\n                        postFetch({\r\n                            url:MNG_ADD_BULLETIN_URL,\r\n                            values:{\r\n                                stuId:docs.find((doc)=>doc.name==re.recorder1Name)?.stuId,\r\n                                title:\"新的导读安排已发布\",\r\n                                content:\"本周你被安排为第[\"+re.groupId+\"]的导读人员，请按时到位并完成评分\"\r\n                            },\r\n                        })\r\n                        postFetch({\r\n                            url:MNG_ADD_BULLETIN_URL,\r\n                            values:{\r\n                                stuId: docs.find((doc)=>doc.name==re.recorder2Name)?.stuId,\r\n                                title:\"新的导读安排已发布\",\r\n                                content:\"本周你被安排为第[\"+re.groupId+\"]的导读人员，请按时到位并完成评分\"\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n                alertBox({text:\"添加成功\",severity:\"success\"})\r\n                setRefresh((prev)=>!prev)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const handleDelete=(recorder)=>{//删除导读信息\r\n        if(!hasPermission){\r\n            alertBox({text:\"无权进行删除\",severity:\"error\"})\r\n            return\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"将同时删除四个辅读安排，确定要删除吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                deleteFetch({\r\n                    url:`${DELETE_RECORDER_URL}?id=${recorder.id}&groupId=${recorder.groupId}`,\r\n                    successCallback:()=>{\r\n                        setRefresh((prev)=>!prev)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleBaseScoreChanged=(recorder,score)=>{//修改基础分数\r\n        postFetch({\r\n            url:MNG_UPDATE_RECORDER,\r\n            values:{\r\n                id:recorder.id,\r\n                baseScore:score\r\n            },\r\n            successCallback:()=>{\r\n                setRefresh((prev)=>!prev)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllDocs().then((res)=>{\r\n            setDocs(res?.data || [])\r\n        })\r\n        getAllRecorder({page,limit:12}).then((res)=>{\r\n            setRecorder(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total / 12) || 0);\r\n        })\r\n\r\n    },[refresh,page,pageNo])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        导读安排\r\n                    </Typography>\r\n\r\n                    {hasPermission&& (\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={handleOpen}\r\n                        >\r\n                            添加导读安排\r\n                        </Button>\r\n                    )}\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>发布时间</TableCell>\r\n                                <TableCell>组号</TableCell>\r\n                                <TableCell>导读人员1</TableCell>\r\n                                <TableCell>导读人员2</TableCell>\r\n                                <TableCell align=\"center\">基础分数</TableCell>\r\n                                {hasPermission && (\r\n                                    <TableCell align=\"center\">操作</TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        {recorder.map((singleRecorder)=>(\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>{singleRecorder.date}</TableCell>\r\n                                    <TableCell>{singleRecorder.groupId}</TableCell>\r\n                                    <TableCell>{singleRecorder.recorder1Name}</TableCell>\r\n                                    <TableCell>{singleRecorder.recorder2Name}</TableCell>\r\n                                    {(userInfo.name==singleRecorder.recorder1Name || userInfo.name==singleRecorder.recorder2Name)? (\r\n                                            <TableCell align=\"center\">\r\n                                                <TextField\r\n                                                    select\r\n                                                    size=\"small\"\r\n                                                    value={singleRecorder.baseScore}\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={(e)=>{\r\n                                                        handleBaseScoreChanged(singleRecorder,parseInt(e.target.value))\r\n                                                    }}\r\n                                                    SelectProps={{\r\n                                                        native:true\r\n                                                    }}\r\n                                                >\r\n                                                    <option value={0}>0</option>\r\n                                                    <option value={1}>1</option>\r\n                                                    <option value={2}>2</option>\r\n                                                    <option value={3}>3</option>\r\n                                                    <option value={4}>4</option>\r\n                                                    <option value={5}>5</option>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                        ):(\r\n                                            <TableCell align=\"center\">{singleRecorder.baseScore}</TableCell>\r\n                                        )\r\n                                    }\r\n                                    {hasPermission &&(\r\n                                        <TableCell align=\"center\">\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"primary\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{\r\n                                                    handleDelete(singleRecorder)\r\n                                                }}>删除</Button>\r\n                                        </TableCell>\r\n                                    )}\r\n                                </TableRow>\r\n                                {\r\n                                    singleRecorder.groupId==4 &&(\r\n                                        <MinusOutlined />\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        ))}\r\n                    </Table>\r\n                </Box>\r\n                {pageNo > 1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e, i) => setPage(i)}\r\n                    />\r\n                )}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForTeacher\\ScoreForBoss.js",["799","800","801","802","803"],"import React, { useState, useEffect} from \"react\";\r\nimport {\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography, TextField, Button,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport ContentStyle from \"../../../../components/Style/ContentStyle\";\r\nimport {\r\n    MNG_GET_ALL_USER,\r\n    MNG_RETURN_SINGLESCORE,\r\n    MNG_GET_SCORE_DATE,\r\n    MNG_UPDATE_SCORE\r\n} from \"../../../../settings\";\r\nimport {Box} from \"@mui/material\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport ScoreStudentComment from \"../scoreForm/ScoreStudentComment\";\r\nimport TeaCommentForTeaForm from \"../scoreForm/TeaCommentForTeaForm\";\r\nimport TeaCommentForm from \"../scoreForm/TeaCommentForm\";\r\n\r\nconst Role={\r\n    0: \"硕士\",\r\n    10: \"博士\"\r\n}\r\n\r\nconst Sort=[\r\n    {\r\n        index: 0,\r\n        value: \"默认\"\r\n    },\r\n    {\r\n        index: 1,\r\n        value: \"评分从低到高\"\r\n    },\r\n    {\r\n        index: 2,\r\n        value: \"评分从高到低\"\r\n    }\r\n]\r\n\r\nexport default function BossScore(){ //给大老板看的\r\n    const [allUsers, setAllUsers] =useState([]);\r\n    const classes = ContentStyle();\r\n    const [page, setPage] = useState(1);\r\n    const [pageNo, setPageNo] = useState(0);\r\n    const [date,setDate]=useState([]); //所有的已经评分的年份和季度\r\n    const [nowDate,setNowDate]=useState(0);//当前查看的评分年份和季度的数组下标，所以默认是0\r\n    const [teacherName,setTeacherName]=useState(\"\")//查找导师的名称\r\n    const [sortNum,setSortNum]=useState(0); //排序方式\r\n    const [scoreData, setScoreData]=useState([])\r\n    const [refresh, setRefresh]=useState(false)\r\n    const [scoreDetail, setScoreDetail]=useState({})\r\n    const [commentOpen, setCommentOpen]=useState(false)\r\n    const [teaCommentOpenForTea,setTeaCommentOpenForTea]=useState(false)\r\n    const [teaCommentOpen,setTeaCommentOpen]=useState(false)\r\n\r\n    const getUserLastScore= async ({name, page,limit=10, year, season, sort=sortNum})=>{\r\n        //返回某个老师名下的所有学生的近期一次的成绩\r\n        try{\r\n            let response=await fetch(\r\n                `${MNG_RETURN_SINGLESCORE}?limit=${limit}&offset=${(page-1)*limit}&name=${name}&year=${year}&season=${season}&sort=${sort}`)\r\n            return await response.json();\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getAllTeacher=async ()=>{//获取所有的教师\r\n        try{\r\n            let response=await fetch(`${MNG_GET_ALL_USER}?type=${20}`,{})\r\n            return await response.json()\r\n        }catch (error){\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const getDate=async ()=>{\r\n        try {\r\n            let response=await fetch(MNG_GET_SCORE_DATE,{})\r\n            return await response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleDateChange=(value)=>{\r\n        setNowDate(value)//重新设置数组下表\r\n        //接下来应该将请求的信息发送到后台\r\n    }\r\n\r\n    const handleTeacherChanged=(tName)=>{ //所属教师改变之后\r\n        setTeacherName(tName)\r\n    }\r\n\r\n    const handleSortChanged=(sort)=>{ //排序方式改变之后\r\n        setSortNum(sort)\r\n    }\r\n\r\n    const handleScoreChange=(data, newScore)=>{\r\n        const cor = confirmModal({\r\n            title:\"确定要修改评分吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_UPDATE_SCORE,\r\n                    values:{\r\n                        id: data.id,\r\n                        score: newScore\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"修改成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllTeacher().then((res)=>{ //获取所有的教师数据\r\n            setAllUsers(res.data || [])//写入教师数据\r\n        })\r\n        getDate().then((res)=>{ //获取已经打过分的年份季度\r\n            setDate(res.data || [])\r\n            getUserLastScore({name:teacherName, page, year:res.data[nowDate].year, season:res.data[nowDate].season, sort:sortNum}).then((res)=>{\r\n                setScoreData(res?.data || [])\r\n                setPageNo(Math.ceil(res?.paging?.total / 10) || 0)\r\n            })\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getUserLastScore({name:teacherName, page:1, year: date[nowDate]?.year, season:date[nowDate]?.season, sort:sortNum}).then((res)=>{\r\n            setScoreData(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total / 10) || 0)\r\n            setPage(1)\r\n        })\r\n    },[nowDate, teacherName])\r\n\r\n    useEffect(()=>{\r\n        getUserLastScore({name:teacherName, page, year: date[nowDate]?.year, season:date[nowDate]?.season, sort:sortNum}).then((res)=>{\r\n            setScoreData(res?.data || [])\r\n        })\r\n    },[refresh, sortNum, page])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    {date.length===0? (\r\n                        <Typography color=\"textPrimary\" size=\"small\">\r\n                            请先让学生完成自评\r\n                        </Typography>\r\n                    ):(<>\r\n                            <Typography color=\"textPrimary\" size=\"small\">\r\n                                学生季度评分\r\n                            </Typography>\r\n\r\n                            <Box>\r\n                                <Typography color=\"textPrimary\" size=\"small\" align=\"center\">\r\n                                    所属导师\r\n                                </Typography>\r\n                                <TextField\r\n                                    size=\"small\"\r\n                                    select\r\n                                    variant=\"outlined\"\r\n                                    value={teacherName}\r\n                                    onChange={(event)=>{\r\n                                        handleTeacherChanged(event.target.value)\r\n                                    }}\r\n                                    SelectProps={{\r\n                                        native:true\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">所有导师</option>\r\n                                    {allUsers.map((user)=>(\r\n                                        <option value={user.name}>\r\n                                            {user.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Box>\r\n\r\n                            <Box>\r\n                                <Typography color=\"textPrimary\" size=\"small\" align=\"center\">\r\n                                    季度\r\n                                </Typography>\r\n\r\n                                <TextField\r\n                                    size=\"small\"\r\n                                    select\r\n                                    variant=\"outlined\"\r\n                                    value={nowDate}\r\n                                    onChange={(e)=>{\r\n                                        handleDateChange(e.target.value)\r\n                                    }}\r\n                                    SelectProps={{\r\n                                        native:true\r\n                                    }}\r\n                                >\r\n                                    {date.map((d,index)=>(\r\n                                        //因为d是一个具体的对象，不能直接把它赋给value，所以我们换个思路，将数组下标赋值给value\r\n                                        <option value={index}>\r\n                                            {d.year}年第{d.season}季\r\n                                        </option>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Box>\r\n\r\n                            <Box>\r\n                                <Typography color=\"textPrimary\" size=\"small\" align=\"center\">\r\n                                    排序方式\r\n                                </Typography>\r\n                                <TextField\r\n                                    select\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                    value={sortNum}\r\n                                    SelectProps={{\r\n                                        native:true\r\n                                    }}\r\n                                    onChange={(event)=>{\r\n                                        handleSortChanged(parseInt(event.target.value))\r\n                                    }}\r\n                                >{Sort.map((s)=>(\r\n                                    <option value={s.index}>\r\n                                        {s.value}\r\n                                    </option>\r\n                                ))}\r\n                                </TextField>\r\n                            </Box>\r\n                        </>\r\n                    )}\r\n                </Box>\r\n\r\n                <Divider />\r\n\r\n                <Box minWidth={800}>\r\n                    {date.length!==0 && (\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>姓名</TableCell>\r\n                                    <TableCell align=\"center\">学/工号</TableCell>\r\n                                    <TableCell align=\"center\">类型</TableCell>\r\n                                    <TableCell align=\"center\">季度自评</TableCell>\r\n                                    <TableCell align=\"center\">季度评分</TableCell>\r\n                                    <TableCell align=\"center\">导师评语</TableCell>\r\n                                    <TableCell align=\"center\">操作</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            {scoreData.length!==0 && (\r\n                                <TableBody>\r\n                                    { scoreData.map((data,index) => {\r\n                                        return (\r\n                                            <TableRow hover key={data.id}>\r\n                                                <TableCell>{data.stuName}</TableCell>\r\n                                                <TableCell align=\"center\">{data.stuId}</TableCell>\r\n                                                <TableCell align=\"center\">{Role[data.stuType]}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            setScoreDetail(data)\r\n                                                            setCommentOpen(true)\r\n                                                        }}>查看学生自评</Button>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {data.mentor == \"杨珉\"? (\r\n                                                        <TextField\r\n                                                            select\r\n                                                            size=\"small\"\r\n                                                            value={data.score}\r\n                                                            variant=\"outlined\"\r\n                                                            onChange={(e)=>{\r\n                                                                handleScoreChange(data, parseInt(e.target.value))\r\n                                                            }}\r\n                                                            SelectProps={{native:true}}\r\n                                                            >\r\n                                                            <option key={0} value={0}>0</option>\r\n                                                            <option key={1} value={1}>1</option>\r\n                                                            <option key={2} value={2}>2</option>\r\n                                                            <option key={3} value={3}>3</option>\r\n                                                            <option key={4} value={4}>4</option>\r\n                                                            <option key={5} value={5}>5</option>\r\n                                                        </TextField>\r\n                                                    ):(\r\n                                                        data.score\r\n                                                    )}\r\n                                                </TableCell>\r\n\r\n                                                <TableCell align=\"center\">\r\n                                                    {data.mentor == \"杨珉\" ? (\r\n                                                        data.teaComment ? (\r\n                                                            <Button\r\n                                                                color=\"primary\"\r\n                                                                size=\"small\"\r\n                                                                variant=\"text\"\r\n                                                                onClick={()=>{\r\n                                                                    setTeaCommentOpenForTea(true)\r\n                                                                    setScoreDetail(data)\r\n                                                                }}\r\n                                                            >修改导师评价</Button>\r\n                                                        ):(\r\n                                                            <Button\r\n                                                                color=\"primary\"\r\n                                                                size=\"small\"\r\n                                                                variant=\"text\"\r\n                                                                onClick={()=>{\r\n                                                                    setTeaCommentOpenForTea(true)\r\n                                                                    setScoreDetail(data)\r\n                                                                }}\r\n                                                            >添加导师评价</Button>\r\n                                                        )\r\n                                                    ):(\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            variant=\"text\"\r\n                                                            onClick={()=>{\r\n                                                                setTeaCommentOpen(true)\r\n                                                                setScoreDetail(data)\r\n                                                            }}>查看导师评价</Button>\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        href={`/app/studyPlan/stuScore/${data.stuId}`}\r\n                                                    >查看季度评分表\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                            )}\r\n                        </Table>\r\n                    )}\r\n                    {(date.length!==0 && pageNo > 1) && (\r\n                        <Pagination\r\n                            className={classes.Pagination}\r\n                            count={pageNo}\r\n                            color=\"primary\"\r\n                            page={page}\r\n                            onChange={(e, i) => {\r\n                                setPage(i)}}\r\n                        />\r\n                    )}\r\n                </Box>\r\n\r\n                <ScoreStudentComment open={commentOpen}\r\n                                     onClose={()=>{\r\n                                         setCommentOpen(false)\r\n                                         setRefresh((p)=>!p)\r\n                                         setScoreDetail({})\r\n                                     }}\r\n                                     scoreDetail={scoreDetail}\r\n                />\r\n\r\n                <TeaCommentForTeaForm open={teaCommentOpenForTea}\r\n                                      onClose={()=>{\r\n                                          setTeaCommentOpenForTea(false)\r\n                                          setRefresh((p)=>!p)\r\n                                          setScoreDetail({})\r\n                                      }}\r\n                                      scoreDetail={scoreDetail}/>\r\n\r\n                <TeaCommentForm open={teaCommentOpen}\r\n                                onClose={()=>{\r\n                                    setTeaCommentOpen(false)\r\n                                    setRefresh((p)=>!p)\r\n                                    setScoreDetail({})\r\n                                }}\r\n                                scoreDetail={scoreDetail}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForMng\\ScoreForMng.js",["804"],"import {MNG_GET_SCORE_DATE, MNG_GET_UNDONE_SCORE} from \"../../../../settings\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport ContentStyle from \"../../../../components/Style/ContentStyle\";\r\n\r\nconst TYPE={\r\n    10:\"博士\",\r\n    0:\"硕士\"\r\n}\r\n\r\nexport default function ScoreForMng(){\r\n    const classes=ContentStyle()\r\n    const [date,setDate]=useState([])\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [nowDate,setNowDate]=useState(0)\r\n    const [undoneUser,setUndoneUser]=useState([])\r\n\r\n    const getDate=async ()=>{//获取已经评分过的年份和季度\r\n        try {\r\n            let response=await fetch(MNG_GET_SCORE_DATE,{})\r\n            return await response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getUndoneUser=({year, season})=>{\r\n        fetch(`${MNG_GET_UNDONE_SCORE}?year=${year}&season=${season}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setUndoneUser(res?.data || [])\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDate().then((res)=>{\r\n            setDate(res?.data || [])\r\n            getUndoneUser({year:res.data[nowDate].year, season:res.data[nowDate].season})\r\n        })\r\n    },[nowDate])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        查找季度评分未完成学生\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        size=\"small\"\r\n                        select\r\n                        variant=\"outlined\"\r\n                        value={nowDate}\r\n                        onChange={(e)=>{\r\n                            setNowDate(e.target.value)\r\n                            setRefresh((p)=>!p)\r\n                        }}\r\n                        SelectProps={{\r\n                            native:true\r\n                        }}>\r\n                        {date.map((d,index)=>(\r\n                            <option value={index}>\r\n                                {d.year}年第{d.season}季\r\n                            </option>\r\n                        ))}\r\n                    </TextField>\r\n                </Box>\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                     <TableHead>\r\n                         <TableRow>\r\n                             <TableCell>姓名</TableCell>\r\n                             <TableCell>学/工号</TableCell>\r\n                             <TableCell>类型</TableCell>\r\n                         </TableRow>\r\n                     </TableHead>\r\n\r\n                     <TableBody>\r\n                         {\r\n                             undoneUser.map((user)=>(\r\n                                 <TableRow>\r\n                                     <TableCell>{user.name}</TableCell>\r\n                                     <TableCell>{user.stuId}</TableCell>\r\n                                     <TableCell>{TYPE[user.type]}</TableCell>\r\n                                 </TableRow>\r\n                             ))\r\n                         }\r\n                     </TableBody>\r\n                    </Table>\r\n                </Box>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessConfig.js",["805","806","807"],"import ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\nimport {\r\n    Button,\r\n    Divider, Fab,\r\n    Paper,\r\n    TextField, Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n    MNG_DELETE_PROCESS_CATEGORY,\r\n    MNG_GET_ALL_PROCESS_CATEGORY,\r\n    MNG_GET_TINY_PROCESS_CATEGORY,\r\n    MNG_PROCESS_ADD,\r\n    MNG_RECONFIG_PROCESS,\r\n    MNG_RESET_PROCESS_CATEGORY,\r\n    MNG_UPDATE_USER_URL\r\n} from \"../../../../settings\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport ProcessTinyCategoryAddForm from \"../processForm/ProcessTinyCategoryAddForm\";\r\nimport {Table, TableBody, TableCell, TableHead, TableRow} from \"@mui/material\";\r\nimport ProcessAddForm from \"../processForm/ProcessAddForm\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\n\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {postFetch} from \"../../../../base\";\r\n\r\n\r\n\r\nconst STUDYTYPE={\r\n    1:\"学硕\",\r\n    2:\"专硕\",\r\n    3:\"学工\"\r\n}\r\n\r\nexport default function ProcessConfig(props){//这个组件有两个作用，一是管理员配置所有的任务，二是管理员为某个学生重新选择任务\r\n    //学生选择任务也是在这个地方\r\n    //所以，如果userDetail和userStuId都为null，说明是管理员来配置任务\r\n    //如果userDetail不为null，userStuId为null，说明是学生来选择\r\n    //如果userDetail和userStuId都不为null，说明是管理员为某个学生重新选择任务\r\n    {/**由于所有的普通任务不分模块，所以**/}\r\n    const {userDetail, userStuId}=props\r\n    const classes=ContentStyleForPage()\r\n    const history=useHistory()\r\n    const {userInfo}=useContext(UserContext)\r\n    const type=0 //type对应的是板块，因为基础任务没有板块，所以是0\r\n    const [studyType,setStudyType]=useState(1)//studyType是对应的硕士类型，1代表学硕，2代表专硕，3代表学工\r\n    const [allCategory,setAllCategory]=useState([])\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [tinyCategoryAdd,setTinyCategoryAdd]=useState(false)\r\n    const [categoryAdd,setCategoryAdd]=useState(false)\r\n    const [tinyCategory,setTinyCategory]=useState(\"\")\r\n    const [allTinyCategory,setAllTinyCategory]=useState([])\r\n    const [categoryDetail,setCategoryDetail]=useState({})\r\n\r\n    const mngPermission= userInfo.isEducateMng===1//是否拥有管理员权限\r\n    const configPermission= typeof(userDetail)===\"undefined\" && typeof(userStuId)===\"undefined\" //管理员配置任务\r\n    const stuPermission= typeof(userDetail)!==\"undefined\" && typeof(userStuId)===\"undefined\" //学生选择任务\r\n    const configForStuPermission =typeof(userDetail)!==\"undefined\" && typeof(userStuId)!==\"undefined\"//管理员为学生重新配置任务\r\n\r\n    const getAllProcessCategory=()=>{//这里是某一类型学生对应基础任务的所有小类别\r\n        fetch(`${MNG_GET_ALL_PROCESS_CATEGORY}?type=${type}&studyType=${studyType}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setAllCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const getAllTintProcessCategory=()=>{//这里是某一硕士类型学生对应基础任务的所有大类\r\n        fetch(`${MNG_GET_TINY_PROCESS_CATEGORY}?type=${type}&studyType=${studyType}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setAllTinyCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleDelete=(id)=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要删除这一条任务吗\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${MNG_DELETE_PROCESS_CATEGORY}?id=${id}`,{method:\"POST\"})\r\n                    .then(()=>{\r\n                        alertBox({text:\"删除成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit=()=>{//提交初始化请求\r\n        if(!mngPermission){//没有管理员权限，说明是自己提交的\r\n            const cor=confirmModal({\r\n                title:\"确认要提交吗？只能提交一次并且没有修改机会，请与导师商量后再做选择\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    if(allCategory.length===0){\r\n                        alertBox({text:\"还未添加任务，请等待\",severity:\"error\"})\r\n                        return\r\n                    }\r\n                    postFetch({\r\n                        url:MNG_UPDATE_USER_URL,\r\n                        values:{\r\n                            id:userDetail.id,\r\n                            // studyType:type,\r\n                            keshuo:studyType //keshuo代表硕士类型，1代表学硕，2代表专硕，3代表学工\r\n                        },\r\n                        successCallback:()=>{\r\n                            postFetch({\r\n                                url:MNG_PROCESS_ADD,\r\n                                values:{\r\n                                    stuName:userDetail.name,\r\n                                    stuId:userDetail.stuId,\r\n                                    categoryList:allCategory,\r\n                                    enrollYear:userDetail.enrollYear\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"选择成功\",severity:\"success\"})\r\n                                    window.location.reload()\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else{//管理员\r\n            if (userDetail.studyType===type && userDetail.keshuo===studyType){\r\n                alertBox({text:\"重复选择同一个类型\",severity:\"error\"})\r\n                return\r\n            }\r\n            const cor=confirmModal({\r\n                title:\"确定要重新配置这个学生的培养过程吗？\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    postFetch({//第一步，修改他本人的信息\r\n                        url:MNG_UPDATE_USER_URL,\r\n                        values:{\r\n                            id:userDetail.id,\r\n                            studyType:type, //studyType代表对应的硕士小类型，如学术型，专业型\r\n                            keshuo:studyType\r\n                        },\r\n                        successCallback:()=>{\r\n                            postFetch({//第二步，将原先配置的任务，除去已提交的和未完成的，都删除掉\r\n                                url:MNG_RECONFIG_PROCESS,\r\n                                values:{\r\n                                    stuId:userDetail.stuId\r\n                                },\r\n                                successCallback:()=>{\r\n                                    postFetch({//第三步，把新配置的任务给他装好\r\n                                        url:MNG_PROCESS_ADD,\r\n                                        values:{\r\n                                            stuName:userDetail.name,\r\n                                            stuId:userDetail.stuId,\r\n                                            categoryList:allCategory,\r\n                                            enrollYear:userDetail.enrollYear\r\n                                        },\r\n                                        successCallback:()=>{\r\n                                            alertBox({text:\"选择成功\",severity:\"success\"})\r\n                                            setRefresh((p)=>!p)\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleReset=()=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要重置\"+STUDYTYPE[studyType]\r\n            +\"类型的所有基础任务吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${MNG_RESET_PROCESS_CATEGORY}?type=${type}&studyType=${studyType}`,{method:\"POST\"})\r\n                    .then(()=>{\r\n                        alertBox({text:\"重置成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllTintProcessCategory()\r\n        getAllProcessCategory()\r\n    },[refresh])\r\n\r\n    return (\r\n        <Paper>\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <FormControl>\r\n                    <FormLabel id=\"demo-radio-buttons-group-label\">请选择配置任务对应的学生身份</FormLabel>\r\n                    <RadioGroup\r\n                        row\r\n                        aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                        defaultValue={studyType}\r\n                        name=\"radio-buttons-group\"\r\n                        onChange={(event, value) => {\r\n                            setStudyType(parseInt(value))\r\n                            setRefresh((p)=>!p)\r\n                        }}\r\n                    >\r\n                        <FormControlLabel value={1} control={<Radio/>} label=\"学硕\"/>\r\n                        <FormControlLabel value={2} control={<Radio/>} label=\"专硕\"/>\r\n                        <FormControlLabel value={3} control={<Radio/>} label=\"学工\"/>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                {(mngPermission && configForStuPermission) && (//拥有管理员权限，并且stuId不为空\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            handleSubmit()\r\n                        }}>确认提交</Button>\r\n                )}\r\n\r\n                {stuPermission && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            handleSubmit()\r\n                        }}>确认提交</Button>\r\n                )}\r\n\r\n                {mngPermission && (//是管理员，要离开\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            history.goBack()\r\n                        }}>返回</Button>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n            <Divider/>\r\n            {(mngPermission && configPermission) && (\r\n                <Tooltip title=\"点击增加新任务类别\">\r\n                <Fab color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                    setTinyCategoryAdd(true)\r\n            }} >\r\n                <AddIcon/>\r\n                </Fab>\r\n                </Tooltip>\r\n                )}\r\n\r\n\r\n            {(mngPermission && configPermission) && (\r\n                <Button\r\n                    style={{\r\n                        float:\"right\"\r\n                    }}\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    variant=\"outlined\"\r\n                    onClick={()=>{\r\n                        handleReset()\r\n                    }}>重置任务</Button>\r\n            )}\r\n            <Paper>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>任务类别</TableCell>\r\n                            <TableCell>任务</TableCell>\r\n                            <TableCell align=\"center\">预计完成时间</TableCell>\r\n                            {(mngPermission && configPermission) && (\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            )}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {allTinyCategory.map((tinyCategory)=>(\r\n                            <>\r\n                                <TableRow>\r\n                                    <TableCell rowSpan={(mngPermission && configPermission)? (allCategory.filter((category)=>{\r\n                                        return category.processCategory===tinyCategory.processCategory\r\n                                    }).length+2):(allCategory.filter((category)=>{\r\n                                            return category.processCategory===tinyCategory.processCategory\r\n                                        }).length+1)}>\r\n                                        {tinyCategory.processCategory}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                {/**以上是大的类别**/}\r\n                                {allCategory.filter((category)=>{return category.processCategory===tinyCategory.processCategory}).map((category)=>(\r\n                                    <TableRow>\r\n                                        <TableCell>{category.categoryMission}</TableCell>\r\n                                        <TableCell align=\"center\">第{category.year}学年{category.month}月份</TableCell>\r\n                                        {(mngPermission && configPermission)&& (\r\n                                            <TableCell align=\"center\">\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    variant=\"text\"\r\n                                                    size=\"small\"\r\n                                                    onClick={()=>{\r\n                                                        setCategoryAdd(true)\r\n                                                        setTinyCategory(tinyCategory.processCategory)\r\n                                                        setCategoryDetail(category)\r\n                                                    }}>修改</Button>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    variant=\"text\"\r\n                                                    size=\"small\"\r\n                                                    onClick={()=>{handleDelete(category.id)}}\r\n                                                >删除</Button>\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n                                ))}\r\n                                {(mngPermission && configPermission) && (\r\n                                    <TableRow>\r\n                                        <TableCell>\r\n                                            <Tooltip title=\"点击添加任务内容\">\r\n                                                <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                                                    setCategoryAdd(true)\r\n                                                    setTinyCategory(tinyCategory.processCategory)\r\n                                                }}><AddIcon/>\r\n                                                </Fab></Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\"></TableCell>\r\n                                        <TableCell align=\"center\"></TableCell>\r\n                                    </TableRow>\r\n                                )}\r\n                            </>))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n\r\n            <ProcessTinyCategoryAddForm open={tinyCategoryAdd}\r\n                                        type={type}\r\n                                        studyType={studyType}\r\n                                        onClose={()=>{\r\n                                            setTinyCategoryAdd(false)\r\n                                            setRefresh((p)=>!p)\r\n                                        }}\r\n            />\r\n            <ProcessAddForm open={categoryAdd}\r\n                            type={type}\r\n                            studyType={studyType}\r\n                            tinyCategory={tinyCategory}\r\n                            categoryDetail={categoryDetail}\r\n                            onClose={()=>{\r\n                                setCategoryAdd(false)\r\n                                setCategoryDetail({})\r\n                                setRefresh((p)=>!p)\r\n                            }} />\r\n        </div>\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\recorder\\Arrangement\\ArrangementForStu.js",["808","809","810","811","812","813","814","815","816","817"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    Button, Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField, Typography\r\n} from \"@material-ui/core\";\r\nimport {Upload, message, notification} from \"antd\";\r\nimport {\r\n    DOWNLOAD_RECORDER_URL, DOWNLOAD_SUMMARIZER_URL, MNG_ADD_BULLETIN_URL, MNG_GET_ALL_USER,\r\n    MNG_UPDATE_RECORDER,\r\n    UPLOAD_RECORDER_URL,\r\n    UPLOAD_SUMMARY_URL\r\n} from \"../../../../settings\";\r\nimport { postFetch} from \"../../../../base\";\r\nimport { getAllRecorder} from \"../../../../service/userService\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {DownloadOutlined, UploadOutlined} from '@ant-design/icons';\r\nimport alertBox from \"../../../../components/AlertBox\";\r\n\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ContentStyle from \"../../../../components/Style/ContentStyle\";\r\n\r\nexport default function ArrangementForStu(){\r\n    const classes=ContentStyle()\r\n    const [recorder,setRecorder]=useState([])\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [groupStudents,setGroupStudents]=useState([])\r\n    const {userInfo}=useContext(UserContext)\r\n    const [id,setId]=useState(0)//此处的id是方便上传文件而使用\r\n\r\n    const uploadProps={//上传领读文件\r\n        name:\"recorderFile\",\r\n        action:UPLOAD_RECORDER_URL,\r\n        method:\"POST\",\r\n        data:{\r\n            id:id\r\n        },\r\n        onChange (info){\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                alertBox({text:\"上传成功\",severity:\"success\"})\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n                setRefresh((prev)=>!prev)\r\n            } else if (info.file.status === 'error') {\r\n                alertBox({text:\"上传失败\",severity:\"error\"})\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    }\r\n\r\n    const uploadPropsS={//上传记录文件\r\n        name:\"summarizerFile\",\r\n        action:UPLOAD_SUMMARY_URL,\r\n        method:\"POST\",\r\n        data:{\r\n            id:id\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                alertBox({text:\"上传成功\",severity:\"success\"})\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n                setRefresh((prev)=>!prev)\r\n            } else if (info.file.status === 'error') {\r\n                alertBox({text:\"上传失败\",severity:\"error\"})\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    }\r\n\r\n    const handleSummarizer=(recorder,summarizerName)=> {//选择记录人员，并保存到数据库中\r\n        postFetch({\r\n            url: MNG_UPDATE_RECORDER,\r\n            values: {\r\n                id: recorder.id,\r\n                summarizerName: summarizerName\r\n            },\r\n            successCallback: () => {\r\n                setRefresh((prev) => !prev)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleRecorder=(recorder,recorderName)=>{//选择领读人员，并保存到数据库中\r\n        postFetch({\r\n            url:MNG_UPDATE_RECORDER,\r\n            values:{\r\n                id:recorder.id,\r\n                recorder:recorderName\r\n            },\r\n            successCallback:()=>{\r\n                setRefresh((prev)=>!prev)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const getDownloadRecorder=(recorder)=>{//下载领读文件\r\n            fetch(`${DOWNLOAD_RECORDER_URL}?id=${recorder.id}`,{\r\n                method:\"GET\",\r\n                credentials:\"include\",\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                })\r\n            }).then((res)=>{\r\n                res.blob().then(blob=>{\r\n                    const aLink=document.createElement(\"a\") //创建一个a标签\r\n                    document.body.appendChild(aLink)\r\n                    aLink.style.display=\"none\" //将代码隐蔽\r\n                    const objectUrl=window.URL.createObjectURL(blob) //可以在浏览器上进行预览，这句话的意思应该是将blob文件的可见体保存到objectUrl中\r\n                    aLink.href=objectUrl\r\n                    aLink.download=`${recorder.recorderFileName}`\r\n                    aLink.click()\r\n                    document.body.removeChild(aLink)\r\n                })\r\n            }).catch((error)=>{\r\n                console.log(\"下载失败\",error)\r\n                notification.success({\r\n                    message:\"文件下载失败\",\r\n                    description:error\r\n                })\r\n            })\r\n    }\r\n\r\n    const getDownloadSummarizer=(recorder)=>{//下载记录文件\r\n        fetch(`${DOWNLOAD_SUMMARIZER_URL}?id=${recorder.id}`,{\r\n            method:\"GET\",\r\n            credentials:\"include\",\r\n            headers:new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        }).then((res)=>{\r\n            res.blob().then(blob=>{\r\n                const aLink=document.createElement(\"a\")\r\n                document.body.appendChild(aLink)\r\n                aLink.style.display=\"none\"\r\n                const objectUrl=window.URL.createObjectURL(blob)\r\n                aLink.href=objectUrl\r\n                aLink.download=`${recorder.summarizerFileName}`\r\n                aLink.click()\r\n                document.body.removeChild(aLink)\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(\"下载失败\",error)\r\n            notification.success({\r\n                message:\"文件下载失败\",\r\n                description:error\r\n            })\r\n        })\r\n    }\r\n\r\n    const getGroupStudents=async ()=>{ //获取同组的人员\r\n        try{\r\n            let response=await fetch(`${MNG_GET_ALL_USER}?groupId=${userInfo.groupId}`)\r\n            return await response.json()\r\n        }\r\n        catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllRecorder({page,limit:40}).then((res)=>{//获取所有的recorder记录\r\n            setRecorder(res.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total / 40) || 0);\r\n        })\r\n        getGroupStudents().then((res)=>{\r\n            setGroupStudents(res.data || [])\r\n        })\r\n    },[refresh,page,pageNo])\r\n\r\n    return (\r\n        <div >\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        导读安排\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>发布时间</TableCell>\r\n                                <TableCell>基础分数</TableCell>\r\n                                <TableCell>辅读人员1</TableCell>\r\n                                <TableCell>辅读人员2</TableCell>\r\n                                <TableCell>领读人员</TableCell>\r\n                                <TableCell>记录人员</TableCell>\r\n                                <TableCell align=\"center\">领读文件</TableCell>\r\n                                <TableCell align=\"center\">记录文件</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {recorder.map((singleRecorder)=>{\r\n                                if(singleRecorder.groupId==userInfo.groupId){\r\n                                    return (\r\n                                        <TableRow>\r\n                                            <TableCell>{singleRecorder.date}</TableCell> {/*上传日期*/}\r\n                                            <TableCell>{singleRecorder.baseScore}</TableCell>\r\n                                            <TableCell>{singleRecorder.recorder1Name}</TableCell> {/*上传辅读人1的名字*/}\r\n                                            <TableCell>{singleRecorder.recorder2Name}</TableCell> {/*上传辅读人2的名字*/}\r\n                                            <TableCell>\r\n                                                <TextField\r\n                                                    select\r\n                                                    size=\"small\"\r\n                                                    value={singleRecorder.recorder?singleRecorder.recorder:\"无\"}\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={(e)=>{\r\n                                                        handleRecorder(singleRecorder,e.target.value)\r\n                                                    }}\r\n                                                    SelectProps={{\r\n                                                        native:true\r\n                                                    }}\r\n                                                >\r\n                                                    <option>无</option>\r\n                                                    {groupStudents.map((user)=>(\r\n                                                        <option value={user.name}>\r\n                                                            {user.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </TableCell>\r\n\r\n                                            <TableCell>\r\n                                                <TextField\r\n                                                    select\r\n                                                    size=\"small\"\r\n                                                    value={singleRecorder.summarizerName?singleRecorder.summarizerName:\"无\"}\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={(e)=>{\r\n                                                        handleSummarizer(singleRecorder,e.target.value)\r\n                                                    }}\r\n                                                    SelectProps={{\r\n                                                        native:true\r\n                                                    }}\r\n                                                >\r\n                                                    <option>无</option>\r\n                                                    {groupStudents.map((user)=>(\r\n                                                        <option value={user.name}>\r\n                                                            {user.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </TableCell>\r\n\r\n                                            {\r\n                                                singleRecorder.recorder==userInfo.name?( //这里需要上传领读文件，只有领读人员才能上传，所以这里是判断用户是否是领读人员\r\n\r\n                                                    //如果是领读人员\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Box>\r\n                                                            <Upload {...uploadProps}>\r\n                                                                <Button\r\n                                                                    color=\"primary\"\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    onClick={()=>{\r\n                                                                        setId(singleRecorder.id)\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <UploadOutlined/>{singleRecorder.isRecorderFile==1?\"重新上传\":\"上传文件\"}\r\n                                                                </Button>\r\n                                                            </Upload >\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                ):(//如果不是领读人员，那么能做的只能是下载，或者文件还没有上传，那么就只能看着\r\n                                                    <TableCell align=\"center\">\r\n                                                        {singleRecorder.isRecorderFile==1?(\r\n                                                            <Button\r\n                                                                color=\"primary\"\r\n                                                                size=\"small\"\r\n                                                                variant=\"outlined\"\r\n                                                                onClick={()=>{\r\n                                                                    getDownloadRecorder(singleRecorder)\r\n                                                                }}\r\n                                                            ><DownloadOutlined />下载文件</Button>\r\n                                                        ):\"暂未上传\"}\r\n                                                    </TableCell>\r\n                                                )\r\n                                            }\r\n\r\n                                            {\r\n                                                singleRecorder.summarizerName==userInfo.name?( //这里需要上传记录文件，只有记录人员才能上传，所以这里是判断用户是否是记录人员\r\n\r\n                                                    //如果是记录人员\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Box>\r\n                                                            <Upload {...uploadPropsS}>\r\n                                                                <Button\r\n                                                                    color=\"primary\"\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    onClick={()=>{\r\n                                                                        setId(singleRecorder.id)\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <UploadOutlined/>{singleRecorder.isSummarizerFile==1?\"重新上传\":\"上传文件\"}\r\n                                                                </Button>\r\n                                                            </Upload >\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                ):(//如果不是领读人员，那么能做的只能是下载，或者文件还没有上传，那么就只能看着\r\n                                                    <TableCell align=\"center\">\r\n                                                        {singleRecorder.isSummarizerFile==1?(\r\n                                                            <Button\r\n                                                                color=\"primary\"\r\n                                                                size=\"small\"\r\n                                                                variant=\"outlined\"\r\n                                                                onClick={()=>{\r\n                                                                    getDownloadSummarizer(singleRecorder)\r\n                                                                }}\r\n                                                            ><DownloadOutlined />下载文件</Button>\r\n                                                        ):\"暂未上传\"}\r\n                                                    </TableCell>\r\n                                                )\r\n                                            }\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n            {pageNo > 1 && (\r\n                <Pagination\r\n                    className={classes.Pagination}\r\n                    count={pageNo}\r\n                    color=\"primary\"\r\n                    onChange={(e, i) => setPage(i)}\r\n                />\r\n            )}\r\n            </Card>\r\n        </div>\r\n\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessForStu.js",["818","819","820","821","822","823","824","825","826"],"import ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider, Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {\r\n    MNG_ADD_BULLETIN_URL, MNG_GET_ALL_USER,\r\n    MNG_GET_PROCESS_LIST,\r\n    MNG_PROCESS_DELETE, MNG_PROCESS_GROUPDONE,\r\n    MNG_PROCESS_UPDATE\r\n} from \"../../../settings\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {deleteFetch, postFetch} from \"../../../base\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport ProcessDelayForm from \"./processForm/ProcessDelayForm\";\r\nimport ProcessEditForm from \"./processForm/ProcessEditForm\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport ProcessGroupDelayForm from \"./processForm/ProcessGroupDelayForm\";\r\n\r\nconst STATUS={\r\n    0: \"已逾期\",\r\n    1: \"未完成\",\r\n    2: \"已提交\",\r\n    3: \"已完成\",\r\n    4: \"提交延期申请\"\r\n}\r\nconst TYPES={\r\n    0:\"否\",\r\n    1:\"是\"\r\n}\r\n\r\nexport default function ProcessForStu(props){//进来的可以是导师，管理员和自己，先设定三种身份\r\n    const {userDetail}=props\r\n    const classes=ContentStyle()\r\n    const history=useHistory()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [mission, setMission]=useState([])//所有的任务\r\n    const [refresh, setRefresh]=useState(false)//刷新\r\n    const [teacherStuId,setTeacherStuId]=useState(\"\")//老师的stuId\r\n    const [confirmForm,setConfirmForm]=useState(false)//确认窗口是否打开\r\n    const [confirmDetail,setConfirmDetail]=useState({})//确认窗口的具体信息\r\n    const [type,setType]=useState(1)//板块的种类，一共三种\r\n    const [studyType,setStudyType]=useState(1)\r\n    const [groupDelayOpen,setGroupDelayOpen]=useState(false)\r\n    const [delayOpen,setDelayOpen]=useState(false)//延期窗口是否打开\r\n    const [missionDetail,setMissionDetail]=useState({})//任务细则\r\n    const [editOpen,setEditOpen]=useState(false)\r\n    const [groupDelay,setGroupDelay]=useState([])\r\n    let groupList=[] //groupList是需要批量处理的list\r\n\r\n    const selfPermission= userInfo.stuId===userDetail.stuId//自己权限\r\n    const mngPermission= userInfo.isEducateMng===1//管理员权限\r\n    const mentorPermission= userInfo.name===userDetail.mentor//导师权限\r\n\r\n    const getAllMission=async ()=>{//获取属于这个学生的所有任务\r\n        try{\r\n            let response=await fetch(\r\n                `${MNG_GET_PROCESS_LIST}?stuName=${userDetail.name}&stuId=${userDetail.stuId}`\r\n            )\r\n            return await response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const queryTeacher=()=>{//获取老师的stuId\r\n        fetch(`${MNG_GET_ALL_USER}?name=${userDetail?.mentor}&limit=1`)\r\n            .then((r)=>r.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((r)=>{\r\n                setTeacherStuId(r?.data[0]?.stuId || \"\")\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        queryTeacher()\r\n        getAllMission().then((res)=>{\r\n            setMission(res?.data || [])\r\n        })\r\n    },[refresh])\r\n\r\n    const handleDelete=(id)=>{\r\n            const cor=confirmModal({\r\n                title:\"确定要删除任务吗？\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    deleteFetch({\r\n                        url:`${MNG_PROCESS_DELETE}?id=${id}`,\r\n                        successCallback:()=>{\r\n                            alertBox({text:\"删除成功\",severity:\"success\"})\r\n                            setRefresh((prev)=>!prev)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDone=(mis,index)=>{//上传完成申请\r\n        if(mis.missionStatus===0){\r\n            alertBox({text:\"任务已逾期，请先提交延期申请\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(mis.missionStatus===2){\r\n            alertBox({text:\"已提交，正在等待申请结果\",severity:\"error\"})\r\n            return;\r\n        }\r\n        if(mis.missionStatus===3){\r\n            alertBox({text:\"已经完成任务\",severity:\"error\"})\r\n            return;\r\n        }\r\n        if(mis.missionStatus===4){\r\n            alertBox({text:\"延期申请还未处理完毕\",severity:\"error\"})\r\n            return;\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要提交完成任务的请求吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_UPDATE,\r\n                    values:{\r\n                        id:mis.id,\r\n                        missionStatus:2,\r\n                    },\r\n                    successCallback:()=>{\r\n                        postFetch({\r\n                            url:MNG_ADD_BULLETIN_URL,\r\n                            values:{\r\n                                stuId:teacherStuId,\r\n                                title:\"您的学生\"+mis.stuName+\"提交了关于\"+mis.category+\"的完成任务申请\",\r\n                                content:\"您的学生\"+mis.stuName+\"提交了关于\"+mis.category+\"的完成任务申请，请到相应的模块同意或拒绝请求\"\r\n                            }\r\n                        })\r\n                        alertBox({text:\"申请成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelay=(mis)=>{//处理延期申请\r\n        if(mis.missionStatus===2){\r\n            alertBox({text:\"该任务已提交完成申请\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(mis.missionStatus===3){\r\n            alertBox({text:\"该任务已完成\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(mis.missionStatus===4){\r\n            alertBox({text:\"该任务已经提交延期申请，请耐心等待\",severity:\"error\"})\r\n            return\r\n        }\r\n        setMissionDetail(mis)\r\n        setDelayOpen(true)\r\n    }\r\n\r\n    const handleGroupDone=()=>{\r\n        if(groupList.length===0){//未选中任务\r\n            alertBox({text:\"未选中任何任务，无法批量提交\",severity:\"error\"})\r\n            return\r\n        }\r\n        let groupList0=groupList.filter((list)=>{\r\n            return list.missionStatus!==1\r\n        })\r\n        if(groupList0.length!==0){\r\n            alertBox({text:\"选中的任务不可提交，请检查任务状态\",severity:\"error\"})\r\n            return\r\n        }\r\n        const cor=confirmModal({\r\n            title: \"确定要提交选中任务的完成申请吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_GROUPDONE,\r\n                    values:{\r\n                        groupList\r\n                    },\r\n                    successCallback:()=>{\r\n                        postFetch({\r\n                            url:MNG_ADD_BULLETIN_URL,\r\n                            values:{\r\n                                stuId:teacherStuId,\r\n                                title:\"您的学生\"+groupList[0].stuName+\"批量提交了任务完成申请\",\r\n                                content:\"您的学生\"+groupList[0].stuName+\"批量提交了任务完成申请，请到相应模块处理\"\r\n                            }\r\n                        })\r\n                        alertBox({text:\"批量提交成功\",severity:\"success\"})\r\n                        window.location.reload()\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleGroupDelay=()=>{\r\n        if(groupList.length===0){//没有选中\r\n            alertBox({text:\"未选中任何任务，无法批量延期\",severity:\"error\"})\r\n            return\r\n        }\r\n        let groupList0=groupList.filter((list)=>{\r\n            return list.missionStatus!==1\r\n        })\r\n        if(groupList0.length!==0){//只有任务状态为未完成的才能延期，其余的不行\r\n            alertBox({text:\"选中的任务不可延期，请检查任务状态\",severity:\"error\"})\r\n            return\r\n        }\r\n        setGroupDelay(groupList)\r\n        setGroupDelayOpen(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        {!selfPermission && userDetail.name+\"的\"}培养过程\r\n                    </Typography>\r\n                    {mngPermission && (\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            href={`/app/studyPlan/mngStuConfig/${userDetail.stuId}`}\r\n                        >重新配置该学生的培养过程</Button>\r\n                    )}\r\n                    {selfPermission ?(\r\n                        <Box >\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onClick={()=>{\r\n                                    handleGroupDone()\r\n                                }}>一键提交完成申请</Button>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onClick={()=>{\r\n                                    handleGroupDelay()\r\n                                }}>一键申请延期</Button>\r\n                        </Box>\r\n                    ): (\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                history.goBack()\r\n                            }}>返回</Button>\r\n                    )}\r\n                </Box>\r\n\r\n                <Divider/>\r\n                <Box minWidth={800}>\r\n                    {mentorPermission && (\r\n                        <Paper>\r\n                            <Typography color=\"textPrimary\" size=\"middle\">\r\n                                姓名：{userDetail.name}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学号：{userDetail.stuId}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;导师：{userDetail.mentor}<br/>\r\n                                论文：{userDetail.papers}<br/>\r\n                                项目：{userDetail.projects}<br/>\r\n                                服务：{userDetail.services}<br/>\r\n                                专利：{userDetail.patents}\r\n                            </Typography>\r\n                        </Paper>\r\n                    )}\r\n                    <Divider/>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {selfPermission && (<TableCell></TableCell>)}\r\n                                <TableCell>任务</TableCell>\r\n                                <TableCell align=\"center\">任务类别</TableCell>\r\n                                <TableCell align=\"center\">预计完成时间</TableCell>\r\n                                <TableCell>任务状态</TableCell>\r\n                                <TableCell align=\"center\">是否已延期</TableCell>\r\n                                {(selfPermission || mngPermission) && (\r\n                                    <TableCell align=\"center\">操作</TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <Divider/>\r\n\r\n                        <TableBody>\r\n                            {mission.map((mis,index)=>(\r\n                                <TableRow>\r\n                                    {selfPermission && (//多选框，可以进行批量提交\r\n                                        <TableCell>\r\n                                            <Checkbox defaultChecked={false} color=\"primary\"\r\n                                                      onChange={(event, checked)=>{\r\n                                                          if(checked===true){\r\n                                                              groupList.push(mis)\r\n                                                          }\r\n                                                          if(checked===false){\r\n                                                              groupList=groupList.filter((list)=>{\r\n                                                                  return list.id!==mis.id\r\n                                                              })\r\n                                                          }\r\n                                                      }}/>\r\n                                        </TableCell>\r\n                                    )}\r\n                                    <TableCell>{mis.category}</TableCell>\r\n                                    <TableCell align=\"center\">{mis.tinyCategory}</TableCell>\r\n                                    <TableCell align=\"center\">{mis.year}年{mis.month}月</TableCell>\r\n                                    <TableCell>{STATUS[mis.missionStatus]}</TableCell>\r\n                                    <TableCell align=\"center\">{TYPES[mis.isDelay]}</TableCell>\r\n                                    {(selfPermission || mngPermission) && (\r\n                                        <TableCell align=\"center\">\r\n                                            {selfPermission && (\r\n                                                <>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        handleDelay(mis)\r\n                                                    }}>申请延期</Button>\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{handleDone(mis,index)}}>提交完成申请</Button>\r\n                                                </>\r\n                                            )}\r\n                                            {mngPermission && (\r\n                                                <>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        setMissionDetail(mis)\r\n                                                        setEditOpen(true)\r\n                                                    }}>修改</Button>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            handleDelete(mis.id)\r\n                                                        }}>删除</Button>\r\n                                                </>\r\n\r\n                                            )}\r\n                                        </TableCell>\r\n                                    )}\r\n                                </TableRow>))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n            </Card>\r\n\r\n            <ProcessDelayForm open={delayOpen}\r\n                              onClose={()=>{\r\n                                  setDelayOpen(false)\r\n                                  setRefresh((p)=>!p)\r\n                              }}\r\n                              teacherStuId={teacherStuId}\r\n                              missionDetail={missionDetail}/>\r\n            <ProcessGroupDelayForm open={groupDelayOpen}\r\n                                  onClose={()=>{\r\n                                      window.location.reload()\r\n                                  }}\r\n                                  teacherStuId={teacherStuId}\r\n                                  groupList={groupDelay}/>\r\n            <ProcessEditForm open={editOpen}\r\n                             onClose={()=>{\r\n                                 setEditOpen(false)\r\n                                 setRefresh((p)=>!p)\r\n                             }}\r\n                             missionDetail={missionDetail}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\components\\Style\\PageView.js",["827"],"import {makeStyles} from \"@material-ui/core\";\r\nimport theme from \"../../theme\";\r\n\r\nconst PageView=makeStyles((theme)=>({\r\n    root: {\r\n        // flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    formRoot: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1.5),\r\n            width: \"25ch\",\r\n        },\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1.5),\r\n    },\r\n}))\r\n\r\nexport default PageView\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForStudent\\ScoreGraphForStu.js",["828","829","830"],"import {useEffect, useState} from \"react\";\r\nimport {MNG_RETURN_SCORE, MNG_RETURN_SCORE_VITAL} from \"../../../../settings\";\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default function ScoreGraphForStu(props){\r\n    const {userDetail}=props\r\n    let xLine\r\n    let yLine\r\n    const [option1,setOption1]=useState({})\r\n    const [option2,setOption2]=useState({})\r\n\r\n    const onClick={\r\n        \"click\":(e)=>{console.log(e)}\r\n    }\r\n\r\n    const getScoreVital=()=>{\r\n        fetch(`${MNG_RETURN_SCORE_VITAL}?stuId=${userDetail.stuId}`,{})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setOption2({\r\n                    title:{\r\n                        left:\"center\",\r\n                        text:`平均分数：${((res.data[1]+2*res.data[2]+3*res.data[3]+4*res.data[4]+5*res.data[5])/(res.data[0]+res.data[1]+res.data[2]+res.data[3]+res.data[4]+res.data[5])).toFixed(2)}`,\r\n                        top:\"50%\"\r\n                    },\r\n                    tooltip: {\r\n                        trigger: \"item\"\r\n                    },\r\n                    legend:{//图例组件\r\n                        orient: \"vertical\",\r\n                        left: \"20%\",\r\n                        top:\"20%\"\r\n                    },\r\n                    series:[\r\n                        {\r\n                            radius: ['40%', '70%'],\r\n                            avoidLabelOverlap: false,\r\n                            itemStyle: {\r\n                                borderRadius: 10,\r\n                                borderColor: '#fff',\r\n                                borderWidth: 2\r\n                            },\r\n                            label:{\r\n                                show: false\r\n                            },\r\n                            labelLine: {\r\n                                show: false\r\n                            },\r\n                            type: \"pie\",\r\n                            data: [\r\n                                {value: res.data[0], name: \"未评分的总数\"},\r\n                                {value: res.data[1], name: \"评分为1的总数\"},\r\n                                {value: res.data[2], name: \"评分为2的总数\"},\r\n                                {value: res.data[3], name: \"评分为3的总数\"},\r\n                                {value: res.data[4], name: \"评分为4的总数\"},\r\n                                {value: res.data[5], name: \"评分为5的总数\"}\r\n                            ]\r\n                        }\r\n                    ]\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getScoreVital()\r\n        fetch(`${MNG_RETURN_SCORE}?stuId=${userDetail?.stuId}`,{})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                xLine=res?.data.map((score)=>{\r\n                    return (score.year+\"年\"+score .season+\"季\")\r\n                })\r\n\r\n                yLine=res?.data.map((score)=>{\r\n                    return score.score\r\n                })\r\n                setOption1({\r\n                    title:{\r\n                        left:\"center\",\r\n                        text:`${userDetail.name}的评分统计`\r\n                    },\r\n                    xAxis:{\r\n                        type: \"category\",\r\n                        data:xLine\r\n                    },\r\n                    yAxis:{type: 'value'},\r\n                    series:[{\r\n                        data:yLine,\r\n                        type:\"line\",\r\n                        smooth:true\r\n                    }]})\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        (option1 !== {} && option2!=={}) && (//等到option加载完毕再进行渲染\r\n        <>\r\n            <ReactEcharts option={option1}>\r\n            </ReactEcharts>\r\n\r\n            <ReactEcharts option={option2} onEvents={onClick}></ReactEcharts>\r\n        </>\r\n    ))\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessEssentialForStu.js",["831","832"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Fab,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, Tooltip,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {\r\n    MNG_ADD_BULLETIN_URL,\r\n    MNG_ESSENTIAL_PROCESS_INIT, MNG_GET_ALL_USER,\r\n    MNG_GET_PROCESS_LIST, MNG_PROCESS_DELETE,\r\n    MNG_PROCESS_UPDATE\r\n} from \"../../../settings\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../base\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport ProcessDetailForm from \"./processForm/ProcessDetailForm\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ProcessAddForm from \"./processForm/ProcessAddForm\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport ProcessDelayForm from \"./processForm/ProcessDelayForm\";\r\nimport ConfirmForm from \"./processForm/ConfirmForm\";\r\n\r\nconst DELAY={\r\n    0:\"否\",\r\n    1:\"是\",\r\n}\r\n\r\nconst MISSIONSTATUS={\r\n    0:\"已延期\",\r\n    1:\"未完成\",\r\n    2:\"已提交\",\r\n    3:\"已完成\"\r\n}\r\n\r\nexport default function ProcessEssentialForStu(props){\r\n    const {userDetail}=props\r\n    const history=useHistory()\r\n    const classes=ContentStyleForPage()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [essentialMission,setEssentialMission]=useState([])\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [detailOpen,setDetailOpen]=useState(false)\r\n    const [missionDetail,setMissionDetail]=useState({})\r\n    const [teacherStuId,setTeacherStuId]=useState(\"\")\r\n    const [addOpen,setAddOpen]=useState(false)\r\n    const [delayOpen,setDelayOpen]=useState(false)\r\n    const [index,setIndex]=useState(0)\r\n    const [confirmDetail,setConfirmDetail]=useState({})\r\n    const [confirmForm,setConfirmForm]=useState(false)\r\n    const category=1\r\n    const tinyCategory=null\r\n\r\n    const selfPermission= userInfo.stuId===userDetail.stuId\r\n    const mentorPermission= userInfo.name===userDetail.mentor\r\n\r\n    const queryTeacher=()=>{//查询老师stuId\r\n        fetch(`${MNG_GET_ALL_USER}?name=${userDetail?.mentor}&limit=1`)\r\n            .then((r)=>r.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((r)=>{\r\n                setTeacherStuId(r?.data[0]?.stuId || \"\")\r\n            })\r\n    }\r\n\r\n    const getEssentialMission=()=>{//获取必要任务的列表\r\n        fetch(`${MNG_GET_PROCESS_LIST}?stuId=${userDetail.stuId}&category=${1}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setEssentialMission(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleUpload=(mission,index)=>{//处理提交完成申请\r\n        if(mission.missionStatus!==1){\r\n            alertBox({text:\"提交错误，这个任务不是可提交状态\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(essentialMission[index-1] && essentialMission[index-1].missionStatus && essentialMission[index-1].missionStatus!==3){//前一个任务没有到完成阶段，不能提交\r\n            if(essentialMission[index-1].year!==mission.year || essentialMission[index-1].month!==mission.month){\r\n                alertBox({text:\"提交错误，上一个任务还没有完成\",severity:\"error\"})\r\n                return\r\n            }\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要提交该任务的完成申请吗\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_UPDATE,\r\n                    values:{\r\n                        id:mission.id,\r\n                        missionStatus:2\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"提交成功，请等待导师的回复\",severity:\"success\"})\r\n                        postFetch({//向导师发送邮件\r\n                            url:MNG_ADD_BULLETIN_URL,\r\n                            values:{\r\n                                stuId:teacherStuId,\r\n                                title:\"您的学生提交了必要任务的完成申请\",\r\n                                content:\"您的学生[\"+userDetail.name+\"]提交了必要任务的完成申请，请到培养过程模块进行处理\"\r\n                            }\r\n                        })\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelete=(missionId)=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要删除这一条任务吗\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${MNG_PROCESS_DELETE}?id=${missionId}`,{method:\"POST\"})\r\n                    .then(()=>{\r\n                        alertBox({text:\"删除成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        queryTeacher()\r\n        fetch(`${MNG_GET_PROCESS_LIST}?stuId=${userDetail.stuId}&category=${1}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setEssentialMission(res?.data || [])\r\n                let confMission=res?.data.find((m)=>m.missionStatus===2)\r\n                if(confMission){\r\n                    setConfirmDetail(confMission)\r\n                    setConfirmForm(true)\r\n                }\r\n            })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getEssentialMission()\r\n    },[refresh])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                    {mentorPermission && `${userDetail.name}的`}必要任务列表\r\n                </Typography>\r\n\r\n                {((selfPermission || mentorPermission) && essentialMission.length===0) && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{//点击初始化\r\n                            const cor=confirmModal({\r\n                                title:\"必要任务有专硕和学硕之分，请初始化之前先确认自己的硕士类型\",\r\n                                handleCorfirm:()=>{\r\n                                    cor.close()\r\n                                    postFetch({\r\n                                        url:MNG_ESSENTIAL_PROCESS_INIT,\r\n                                        values:{\r\n                                            stuId:userDetail.stuId,\r\n                                            stuName:userDetail.name,\r\n                                            enrollYear:userDetail.enrollYear,\r\n                                            keshuo:userDetail.type===10? 1:userDetail.keshuo\r\n                                        },\r\n                                        successCallback:()=>{\r\n                                            alertBox({text:\"初始化成功\",severity:\"success\"})\r\n                                            window.location.reload()\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }}\r\n                    >初始化任务列表</Button>\r\n                )}\r\n\r\n                {!selfPermission && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            history.goBack()\r\n                        }}\r\n                        >返回</Button>\r\n                )}\r\n\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            {mentorPermission && (\r\n                <Tooltip title=\"点击增加新任务\">\r\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                        setAddOpen(true)\r\n                    }} >\r\n                        <AddIcon/>\r\n                    </Fab>\r\n                </Tooltip>\r\n            )}\r\n            <Paper>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">任务</TableCell>\r\n                            <TableCell align=\"center\">任务详细内容</TableCell>\r\n                            <TableCell>任务状态</TableCell>\r\n                            <TableCell align=\"center\">是否已延期</TableCell>\r\n                            <TableCell>预计完成时间</TableCell>\r\n                            {(mentorPermission || selfPermission) && (\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            )}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {essentialMission.map((mission,index)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">{mission.missionName}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        variant=\"text\"\r\n                                        onClick={()=>{\r\n                                            setDetailOpen(true)\r\n                                            setMissionDetail(mission)\r\n                                        }}\r\n                                        >查看详细任务内容</Button>\r\n\r\n                                </TableCell>\r\n                                <TableCell>{MISSIONSTATUS[mission.missionStatus]}</TableCell>\r\n                                <TableCell align=\"center\">{DELAY[mission.isDelay]}</TableCell>\r\n                                <TableCell>{mission.year}年{mission.month}月</TableCell>\r\n                                {mentorPermission && (\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                if(mission.missionStatus!==0 && mission.missionStatus!==1){\r\n                                                    alertBox({text:\"任务状态无法延期\",severity:\"error\"})\r\n                                                    return\r\n                                                }\r\n                                                setDelayOpen(true)\r\n                                                setMissionDetail(mission)\r\n                                                setIndex(index)\r\n                                            }}\r\n                                        >延期</Button>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                handleDelete(mission.id)\r\n                                            }}\r\n                                        >删除</Button>\r\n                                    </TableCell>\r\n                                )}\r\n                                {selfPermission && (\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                handleUpload(mission,index)\r\n                                            }}\r\n                                            >提交完成申请</Button>\r\n                                    </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n\r\n            <ProcessDetailForm open={detailOpen}\r\n                               onClose={()=>{\r\n                                   setDetailOpen(false)\r\n                                   setRefresh((p)=>!p)\r\n                               }}\r\n                               missionDetail={missionDetail} />\r\n            <ProcessAddForm open={addOpen}\r\n                            onClose={()=>{\r\n                                setAddOpen(false)\r\n                                setRefresh((p)=>!p)\r\n                            }}\r\n                            userDetail={userDetail}\r\n                            category={category}\r\n                            tinyCategory={tinyCategory}\r\n            />\r\n\r\n            <ProcessDelayForm open={delayOpen}\r\n                              onClose={()=>{\r\n                                  setDelayOpen(false)\r\n                                  setRefresh((p)=>!p)\r\n                              }}\r\n                              mission={essentialMission}\r\n                              missionDetail={missionDetail} index={index}/>\r\n\r\n            <ConfirmForm open={confirmForm} //教师处理学生提交请求的\r\n                         onClose={()=>{\r\n                             setConfirmForm(false)\r\n                             setRefresh((p)=>!p)\r\n                         }}\r\n                         detail={confirmDetail}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\ProcessBaseForStu.js",["833","834"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Fab, Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip\r\n} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n    MNG_ADD_BULLETIN_URL,\r\n    MNG_BASE_PROCESS_INIT,\r\n    MNG_GET_ALL_USER,\r\n    MNG_GET_PROCESS_LIST, MNG_PROCESS_DELETE, MNG_PROCESS_UPDATE\r\n} from \"../../../settings\";\r\nimport {postFetch} from \"../../../base\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ProcessAddForm from \"./processForm/ProcessAddForm\";\r\nimport ProcessDetailForm from \"./processForm/ProcessDetailForm\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport ProcessPartAddForm from \"./processForm/ProcessPartAddForm\";\r\nimport ProcessDelayForm from \"./processForm/ProcessDelayForm\";\r\nimport ConfirmForm from \"./processForm/ConfirmForm\";\r\n\r\nconst TYPES=[\r\n    {\r\n        value:1,\r\n        name:\"学术科研\",\r\n    },\r\n    {\r\n        value:2,\r\n        name:\"专业技术\",\r\n    },\r\n    {\r\n        value:3,\r\n        name:\"思政服务\"\r\n    }\r\n]\r\n\r\nconst DELAY={\r\n    0:\"否\",\r\n    1:\"是\",\r\n}\r\n\r\nconst MISSIONSTATUS={\r\n    0:\"已延期\",\r\n    1:\"未完成\",\r\n    2:\"已提交\",\r\n    3:\"已完成\"\r\n}\r\nexport default function ProcessBaseForStu(props){\r\n    const {userDetail}=props\r\n    const classes=ContentStyleForPage()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [type,setType]=useState(1)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [baseMission,setBaseMission]=useState([])\r\n    const [teacherStuId,setTeacherStuId]=useState(\"\")\r\n    const [addOpen,setAddOpen]=useState(false)\r\n    const [detailOpen,setDetailOpen]=useState(false)\r\n    const [missionDetail,setMissionDetail]=useState({})\r\n    const [partAddOpen,setPartAddOpen]=useState(false)\r\n    const [delayOpen,setDelayOpen]=useState(false)\r\n    const [index,setIndex]=useState(0)\r\n    const [confirmDetail,setConfirmDetail]=useState({})\r\n    const [confirmForm,setConfirmForm]=useState(false)\r\n    const history=useHistory()\r\n    const category=2\r\n\r\n    const mentorPermission= userDetail.mentor===userInfo.name\r\n    const selfPermission= userDetail.stuId===userInfo.stuId\r\n\r\n    const queryTeacher=()=>{//查询老师stuId\r\n        fetch(`${MNG_GET_ALL_USER}?name=${userDetail?.mentor}&limit=1`)\r\n            .then((r)=>r.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((r)=>{\r\n                setTeacherStuId(r?.data[0]?.stuId || \"\")\r\n            })\r\n    }\r\n\r\n    const getBaseMission=()=>{\r\n        fetch(`${MNG_GET_PROCESS_LIST}?stuId=${userDetail.stuId}&category=${2}&tinyCategory=${type}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setBaseMission(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleUpload=(mission,index)=>{//处理提交完成申请\r\n        if(mission.missionStatus!==1){\r\n            alertBox({text:\"提交错误，这个任务不是可提交状态\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(baseMission[index-1] && baseMission[index-1].missionStatus && baseMission[index-1].missionStatus!==3){//前一个任务没有到完成阶段，不能提交\r\n            if(baseMission[index-1].year!==mission.year || baseMission[index-1].month!==mission.month){\r\n                alertBox({text:\"提交错误，上一个任务还没有完成\",severity:\"error\"})\r\n                return\r\n            }\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要提交该任务的完成申请吗\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_UPDATE,\r\n                    values:{\r\n                        id:mission.id,\r\n                        missionStatus:2\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"提交成功，请等待导师的回复\",severity:\"success\"})\r\n                        postFetch({//向导师发送邮件\r\n                            url:MNG_ADD_BULLETIN_URL,\r\n                            values:{\r\n                                stuId:teacherStuId,\r\n                                title:\"您的学生提交了基础任务的完成申请\",\r\n                                content:\"您的学生[\"+userDetail.name+\"]提交了[\"+TYPES.find((t)=>t.value===type).name+\"]板块的基础任务的完成申请，请到培养过程模块进行处理\"\r\n                            }\r\n                        })\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelete=(missionId)=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要删除这一条任务吗\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${MNG_PROCESS_DELETE}?id=${missionId}`,{method:\"POST\"})\r\n                    .then(()=>{\r\n                        alertBox({text:\"删除成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        queryTeacher()\r\n        fetch(`${MNG_GET_PROCESS_LIST}?stuId=${userDetail.stuId}&category=${2}&tinyCategory=${type}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setBaseMission(res?.data || [])\r\n                fetch(`${MNG_GET_PROCESS_LIST}?stuId=${userDetail.stuId}&category=${2}&tinyCategory=${type}`)\r\n                    .then((res)=>res.json())\r\n                    .catch((error)=>console.log(error))\r\n                    .then((res)=>{\r\n                        setBaseMission(res?.data || [])\r\n                        let confMission=res?.data.find((m)=>m.missionStatus===2)\r\n                        if(confMission){\r\n                            setConfirmDetail(confMission)\r\n                            setConfirmForm(true)\r\n                        }\r\n                    })\r\n            })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getBaseMission()\r\n    },[refresh])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <TextField\r\n                    select\r\n                    label=\"板块类型\"\r\n                    size=\"small\"\r\n                    value={type}\r\n                    onChange={(e) => {\r\n                        setType(parseInt(e.target.value))\r\n                        setRefresh((p)=>!p)\r\n                    }}\r\n                    SelectProps={{\r\n                        native: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                >{TYPES.map((t)=>(\r\n                    <option value={t.value}>\r\n                        {t.name}\r\n                    </option>\r\n                    )\r\n                )}\r\n                </TextField>\r\n\r\n                {((selfPermission || mentorPermission) && baseMission.length===0) && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{//点击初始化\r\n                            postFetch({\r\n                                url:MNG_BASE_PROCESS_INIT,\r\n                                values:{\r\n                                    stuId:userDetail.stuId,\r\n                                    name:userDetail.name,\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"初始化成功\",severity:\"success\"})\r\n                                    setRefresh((p)=>!p)\r\n                                }\r\n                            })\r\n                        }}\r\n                    >初始化任务列表</Button>\r\n                )}\r\n\r\n                {!selfPermission && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            history.goBack()\r\n                        }}\r\n                        >返回</Button>\r\n                )}\r\n            </div>\r\n\r\n            <Divider/>\r\n            {mentorPermission && (\r\n                <Tooltip title=\"点击增加新任务\">\r\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                        setAddOpen(true)\r\n                    }} >\r\n                        <AddIcon/>\r\n                    </Fab>\r\n                </Tooltip>\r\n            )}\r\n\r\n            <Paper>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">任务</TableCell>\r\n                            <TableCell align=\"center\">任务详细内容</TableCell>\r\n                            <TableCell>任务状态</TableCell>\r\n                            <TableCell align=\"center\">是否已延期</TableCell>\r\n                            <TableCell>预计完成时间</TableCell>\r\n                            {(mentorPermission || selfPermission) && (\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            )}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {baseMission.map((mission,index)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">{mission.missionName}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {mission.missionDetail? (\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                setDetailOpen(true)\r\n                                                setMissionDetail(mission)\r\n                                            }}\r\n                                        >查看详细任务内容</Button>\r\n                                    ):(\r\n                                        mentorPermission ?\r\n                                            <Tooltip title=\"点击添加任务内容\">\r\n                                                <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                                                    setPartAddOpen(true)\r\n                                                    setMissionDetail(mission)\r\n                                                }}>\r\n                                                    <AddIcon/>\r\n                                                </Fab>\r\n                                            </Tooltip>\r\n                                            :\"等待导师添加\"\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {mission.missionStatus && MISSIONSTATUS[mission.missionStatus]}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    {DELAY[mission.isDelay]}\r\n                                </TableCell>\r\n                                <TableCell>{mission.year && `${mission.year}年${mission.month}月`}</TableCell>\r\n                                {mentorPermission && (\r\n                                    <TableCell align=\"center\">\r\n                                        {mission.missionDetail &&\r\n                                            (<>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={() => {\r\n                                                            if(mission.missionStatus!==0 && mission.missionStatus!==1){\r\n                                                                alertBox({text:\"任务状态无法延期\",severity:\"error\"})\r\n                                                                return\r\n                                                            }\r\n                                                            setDelayOpen(true)\r\n                                                            setMissionDetail(mission)\r\n                                                            setIndex(index)\r\n                                                        }}\r\n                                                    >延期</Button>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            handleDelete(mission.id)\r\n                                                        }}\r\n                                                    >删除</Button></>\r\n                                            )\r\n                                        }\r\n                                    </TableCell>\r\n                                )}\r\n                                {selfPermission && (\r\n                                    <TableCell align=\"center\">\r\n                                        {mission.missionDetail && (\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{\r\n                                                    handleUpload(mission,index)\r\n                                                }}\r\n                                            >提交完成申请</Button>\r\n                                        )}\r\n                                    </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n\r\n            <ProcessDetailForm open={detailOpen}\r\n                               onClose={()=>{\r\n                                   setDetailOpen(false)\r\n                                   setRefresh((p)=>!p)\r\n                               }}\r\n                               missionDetail={missionDetail} />\r\n\r\n            <ProcessAddForm open={addOpen}\r\n                            onClose={()=>{\r\n                                setAddOpen(false)\r\n                                setRefresh((p)=>!p)\r\n                            }}\r\n                            userDetail={userDetail}\r\n                            category={category}\r\n                            tinyCategory={type} />\r\n\r\n            <ProcessPartAddForm open={partAddOpen}\r\n                                onClose={()=>{\r\n                                    setPartAddOpen(false)\r\n                                    setRefresh((p)=>!p)\r\n                                }}\r\n                                missionDetail={missionDetail}\r\n            />\r\n\r\n            <ProcessDelayForm open={delayOpen}\r\n                               onClose={()=>{\r\n                                   setDelayOpen(false)\r\n                                   setRefresh((p)=>!p)\r\n                               }}\r\n                               mission={baseMission}\r\n                               missionDetail={missionDetail}\r\n                              index={index}\r\n            />\r\n            <ConfirmForm open={confirmForm} //教师处理学生提交请求的\r\n                         onClose={()=>{\r\n                             setConfirmForm(false)\r\n                             setRefresh((p)=>!p)\r\n                         }}\r\n                         detail={confirmDetail}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\StuBaseInformation.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForStudent\\ScoreForStu.js",["835","836","837"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_GET_ALL_USER, MNG_RETURN_SCORE, MNG_UPDATE_SCORE} from \"../../../../settings\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport ScoreEditForm from \"../scoreForm/ScoreEditForm\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport ScoreStudentComment from \"../scoreForm/ScoreStudentComment\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport ScoreAddForm from \"../scoreForm/ScoreAddForm\";\r\nimport ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\nimport TeaCommentForm from \"../scoreForm/TeaCommentForm\";\r\nimport TeaCommentForTeaForm from \"../scoreForm/TeaCommentForTeaForm\";\r\n\r\nexport default function ScoreForStu(props){\r\n    const {userDetail}=props\r\n    const classes=ContentStyleForPage()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [scoreDetail,setScoreDetail]=useState({})\r\n    const [scores,setScores]=useState([])\r\n    const [openEdit,setOpenEdit]=useState(false)\r\n    const [openAdd,setOpenAdd]=useState(false)\r\n    const [commentOpen, setCommentOpen]=useState(false)\r\n    const [teacherStuId,setTeacherStuId]=useState(\"\")\r\n    const [teaCommentOpen,setTeaCommentOpen]=useState(false)\r\n    const [teaCommentOpenForTea, setTeaCommentOpenForTea]=useState(false)\r\n    const history=useHistory()\r\n\r\n    const mentorPermission= userInfo.name==userDetail.mentor\r\n\r\n    const selfPermission= userInfo.stuId==userDetail.stuId //登陆者是否是本人\r\n\r\n    const handleScoreChanged=({score,newValue})=>{ //修改评分\r\n        if(newValue===0){\r\n            alertBox({text:\"评分至少为1分\",severity:\"success\"})\r\n            return\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要修改评分吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_UPDATE_SCORE,\r\n                    values:{\r\n                        id:score.id,\r\n                        score:parseInt(newValue)\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({ text: \"评分成功\", severity: \"success\" });\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const queryTeacher=()=>{//查询老师id\r\n        fetch(`${MNG_GET_ALL_USER}?name=${userDetail?.mentor}&limit=1`)\r\n            .then((r)=>r.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((r)=>{\r\n                setTeacherStuId(r?.data[0]?.stuId || \"\")\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userDetail?.id){ //获取这个学生的分数信息\r\n            fetch(`${MNG_RETURN_SCORE}?stuId=${userDetail?.stuId}`,{})\r\n                .then((res)=>res.json())\r\n                .catch((error)=>console.error(\"Error:\",error))\r\n                .then((response)=>{\r\n                    setScores(response?.data || [])\r\n                })\r\n            queryTeacher()\r\n        }\r\n    },[refresh])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                    {mentorPermission && `${userDetail.name}的`}季度评分\r\n                </Typography>\r\n\r\n                {selfPermission && ( //如果是自己的话，可以新增一个季度自评\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            setOpenAdd(true)\r\n                        }}\r\n                    >添加季度自评</Button>\r\n                )}\r\n\r\n                {(mentorPermission || userInfo.stuId===\"07175\") && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            history.goBack()\r\n                        }}\r\n                    >返回</Button>\r\n                )}\r\n            </div>\r\n\r\n                <Divider/>\r\n\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>年份</TableCell>\r\n                                <TableCell align=\"center\">季度</TableCell>\r\n                                <TableCell align=\"center\">评分</TableCell>\r\n                                <TableCell align=\"center\">自评</TableCell>\r\n                                {(mentorPermission || selfPermission) && (//登录的用户是选择用户的导师或者是用户自己，开放这个功能\r\n                                    <TableCell align=\"center\">操作</TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {scores.map((score)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{score.year}</TableCell>\r\n                                    <TableCell align=\"center\">{score.season}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {mentorPermission? <Rating defaultValue={score.score} value={score.score} onChange={(e,newValue)=>{\r\n                                                e.preventDefault()//阻止默认行为\r\n                                                handleScoreChanged({score,newValue})}} />\r\n                                            : <Rating disabled defaultValue={score.score} value={score.score}/>}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                setScoreDetail(score)\r\n                                                setCommentOpen(true)\r\n                                            }}\r\n                                        >点击查看学生自评</Button>\r\n                                    </TableCell>\r\n                                    {(mentorPermission || selfPermission) && ( //用户的导师和用户自己都可以进行修改，不同的是导师只能修改评分，用户只能修改自评\r\n                                        <TableCell align=\"center\">\r\n                                            {selfPermission && (\r\n                                                <>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            setOpenEdit(true)\r\n                                                            setScoreDetail(score)\r\n                                                        }}\r\n                                                    >修改自评\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            setTeaCommentOpen(true)\r\n                                                            setScoreDetail(score)\r\n                                                        }}>查看导师评价\r\n                                                    </Button>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            {mentorPermission && ( //只有导师才有资格删除评分\r\n                                                <>\r\n                                                    {score.teaComment ? (\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            variant=\"text\"\r\n                                                            onClick={()=>{\r\n                                                                setTeaCommentOpenForTea(true)\r\n                                                                setScoreDetail(score)\r\n                                                            }}\r\n                                                            >修改导师评价</Button>\r\n                                                    ): (\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            variant=\"text\"\r\n                                                            onClick={()=>{\r\n                                                                setTeaCommentOpenForTea(true)\r\n                                                                setScoreDetail(score)\r\n                                                            }}\r\n                                                        >添加导师评价</Button>\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n                                        </TableCell>\r\n                                    )}\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n            <ScoreEditForm open={openEdit}\r\n                           onClose={()=>{\r\n                               setOpenEdit(false)\r\n                               setRefresh((p)=>!p)\r\n                               setScoreDetail({})\r\n                           }}\r\n                           scoreDetail={scoreDetail}\r\n            />\r\n\r\n            <ScoreAddForm open={openAdd}\r\n                          onClose={()=>{\r\n                              setOpenAdd(false)\r\n                              setRefresh((p)=>!p)\r\n                          }}\r\n                          userDetail={userDetail}\r\n                          teacherStuId={teacherStuId} />\r\n\r\n            <ScoreStudentComment open={commentOpen}\r\n                                 onClose={()=>{\r\n                                     setCommentOpen(false)\r\n                                     setRefresh((p)=>!p)\r\n                                     setScoreDetail({})\r\n                                 }}\r\n                                 scoreDetail={scoreDetail}\r\n            />\r\n\r\n            <TeaCommentForm open={teaCommentOpen}\r\n                            onClose={()=>{\r\n                                setTeaCommentOpen(false)\r\n                                setRefresh((p)=>!p)\r\n                                setScoreDetail({})\r\n                            }}\r\n                            scoreDetail={scoreDetail}/>\r\n\r\n            <TeaCommentForTeaForm open={teaCommentOpenForTea}\r\n                                  onClose={()=>{\r\n                                      setTeaCommentOpenForTea(false)\r\n                                      setRefresh((p)=>!p)\r\n                                      setScoreDetail({})\r\n                                  }}\r\n                                  scoreDetail={scoreDetail}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\ProcessADVConfig.js",["838"],"import ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\nimport {Button, Divider, Fab, Paper, TextField, Tooltip} from \"@material-ui/core\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {Table, TableBody, TableCell, TableHead, TableRow} from \"@mui/material\";\r\nimport {\r\n    MNG_DELETE_PROCESS_CATEGORY,\r\n    MNG_GET_ALL_PROCESS_CATEGORY,\r\n    MNG_GET_TINY_PROCESS_CATEGORY,\r\n    MNG_PROCESS_ADD, MNG_RECONFIG_PROCESS, MNG_RESET_PROCESS_CATEGORY,\r\n    MNG_UPDATE_USER_URL\r\n} from \"../../../../settings\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport ProcessAddForm from \"../processForm/ProcessAddForm\";\r\nimport ProcessTinyCategoryAddForm from \"../processForm/ProcessTinyCategoryAddForm\";\r\nconst TYPES=[\r\n    {\r\n        value:1,\r\n        name:\"学术科研\",\r\n    },\r\n    {\r\n        value:2,\r\n        name:\"专业技术\",\r\n    },\r\n    {\r\n        value:3,\r\n        name:\"思政服务\"\r\n    }\r\n]\r\n\r\nconst STUDYTYPE={\r\n    1:\"学硕\",\r\n    2:\"专硕\",\r\n    3:\"学工\"\r\n}\r\n\r\nexport default function ProcessADVConfig(props){\r\n    const classes=ContentStyleForPage()\r\n    const history=useHistory()\r\n    const {userDetail, userStuId}=props\r\n    const {userInfo}=useContext(UserContext)\r\n    const [studyType,setStudyType]=useState(1)//学生类型\r\n    const [type,setType]=useState(1)//板块类型\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [tinyCategoryAdd,setTinyCategoryAdd]=useState(false)\r\n    const [allTinyCategory,setAllTinyCategory]=useState([])\r\n    const [allCategory,setAllCategory]=useState([])\r\n    const [categoryDetail,setCategoryDetail]=useState({})\r\n    const [categoryAdd,setCategoryAdd]=useState(false)\r\n    const [tinyCategory,setTinyCategory]=useState({})\r\n\r\n    const mngPermission= userInfo.isEducateMng===1//是否拥有管理员权限\r\n    const configPermission= typeof(userDetail)===\"undefined\" && typeof(userStuId)===\"undefined\" //管理员配置任务\r\n    const stuPermission= typeof(userDetail)!==\"undefined\" && typeof(userStuId)===\"undefined\" //学生选择任务\r\n    const configForStuPermission =typeof(userDetail)!==\"undefined\" && typeof(userStuId)!==\"undefined\"//管理员为学生重新配置任务\r\n\r\n    const getAllTintProcessCategory=()=>{//这里某一板块某一类型学生对应的所有大类\r\n        fetch(`${MNG_GET_TINY_PROCESS_CATEGORY}?type=${type}&studyType=${studyType}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setAllTinyCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const getAllProcessCategory=()=>{//这里是某一板块某一类型学生对应的所有小类别\r\n        fetch(`${MNG_GET_ALL_PROCESS_CATEGORY}?type=${type}&studyType=${studyType}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setAllCategory(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleSubmit=()=>{//提交初始化请求\r\n        if(!mngPermission){//没有管理员权限，说明是自己提交的\r\n            const cor=confirmModal({\r\n                title:\"确认要提交吗？只能提交一次并且没有修改机会，请与导师商量后再做选择\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    if(allCategory.length===0){\r\n                        alertBox({text:\"还未添加任务，请等待\",severity:\"error\"})\r\n                        return\r\n                    }\r\n                    postFetch({\r\n                        url:MNG_UPDATE_USER_URL,\r\n                        values:{\r\n                            id:userDetail.id,\r\n                            // studyType:type,\r\n                            keshuo:studyType\r\n                        },\r\n                        successCallback:()=>{\r\n                            postFetch({\r\n                                url:MNG_PROCESS_ADD,\r\n                                values:{\r\n                                    stuName:userDetail.name,\r\n                                    stuId:userDetail.stuId,\r\n                                    categoryList:allCategory,\r\n                                    enrollYear:userDetail.enrollYear\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"选择成功\",severity:\"success\"})\r\n                                    window.location.reload()\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        else{//管理员\r\n            if (userDetail.studyType===type && userDetail.keshuo===studyType){\r\n                alertBox({text:\"重复选择同一个类型\",severity:\"error\"})\r\n                return\r\n            }\r\n            const cor=confirmModal({\r\n                title:\"确定要重新配置这个学生的培养过程吗？\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    postFetch({//第一步，修改他本人的信息\r\n                        url:MNG_UPDATE_USER_URL,\r\n                        values:{\r\n                            id:userDetail.id,\r\n                            studyType:type,\r\n                            keshuo:studyType\r\n                        },\r\n                        successCallback:()=>{\r\n                            postFetch({//第二步，将原先配置的任务，除去已提交的和未完成的，都删除掉\r\n                                url:MNG_RECONFIG_PROCESS,\r\n                                values:{\r\n                                    stuId:userDetail.stuId\r\n                                },\r\n                                successCallback:()=>{\r\n                                    postFetch({//第三步，把新配置的任务给他装好\r\n                                        url:MNG_PROCESS_ADD,\r\n                                        values:{\r\n                                            stuName:userDetail.name,\r\n                                            stuId:userDetail.stuId,\r\n                                            categoryList:allCategory,\r\n                                            enrollYear:userDetail.enrollYear\r\n                                        },\r\n                                        successCallback:()=>{\r\n                                            alertBox({text:\"选择成功\",severity:\"success\"})\r\n                                            setRefresh((p)=>!p)\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleReset=()=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要重置\"+STUDYTYPE[studyType]\r\n                +\"类型的所有基础任务吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${MNG_RESET_PROCESS_CATEGORY}?type=${type}&studyType=${studyType}`,{method:\"POST\"})\r\n                    .then(()=>{\r\n                        alertBox({text:\"重置成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDelete=(id)=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要删除这一条任务吗\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${MNG_DELETE_PROCESS_CATEGORY}?id=${id}`,{method:\"POST\"})\r\n                    .then(()=>{\r\n                        alertBox({text:\"删除成功\",severity:\"success\"})\r\n                        setRefresh((p)=>!p)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllTintProcessCategory()\r\n        getAllProcessCategory()\r\n    },[refresh])\r\n\r\n    return (\r\n        <Paper>\r\n            <div className={classes.root}>\r\n                <div className={classes.header}>\r\n                    <TextField\r\n                        select\r\n                        label=\"板块类型\"\r\n                        size=\"small\"\r\n                        value={type}\r\n                        onChange={(e) => {\r\n                            setType(parseInt(e.target.value))\r\n                            setRefresh((p)=>!p)\r\n                        }}\r\n                        SelectProps={{\r\n                            native: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    >{(studyType===1 || studyType===2)?(\r\n                            TYPES.filter((type)=>{\r\n                                return type.value!==3\r\n                            }).map((t)=>(\r\n                                <option value={t.value}>\r\n                                    {t.name}\r\n                                </option>\r\n                            ))\r\n                        ):(TYPES.filter((type)=>{\r\n                            return type.value===3\r\n                    }).map((t)=>(\r\n                        <option value={t.value}>\r\n                            {t.name}\r\n                        </option>))\r\n                        )}\r\n                    </TextField>\r\n\r\n                    <FormControl>\r\n                        <FormLabel id=\"demo-radio-buttons-group-label\">请选择配置任务对应的学生身份</FormLabel>\r\n                        <RadioGroup\r\n                            row\r\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                            defaultValue={studyType}\r\n                            name=\"radio-buttons-group\"\r\n                            onChange={(event, value) => {\r\n                                if(parseInt(value)===3){\r\n                                    setStudyType(parseInt(value))\r\n                                    setType(3)\r\n                                    setRefresh((p)=>!p)\r\n                                }\r\n                                else{\r\n                                    setStudyType(parseInt(value))\r\n                                    setType(1)\r\n                                    setRefresh((p)=>!p)\r\n                                }\r\n                            }}\r\n                        >\r\n                            <FormControlLabel value={1} control={<Radio/>} label=\"学硕\"/>\r\n                            <FormControlLabel value={2} control={<Radio/>} label=\"专硕\"/>\r\n                            <FormControlLabel value={3} control={<Radio/>} label=\"学工\"/>\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n\r\n                    {(mngPermission && configForStuPermission) && (//拥有管理员权限，并且stuId不为空\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                handleSubmit()\r\n                            }}>确认提交</Button>\r\n                    )}\r\n\r\n                    {stuPermission && (\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                handleSubmit()\r\n                            }}>确认提交</Button>\r\n                    )}\r\n\r\n                    {mngPermission && (//是管理员，要离开\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                history.goBack()\r\n                            }}>返回</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <Divider/>\r\n                {(mngPermission && configPermission) && (\r\n                    <Tooltip title=\"点击增加新任务类别\">\r\n                        <Fab color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                            setTinyCategoryAdd(true)\r\n                        }} >\r\n                            <AddIcon/>\r\n                        </Fab>\r\n                    </Tooltip>\r\n                )}\r\n\r\n                {(mngPermission && configPermission) && (\r\n                    <Button\r\n                        style={{\r\n                            float:\"right\"\r\n                        }}\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            handleReset()\r\n                        }}>重置任务</Button>\r\n                )}\r\n\r\n                <Paper>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>任务类别</TableCell>\r\n                                <TableCell>任务</TableCell>\r\n                                <TableCell align=\"center\">预计完成时间</TableCell>\r\n                                {(mngPermission && configPermission) && (\r\n                                    <TableCell align=\"center\">操作</TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {allTinyCategory.map((tinyCategory)=>(\r\n                                <>\r\n                                    <TableRow>\r\n                                        <TableCell rowSpan={(mngPermission && configPermission)? (allCategory.filter((category)=>{\r\n                                            return category.processCategory===tinyCategory.processCategory\r\n                                        }).length+2):(allCategory.filter((category)=>{\r\n                                            return category.processCategory===tinyCategory.processCategory\r\n                                        }).length+1)}>\r\n                                            {tinyCategory.processCategory}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    {/**以上是大的类别**/}\r\n                                    {allCategory.filter((category)=>{return category.processCategory===tinyCategory.processCategory}).map((category)=>(\r\n                                        <TableRow>\r\n                                            <TableCell>{category.categoryMission}</TableCell>\r\n                                            <TableCell align=\"center\">第{category.year}学年{category.month}月份</TableCell>\r\n                                            {(mngPermission && configPermission)&& (\r\n                                                <TableCell align=\"center\">\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        variant=\"text\"\r\n                                                        size=\"small\"\r\n                                                        onClick={()=>{\r\n                                                            setCategoryAdd(true)\r\n                                                            setTinyCategory(tinyCategory.processCategory)\r\n                                                            setCategoryDetail(category)\r\n                                                        }}>修改</Button>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        variant=\"text\"\r\n                                                        size=\"small\"\r\n                                                        onClick={()=>{handleDelete(category.id)}}\r\n                                                    >删除</Button>\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    {(mngPermission && configPermission) && (\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                <Tooltip title=\"点击添加任务内容\">\r\n                                                    <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={()=>{\r\n                                                        setCategoryAdd(true)\r\n                                                        setTinyCategory(tinyCategory.processCategory)\r\n                                                    }}><AddIcon/>\r\n                                                    </Fab></Tooltip>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\"></TableCell>\r\n                                            <TableCell align=\"center\"></TableCell>\r\n                                        </TableRow>\r\n                                    )}\r\n                                </>))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n\r\n                <ProcessTinyCategoryAddForm open={tinyCategoryAdd}\r\n                                            type={type}\r\n                                            studyType={studyType}\r\n                                            onClose={()=>{\r\n                                                setTinyCategoryAdd(false)\r\n                                                setRefresh((p)=>!p)\r\n                                            }}\r\n                />\r\n                <ProcessAddForm open={categoryAdd}\r\n                                type={type}\r\n                                studyType={studyType}\r\n                                tinyCategory={tinyCategory}\r\n                                categoryDetail={categoryDetail}\r\n                                onClose={()=>{\r\n                                    setCategoryAdd(false)\r\n                                    setCategoryDetail({})\r\n                                    setRefresh((p)=>!p)\r\n                                }} />\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\GraduateInformation.js",["839","840"],"import ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\nimport {PROCESS_GET_GRADUATE_INFORMATION,\r\n    PROCESS_GET_MASTERFROMMENTOR_TOTAL\r\n} from \"../../../../settings\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\nexport default function GraduateInformation(){\r\n    const classes=ContentStyleForPage()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [pageNo, setPageNo]=useState(0)\r\n    const [page, setPage]=useState(1)\r\n    const [graduate, setGraduate]=useState([])\r\n\r\n    const getTotal=()=>{\r\n        fetch(`${PROCESS_GET_MASTERFROMMENTOR_TOTAL}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setPageNo(Math.ceil(res.data/10) || 0)\r\n            })\r\n    }\r\n\r\n    const getGraduateInformation=()=>{\r\n        fetch(`${PROCESS_GET_GRADUATE_INFORMATION}?name=${userInfo.name}&limit=10&offset=${(page-1)*10}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setGraduate(res?.data || [])\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getTotal()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getGraduateInformation()\r\n    },[page])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography color=\"textPrimary\" size=\"small\">\r\n                    毕业相关信息\r\n                </Typography>\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>姓名</TableCell>\r\n                        <TableCell align=\"center\">学/工号</TableCell>\r\n                        <TableCell align=\"center\">硕士类型</TableCell>\r\n                        <TableCell align=\"center\">预计毕业时间</TableCell>\r\n                        <TableCell align=\"center\">是否完成所有前置工作</TableCell>\r\n                        <TableCell align=\"center\">目前工作</TableCell>\r\n                        <TableCell align=\"center\">未完成工作列表</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {graduate.map((data)=>(\r\n                        <TableRow>\r\n                            <TableCell>{data.stuName}</TableCell>\r\n                            <TableCell align=\"center\">{data.stuId}</TableCell>\r\n                            <TableCell align=\"center\">{data.stuType}</TableCell>\r\n                            <TableCell align=\"center\">{data.graduateTime}</TableCell>\r\n                            <TableCell align=\"center\">{data.isDone}</TableCell>\r\n                            <TableCell align=\"center\">{data.currentJob}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"text\"\r\n                                    onClick={()=>{\r\n\r\n                                    }}>查看未完成工作列表</Button>\r\n                            </TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            {pageNo>1 &&(\r\n                <Pagination\r\n                    className={classes.Pagination}\r\n                    count={pageNo}\r\n                    color=\"primary\"\r\n                    onChange={(e,i)=>{\r\n                        setPage(i)\r\n                    }}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\processForTeaApply\\ProcessForTeaApply.js",["841"],"import PageView from \"../../../../../components/Style/PageView\";\r\nimport {AppBar, Badge, Paper} from \"@material-ui/core\";\r\nimport {a11yProps, TabPanel} from \"../../../score/scoreForStudent/StudentScoreView\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../../layouts/Context\";\r\nimport PropTypes from \"prop-types\";\r\nimport {MNG_GET_ALL_PROCESS_APPROVE, MNG_GET_ALL_PROCESS_DELAY} from \"../../../../../settings\";\r\nimport ProcessForTeaApplyAgree from \"./ProcessForTeaApplyAgree\";\r\nimport ProcessForTeaApplyDelay from \"./ProcessForTeaApplyDelay\";\r\nimport {Tab, Tabs} from \"@mui/material\";\r\n\r\nexport default function ProcessForTeaApply(props){\r\n    const {onRefresh}=props\r\n    const classes=PageView()\r\n    const [value,setValue]=useState(0)\r\n    const [count1,setCount1]=useState(0)\r\n    const [count2,setCount2]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const {userInfo}=useContext(UserContext)\r\n\r\n    const getAllApprove=()=>{//获取该导师手下的所有已提交任务\r\n        fetch(`${MNG_GET_ALL_PROCESS_APPROVE}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setCount1(res?.data.length || 0)\r\n            })\r\n    }\r\n\r\n    const getAllDelay=()=>{\r\n        fetch(`${MNG_GET_ALL_PROCESS_DELAY}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setCount2(res?.data.length || 0)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{//两个都是获取数量即可\r\n        getAllApprove()\r\n        getAllDelay()\r\n    },[refresh])\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <AppBar position=\"static\" color=\"secondary\">\r\n                <Tabs value={value} onChange={(e,newValue)=>{\r\n                    setValue(newValue)\r\n                }} indicatorColor=\"primary\" textColor=\"primary\">\r\n                    <Tab label=\"学生任务完成申请\" iconPosition=\"end\" {...a11yProps(0)} icon={\r\n                        <Badge color=\"error\" badgeContent={count1} max={99} />\r\n                    }/>\r\n                    <Tab label=\"学生任务延期申请\" iconPosition=\"end\" {...a11yProps(1)} icon={\r\n                        <Badge color=\"error\" badgeContent={count2} max={99} />\r\n                    }/>\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel index={0} value={value}>\r\n                <ProcessForTeaApplyAgree length={count1} onRefresh={()=>{\r\n                    onRefresh()\r\n                    setRefresh((p)=>!p)\r\n                }}/>\r\n            </TabPanel>\r\n            <TabPanel index={1} value={value}>\r\n                <ProcessForTeaApplyDelay length={count2} onRefresh={()=>{\r\n                    onRefresh()\r\n                    setRefresh((p)=>!p)\r\n                }}/>\r\n            </TabPanel>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\EditStage.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\StageButton.js",[],"E:\\fudan-secsys\\my-react\\src\\base\\index.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\WorkTable.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\Process.js",["842","843","844"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Dialog,\r\n  Typography,\r\n  makeStyles,\r\n  DialogTitle,\r\n  Slide,\r\n  Container,\r\n  Card,\r\n  List,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { MNG_EDIT_ALLOCATION, MNG_GET_ALLOCATION_INfO } from \"src/settings\";\r\nimport { postFetch } from \"src/base\";\r\nimport alertBox from 'src/components/AlertBox'\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    // \"& .MuiButton-root\": {\r\n    //   color: \"#fff\",\r\n    // },\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  endDate: {\r\n    paddingTop: theme.spacing(3),\r\n    fontWeight: 'bold',\r\n  },\r\n  card: {\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(3),\r\n    display: \"flex\",\r\n    \"& .MuiBotton-root\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  stageContent: {\r\n    marginLeft: theme.spacing(3),\r\n    flex: 1,\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    '& .MuiTypography-root': {\r\n      flex: 1\r\n    }\r\n  },\r\n}));\r\nconst FINISH_TYPE = {\r\n  10: {\r\n    text: \"进行中\",\r\n    color: \"#263238\",\r\n  },\r\n  20: {\r\n    text: \"延期未完成\",\r\n    color: \"#ff9d00\",\r\n  },\r\n  30: {\r\n    text: \"超期未完成\",\r\n    color: \"#ff0000\",\r\n  },\r\n  40: {\r\n    text: \"已完成\",\r\n    color: \"#df5141\",\r\n  },\r\n  50: {\r\n    text: \"延期完成\",\r\n    color: \"#df5141\",\r\n  },\r\n  60: {\r\n    text: \"超期完成\",\r\n    color: \"#df5141\",\r\n  },\r\n};\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Process(props) {\r\n  const { onClose, open, planId, userId } = props;\r\n  const [info, setInfo] = useState({});\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n  const getInfo = () => {\r\n    fetch(`${MNG_GET_ALLOCATION_INfO}?planId=${planId}&userId=${userId}`, {})\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => {\r\n        setInfo(response?.data || {});\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getInfo()\r\n  }, []);\r\n  const handleUpdate = (values) => {\r\n    postFetch({\r\n      url: MNG_EDIT_ALLOCATION,\r\n      values,\r\n      successCallback: () => {\r\n        alertBox({ text: \"变更成功\", severity: 'success' });\r\n        getInfo();\r\n      },\r\n    });\r\n  };\r\n  const WorkList = ({works}) => {\r\n    return (\r\n      <List>\r\n        {works?.map((work) => (\r\n          <WorkListItem work={work} key={work.id} />\r\n        ))}\r\n      </List>\r\n    );\r\n  };\r\n  const WorkListItem = ({work}) => {\r\n    const date =\r\n      work?.allocation?.planWorkExpectedEndDate?.length > 11\r\n        ? work?.allocation?.planWorkExpectedEndDate?.slice(0, 11)\r\n        : work?.allocation?.planWorkExpectedEndDate;\r\n    const [isSet, SetIsSet] = useState(false)\r\n    const [updateTime, setUpdateTime] = useState(date);\r\n    console.log(updateTime, work?.allocation?.planWorkExpectedEndDate);\r\n    return (\r\n      <ListItem className={classes.listItem}>\r\n        <Typography>\r\n          <span>{`${work.index}. ${work.name}`}</span>\r\n          <span\r\n            style={{\r\n              color: FINISH_TYPE[work?.allocation?.status || 10]?.color,\r\n            }}\r\n          >\r\n            {`（${FINISH_TYPE[work?.allocation?.status || 10]?.text}）`}\r\n          </span>\r\n        </Typography>\r\n\r\n        {isSet ? (\r\n          <>\r\n            <TextField\r\n              label=\"截止日期\"\r\n              type=\"date\"\r\n              margin=\"normal\"\r\n              disabled={!isSet}\r\n              name=\"date\"\r\n              value={updateTime}\r\n              onChange={(e) => setUpdateTime(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              style={{ marginLeft: 20 }}\r\n              onClick={() => {\r\n                handleUpdate({\r\n                  id: work?.allocation?.id,\r\n                  delayDate: updateTime,\r\n                });\r\n                SetIsSet(false);\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div>{`结束日期：${updateTime}`}</div>\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              style={{ marginLeft: 20 }}\r\n              onClick={() => SetIsSet(true)}\r\n            >\r\n              修改结束日期\r\n            </Button>\r\n          </>\r\n        )}\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          style={{ marginLeft: 20 }}\r\n          onClick={() =>\r\n            handleUpdate({\r\n              id: work?.allocation?.id,\r\n              finished: work?.allocation?.finished === 0 ? 1 : 0,\r\n            })\r\n          }\r\n        >\r\n          {work?.allocation?.finished === 0 ? \"设为已完成\" : \"设为未完成\"}\r\n        </Button>\r\n      </ListItem>\r\n    );\r\n  }\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={open}\r\n      onClose={handleClose}\r\n      TransitionComponent={Transition}\r\n      className={classes.root}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            {`[${info?.name}] 任务进度`}\r\n          </Typography>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container>\r\n        <Typography className={classes.endDate} veriant=\"h6\">\r\n          {`初始日期：${\r\n            info?.referenceDate?.length > 11\r\n              ? info?.referenceDate?.slice(0, 11)\r\n              : info?.referenceDate\r\n          }`}\r\n        </Typography>\r\n        <Box>\r\n          {info?.stages?.map((stage) => (\r\n            <Card key={stage.id} className={classes.card}>\r\n              <div>\r\n                <h4>\r\n                  {`第${stage.term}学期 ~ 第${stage.index}阶段`}\r\n                  <br />\r\n                  <span\r\n                    style={{ fontSize: 12 }}\r\n                  >{`结束日期：(${stage?.endDate?.slice(0, 11)})`}</span>\r\n                </h4>\r\n              </div>\r\n              <div className={classes.stageContent}>\r\n                {stage?.commonWorks?.length > 0 && (\r\n                  <Box>\r\n                    <Typography veriant=\"h6\">公共任务：</Typography>\r\n                    <WorkList works={stage?.commonWorks} />\r\n                  </Box>\r\n                )}\r\n                {stage?.keshuoWorks?.length > 0 && (\r\n                  <Box>\r\n                    <Typography veriant=\"h6\">科硕任务：</Typography>\r\n                    <WorkList works={stage?.keshuoWorks} />\r\n                  </Box>\r\n                )}\r\n                {stage?.academicWorks?.length > 0 && (\r\n                  <Box>\r\n                    <Typography veriant=\"h6\">学术型任务：</Typography>\r\n                    <WorkList works={stage?.academicWorks} />\r\n                  </Box>\r\n                )}\r\n                {stage?.synthesizingWorks?.length > 0 && (\r\n                  <Box>\r\n                    <Typography veriant=\"h6\">结合型任务：</Typography>\r\n                    <WorkList works={stage?.synthesizingWorks} />\r\n                  </Box>\r\n                )}\r\n                {stage?.technologyWorks?.length > 0 && (\r\n                  <Box>\r\n                    <Typography veriant=\"h6\">技术型任务：</Typography>\r\n                    <WorkList works={stage?.technologyWorks} />\r\n                  </Box>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\AssignUser.js",["845","846","847","848","849","850"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  IconButton,\r\n  Dialog,\r\n  Typography,\r\n  Slide,\r\n  makeStyles,\r\n  TextField,\r\n  ListItem,\r\n  List,\r\n  Container,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    \"& .MuiButton-root\": {\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    margin: theme.spacing(1),\r\n    width: \"150px\",\r\n  },\r\n  contaner: {\r\n    width: \"800px\",\r\n    margin: \"0 auto\",\r\n    \"& .MuiBox-root\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      paddingLeft: \"16px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& .MuiListItem-root\": {\r\n      width: \"150px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\nconst types = [\r\n  {\r\n    value: 10,\r\n    label: \"学术型\",\r\n  },\r\n  {\r\n    value: 20,\r\n    label: \"结合型\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"技术型\",\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DeviceApplyHistory(props) {\r\n  const { onClose, open, users, assignStudy } = props;\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('')\r\n  const [keshuo, setKeshuo] = useState(2)\r\n  const [studyType, setStudyType] = useState(0)\r\n  const [userList, setUsersList] = useState(users)\r\n  const [userIds, setUserIds] = useState([]);\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setUserIds([]);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    let list = [...users];\r\n    if (name !== '') {\r\n      list = list.filter((user) => user?.name?.includes(name));\r\n    }\r\n    if (parseInt(studyType) !== 0) {\r\n      list = list.filter((user) => user?.studyType === parseInt(studyType));\r\n    }\r\n    if (parseInt(keshuo) !== 2) {\r\n      list = list.filter((user) => user?.keshuo === parseInt(keshuo));\r\n    }\r\n    setUsersList(list)\r\n  }, [name, keshuo, studyType])\r\n  const handleCheckAll = () => {\r\n    if (userIds.length === 0 || userIds.length !== userList.length) {\r\n      setUserIds(userList.map((user) => user.id));\r\n    } else {\r\n      setUserIds([]);\r\n    }\r\n  }\r\n  const handleCheck = (id) => {\r\n    if (userIds.includes(id)) {\r\n      setUserIds((prev) => prev.filter((userId) => userId != id));\r\n    } else {\r\n      setUserIds(prev => [...prev, id])\r\n    }\r\n  }\r\n  return (\r\n    <Dialog\r\n      fullScreen\r\n      open={open}\r\n      onClose={handleClose}\r\n      TransitionComponent={Transition}\r\n    >\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            任务分配\r\n          </Typography>\r\n          <Button size=\"small\" onClick={handleClose}>\r\n            取消\r\n          </Button>\r\n          <Button size=\"small\" onClick={() => assignStudy(userIds)}>\r\n            确认分配\r\n          </Button>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box className={classes.box}>\r\n        <TextField\r\n          label=\"用户姓名\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          variant=\"outlined\"\r\n          className={classes.textField}\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"就读类型\"\r\n          className={classes.textField}\r\n          onChange={(e) => setStudyType(e.target.value)}\r\n          variant=\"outlined\"\r\n          value={studyType}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n        >\r\n          <option value={0}>全部</option>\r\n          {types.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"是否科硕\"\r\n          className={classes.textField}\r\n          onChange={(e) => setKeshuo(e.target.value)}\r\n          variant=\"outlined\"\r\n          value={keshuo}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n        >\r\n          <option value={2}>全部</option>\r\n          <option value={0}>否</option>\r\n          <option value={1}>是</option>\r\n        </TextField>\r\n      </Box>\r\n      <Container className={classes.contaner}>\r\n        {userList.length > 0 && (\r\n          <Box onClick={handleCheckAll}>\r\n            {userIds.length === userList.length ? (\r\n              <CheckBoxIcon color=\"primary\" />\r\n            ) : (\r\n              <CheckBoxOutlineBlankIcon />\r\n            )}\r\n            全选\r\n          </Box>\r\n        )}\r\n        <List className={classes.list}>\r\n          {userList?.map((user) => (\r\n            <ListItem key={user.id} onClick={() => handleCheck(user.id)}>\r\n              {userIds.includes(user.id) ? (\r\n                <CheckBoxIcon color=\"primary\" />\r\n              ) : (\r\n                <CheckBoxOutlineBlankIcon />\r\n              )}\r\n              {user.name}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinManageForm.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\Style\\ContentStyle.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\bulletin\\BulletinCard.js",["851","852","853","854","855","856","857"],"import React, {useContext, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent, Button, Grid, Typography, Badge} from \"@material-ui/core\";\r\nimport {MARK_AS_READ_URL, MNG_DELETE_BULLETIN_URL, MNG_UPDATE_BULLETIN_URL} from \"src/settings\";\r\nimport { formFetch } from \"src/base\";\r\nimport {CloseSquareOutlined, ExclamationOutlined} from \"@ant-design/icons\";\r\nimport alertBox from \"../../components/AlertBox\";\r\nimport {RefreshContext} from \"../../layouts/Context\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: 8,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n  },\r\n  date: {\r\n    fontSize: 11,\r\n  },\r\n  unRead: {\r\n    color: \"#0a0d0e\",\r\n  },\r\n  readButton: {\r\n    padding: '0px 4px'\r\n  },\r\n});\r\n\r\nexport default function BulletinCard(props) {\r\n  const {refreshValue} = useContext(RefreshContext)\r\n  const classes = useStyles();\r\n  const { bulletin, refresh } = props //refresh是刷新操作\r\n  const notReadYet= (<ExclamationOutlined />)\r\n\r\n  const markAsRead = (id) => {//标记已读\r\n    fetch(`${MNG_UPDATE_BULLETIN_URL}?id=${bulletin.id}`,{\r\n      method:\"POST\"\r\n    }).then(()=>{\r\n      // refresh() //刷新\r\n      // refreshValue()\r\n      window.location.reload()\r\n    })\r\n        .catch((error)=>console.log(error))\r\n  };\r\n\r\n  const handleDelete=()=>{ //删除这个通知\r\n    fetch(`${MNG_DELETE_BULLETIN_URL}?id=${bulletin.id}`,{\r\n      method:\"POST\"\r\n    }).then(()=>{\r\n      alertBox({text:\"删除成功\",severity:\"success\"})\r\n      // refresh()\r\n      // refreshValue()\r\n      window.location.reload()\r\n    })\r\n        .catch((error)=>console.error(error))\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} >\r\n      <CardContent>\r\n        <Grid container spacing={1}>\r\n          <Grid item md={11}>\r\n            {\r\n                bulletin.isReadYey==0 && (\r\n                    <Badge badgeContent={notReadYet} color=\"error\"/>\r\n                )\r\n            }\r\n            <Typography\r\n                className={classes.date}\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n            >\r\n              {bulletin.createTime}\r\n            </Typography>\r\n            <Typography\r\n                className={classes.title}\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n            >\r\n              {bulletin.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={1}>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={()=>{\r\n                handleDelete()\r\n              }}\r\n            ><CloseSquareOutlined /></Button>\r\n          </Grid>\r\n          <Grid item md={11}>\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n            >\r\n              {bulletin.content}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={1}>\r\n            {bulletin.isReadYey == 0 && (\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                className={classes.readButton}\r\n                onClick={() => markAsRead()}\r\n              >\r\n                标记已读\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\components\\Style\\ContentStyleForPage.js",["858","859"],"import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport theme from \"../../theme\";\r\n\r\nconst ContentStyleForPage=makeStyles((theme)=>({\r\n    root: {\r\n        // flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2),\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingBottom: theme.spacing(2),\r\n        \"& .MuiTextField-root\": {\r\n            width: \"150px\",\r\n        },\r\n        \"& .MuiButton-root\": {\r\n            width: \"150px\",\r\n            height: \"40px\",\r\n        },\r\n    },\r\n    Pagination: {\r\n        padding:theme.spacing(2),\r\n        '& .MuiPagination-ul':{\r\n            justifyContent: 'center',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default ContentStyleForPage\r\n","E:\\fudan-secsys\\my-react\\src\\service\\userService.js",["860","861","862","863","864"],"import cookie from 'react-cookies'\r\n\r\n//设置cookie，第三个参数的意思是所有页面都能用这个cookie\r\n\r\n// 加载名为cookieName的cookie信息\r\n// cookie.load(cookieName)\r\n// // 删除名为cookieName的cookie信息\r\n// cookie.remove(cookieName)\r\nimport {\r\n  GET_ALL_STUDENT_FROMMENTOR_URL,\r\n  GET_ALL_STUDENT_URL,\r\n  GET_ALL_USER_URL,\r\n  USER_INFO,\r\n  MNG_GET_ALL_USER,\r\n  GET_ALL_RECORDER_URL, MNG_GET_PROCESS_LIST, MNG_PROCESS_UPDATE\r\n} from 'src/settings'\r\n// export const getAllUser = (setUsers) => {\r\n//   return fetch(GET_ALL_USER_URL, {\r\n//       method: 'GET',\r\n//     //   headers: new Headers({\r\n//     //       'token': cookie.load(\"userInfo\").token\r\n//     //   })\r\n//       });\r\n// }\r\nimport {UserContext} from \"../layouts/Context\";\r\nimport {useContext, useState} from \"react\";\r\nimport {Box, Button, Dialog, DialogTitle, makeStyles, Typography} from \"@material-ui/core\";\r\nimport {postFetch} from \"../base\";\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n  root:{\r\n    padding:theme.spacing(3),\r\n  }\r\n}))\r\n\r\nexport const getAllUser = async ({ page = 1, limit = 10 ,name}) => {//根据page进行返回用户，page为1，返回前10个用户，page为2，返回11-20的用户\r\n  try {\r\n    let response = await fetch(\r\n      `${GET_ALL_USER_URL}?limit=${limit}&offset=${(page - 1) * limit}&name=${name}`\r\n    );\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"Request Failed\", error);\r\n  }\r\n};\r\n\r\nexport const getAllRecorder = async ({page=1,limit})=>{\r\n  try{\r\n    let response = await  fetch(\r\n        `${GET_ALL_RECORDER_URL}?limit=${limit}&offset=${(page-1)*limit}`\r\n    );\r\n    return await response.json();\r\n  }catch (error){\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const getAllStudent = async ({ page=1,limit=10, groupId, name=\"\"})=>{\r\n  try {\r\n    let response=await  fetch(\r\n        `${GET_ALL_STUDENT_URL}?limit=${limit}&offset=${(page-1)*limit}&name=${name}&groupId=${groupId}`\r\n    );\r\n    return await response.json();\r\n  }catch (error){\r\n    console.log(\"Request Failed\",error)\r\n  }\r\n}\r\n\r\n\r\nexport const getAllStudentFromMentor = async ({name=\"\", page=1,limit=10})=>{\r\n  try{\r\n    let response=await fetch(\r\n        `${GET_ALL_STUDENT_FROMMENTOR_URL}?limit=${limit}&offset=${(page-1)*limit}&name=${name}`\r\n    );\r\n    return await response.json();\r\n  }catch (error){\r\n    console.log(\"Request Failed\",error)\r\n  }\r\n}\r\n\r\nexport const getUserInfo = async () => {\r\n  try {\r\n    let response = await fetch(USER_INFO)\r\n    return await response.json()\r\n  } catch (error) {\r\n    console.log('Request Failed', error);\r\n  }\r\n}\r\n\r\nexport const forceGetAllUser = async()=>{\r\n  try {\r\n    let respone = await fetch(\r\n        `${MNG_GET_ALL_USER}?limit=7999`\r\n    )\r\n    return await respone.json()\r\n  }catch (error) {\r\n    console.log(\"Request Failed\", error);\r\n  }\r\n}\r\n\r\nexport const getAllLeader=async ()=>{ //获取所有组长的信息\r\n  try{\r\n    let response=await fetch(\r\n        `${MNG_GET_ALL_USER}?isTalkMng=${2}`\r\n    )\r\n    return await  response.json()\r\n  }catch (error){\r\n    console.error(error)\r\n  }\r\n}\r\n\r\n\r\nexport default function ProcessAlert(props){\r\n  const classes=useStyles()\r\n  const {processDetail, open, onClose}=props\r\n\r\n  return (\r\n      <Dialog open={open} className={classes.root}>\r\n        <DialogTitle>任务提醒</DialogTitle>\r\n        <form className=\"dialogForm\">\r\n          <Typography align=\"center\">\r\n            {processDetail.missionStatus===0? `你的${processDetail.category}任务已经逾期，请提交延期申请` :\r\n            `你的${processDetail.category}任务这个月需要完成，请注意完成时间`}\r\n          </Typography>\r\n\r\n          <Box my={2}>\r\n            <Button\r\n              fullWidth\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              onClick={()=>{\r\n                postFetch({\r\n                  url:MNG_PROCESS_UPDATE,\r\n                  values:{\r\n                    id:processDetail.id,\r\n                    alert:0\r\n                  },\r\n                  successCallback:()=>{\r\n                    onClose()\r\n                  }\r\n                })\r\n              }}\r\n              variant=\"contained\">\r\n              我知道了\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Dialog>\r\n  )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\TeaCommentForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessGroupDelayForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessDelayForm.js",["865"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL, MNG_PROCESS_GROUP_UPDATE, MNG_PROCESS_UPDATE} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport {useState} from \"react\";\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        padding:theme.spacing(3),\r\n    }\r\n}))\r\n\r\nexport default function ProcessDelayForm(props){//导师处理逾期任务\r\n    const classes=useStyles()\r\n    const {open, onClose, missionDetail, teacherStuId}=props\r\n    const predictTime=`${missionDetail.year}年${missionDetail.month}月`\r\n    const [delayTime,setDelayTime]=useState(1)\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} className={classes.root}>\r\n            <DialogTitle onClose={onClose}>\r\n                任务延期申请\r\n            </DialogTitle>\r\n            <Formik initialValues={missionDetail}\r\n                    onSubmit={(values)=>{\r\n                        // if(!values?.delayTime || values?.delayTime===0){\r\n                        //     alertBox({text:\"请选择延期时间\",severity:\"error\"})\r\n                        //     return\r\n                        // }\r\n                            let newYear\r\n                            let newMonth\r\n                            if(12-delayTime-missionDetail.month<0){//说明到了新的一年\r\n                                newYear=missionDetail.year+1\r\n                                newMonth=delayTime+missionDetail.month-12\r\n                            }\r\n                            else{\r\n                                newYear=missionDetail.year\r\n                                newMonth=delayTime + missionDetail.month\r\n                            }\r\n                            const cor=confirmModal({\r\n                                title:\"确定要提交吗\",\r\n                                handleCorfirm:()=>{\r\n                                    cor.close()\r\n                                    postFetch({\r\n                                        url:MNG_PROCESS_UPDATE,\r\n                                        values:{\r\n                                            id:missionDetail.id,\r\n                                            missionStatus:4,//提交某一个任务的延期处理\r\n                                            wishYear:newYear,\r\n                                            wishMonth:newMonth\r\n                                        },\r\n                                        successCallback:()=>{\r\n                                            alertBox({text:\"延期申请已提交，请等待导师回复\",severity:\"success\"})\r\n                                            postFetch({\r\n                                                url:MNG_ADD_BULLETIN_URL,\r\n                                                values:{\r\n                                                    stuId:teacherStuId,\r\n                                                    title:\"您的学生\"+missionDetail.stuName+\"提交了任务延期申请\",\r\n                                                    content:missionDetail.stuName+\"提交了[\"+missionDetail.category+\"]任务的延期申请，请到培养过程板块处理\"\r\n                                                }\r\n                                            })\r\n                                            onClose()\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                    }}>\r\n                {({values,handleSubmit,handleBlur,handleChange})=>(\r\n                    <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n                        <TextField\r\n                            InputProps={{readOnly:true}}\r\n                            label=\"任务\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"category\"\r\n                            value={missionDetail.category}\r\n                            variant=\"outlined\"/>\r\n                        <TextField\r\n                            InputProps={{readOnly:true}}\r\n                            label=\"预计完成时间\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"predictTime\"\r\n                            value= {predictTime}\r\n                            variant=\"outlined\"/>\r\n                        <TextField\r\n                            select\r\n                            label=\"任务推迟时间(/月)\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"delayTime\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e)=>{\r\n                                setDelayTime(parseInt(e.target.value))\r\n                            }}\r\n                            SelectProps={{\r\n                                native:true\r\n                            }}\r\n                            value={delayTime}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {/*<option value={0}>0</option>*/}\r\n                            <option value={1}>1</option>\r\n                            <option value={2}>2</option>\r\n                            <option value={3}>3</option>\r\n                            <option value={4}>4</option>\r\n                            <option value={5}>5</option>\r\n                            <option value={6}>6</option>\r\n                        </TextField>\r\n                        <Box my={2}>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >提交</Button>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                onClick={()=>onClose()}\r\n                                variant=\"contained\"\r\n                            >取消</Button>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessEditForm.js",["866","867"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_PROCESS_UPDATE} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        padding:theme.spacing(3),\r\n    }\r\n}))\r\nexport default function ProcessEditForm(props){\r\n   const classes=useStyles()\r\n    const {open, onClose, missionDetail}=props\r\n\r\n    const time= missionDetail.month<10?`${missionDetail.year}-0${missionDetail.month}`:`${missionDetail.year}-${missionDetail.month}`\r\n\r\n   return (\r\n       <Dialog open={open} onClose={onClose} className={classes.root}>\r\n           <DialogTitle onClose={onClose}>\r\n               编辑学生任务\r\n           </DialogTitle>\r\n           <Formik initialValues={missionDetail}\r\n                   onSubmit={(values)=>{\r\n                       const newYear=parseInt(values.predictTime.slice(0,4))//预计完成年份\r\n                       const newMonth=parseInt(values.predictTime.slice(5,7))//预计完成月份\r\n                       const cor=confirmModal({\r\n                           title:\"确定要做出修改吗？\",\r\n                           handleCorfirm:()=>{\r\n                               cor.close()\r\n                               postFetch({\r\n                                   url:MNG_PROCESS_UPDATE,\r\n                                   values:{\r\n                                       id:missionDetail.id,\r\n                                       category:values?.category,\r\n                                       missionStatus:values?.missionStatus,\r\n                                       year:newYear,\r\n                                       month:newMonth\r\n                                   },\r\n                                   successCallback:()=>{\r\n                                       alertBox({text:\"修改成功\",severity:\"success\"})\r\n                                       onClose()\r\n                                   }\r\n                               })\r\n                           }\r\n                       })\r\n                   }}\r\n                   >{({handleSubmit,handleChange,handleBlur,values})=>(\r\n                       <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n                           <TextField\r\n                               label=\"任务\"\r\n                               fullWidth\r\n                               margin=\"normal\"\r\n                               name=\"category\"\r\n                               value={values?.category}\r\n                               onChange={handleChange}\r\n                               onBlur={handleBlur}\r\n                               variant=\"outlined\"/>\r\n                           <TextField\r\n                               label=\"任务状态\"\r\n                               fullWidth\r\n                               select\r\n                               margin=\"normal\"\r\n                               name=\"missionStatus\"\r\n                               value={values?.missionStatus}\r\n                               onChange={handleChange}\r\n                               onBlur={handleBlur}\r\n                               SelectProps={{native:true}}\r\n                               variant=\"outlined\">\r\n                               <option value={0}>已逾期</option>\r\n                               <option value={1}>未完成</option>\r\n                               <option value={2}>已提交</option>\r\n                               <option value={3}>已完成</option>\r\n                               <option value={4}>提交延期申请</option>\r\n                           </TextField>\r\n                           <TextField\r\n                               label=\"预计完成时间\"\r\n                               fullWidth\r\n                               InputLabelProps={{shrink:true}}\r\n                               type=\"month\"\r\n                               margin=\"normal\"\r\n                               name=\"predictTime\"\r\n                               value={values?.predictTime}\r\n                               onBlur={handleBlur}\r\n                               onChange={handleChange}\r\n                               variant=\"outlined\"/>\r\n\r\n                           <Box my={2}>\r\n                               <Button\r\n                                   fullWidth\r\n                                   color=\"primary\"\r\n                                   size=\"large\"\r\n                                   type=\"submit\"\r\n                                   variant=\"contained\"\r\n                               >提交</Button>\r\n                               <Button\r\n                                   fullWidth\r\n                                   color=\"secondary\"\r\n                                   size=\"large\"\r\n                                   onClick={()=>onClose()}\r\n                                   variant=\"contained\"\r\n                               >取消</Button>\r\n                           </Box>\r\n\r\n                       </form>\r\n           )\r\n           }</Formik>\r\n       </Dialog>\r\n   )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ConfirmForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessAddForm.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\AlertBox\\index.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessTinyCategoryAddForm.js",["868","869"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL, MNG_ADD_TINY_PROCESS_CATEGORY, MNG_PROCESS_ADD} from \"../../../../settings\";\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        padding: theme.spacing(3),\r\n    }\r\n}))\r\nconst TYPES={\r\n    1:\"学术科研\",\r\n    2:\"专业技术\",\r\n    3:\"思政服务\"\r\n}\r\n\r\nconst STUDYTYPE={\r\n    1:\"学硕\",\r\n    2:\"专硕\",\r\n    3:\"学工\"\r\n}\r\n\r\nexport default function ProcessTinyCategoryAddForm(props){\r\n    const classes=useStyles()\r\n    const {open, type, studyType, onClose}=props\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} className={classes.root}>\r\n            <DialogTitle onClose={onClose}>\r\n                添加任务类别\r\n            </DialogTitle>\r\n            <Formik\r\n                initialValues={{}}\r\n                validationSchema={Yup.object().shape({\r\n                    processCategory:Yup.string().required(\"请输入具体的类别名称\"),\r\n                })}\r\n                onSubmit={(values)=>{\r\n                    const cor=confirmModal({\r\n                        title:\"确定要添加这个类别吗\",\r\n                        handleCorfirm:()=>{\r\n                            cor.close()\r\n                            postFetch({\r\n                                url:MNG_ADD_TINY_PROCESS_CATEGORY,\r\n                                values:{\r\n                                    type:type,\r\n                                    studyType:studyType,\r\n                                    processCategory:values?.processCategory\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"添加成功\",severity:\"success\"})\r\n                                    onClose()\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }}>\r\n                {({handleChange,handleSubmit,handleBlur,values,errors,touched})=>(\r\n                    <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n                        {type!==0 && (\r\n                            <TextField\r\n                                label=\"板块类型\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                value={TYPES[type]}\r\n                                variant=\"outlined\"\r\n                                onBlur={handleBlur}\r\n                                InputProps={{readOnly:true}}\r\n                                />\r\n                        )}\r\n                        <TextField\r\n                            label=\"对应学生类型\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            value={STUDYTYPE[studyType]}\r\n                            onBlur={handleBlur}\r\n                            variant=\"outlined\"\r\n                            InputProps={{readOnly:true}}\r\n                        />\r\n\r\n                        <TextField\r\n                            error={Boolean(touched.processCategory && errors.processCategory)}\r\n                            label=\"任务类别\"\r\n                            name=\"processCategory\"\r\n                            value={values?.processCategory}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <Box my={2}>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >提交</Button>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                onClick={()=>onClose()}\r\n                                variant=\"contained\"\r\n                            >取消</Button>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </Dialog>)\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\TeaCommentForTeaForm.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\ConfirmModal\\index.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\NoData\\index.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\Loading\\index.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\AlertBox\\AlertBox.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\ConfirmModal\\ConfirmModal.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\studyPlan\\components\\EditWork.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\processForTeaApply\\ProcessForTeaApplyDelay.js",["870","871","872","873"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../../layouts/Context\";\r\nimport ContentStyleForPage from \"../../../../../components/Style/ContentStyleForPage\";\r\nimport {\r\n    MNG_GET_ALL_PROCESS_DELAY,\r\n    MNG_PROCESS_GROUP_APPROVE,\r\n    MNG_PROCESS_UPDATE\r\n} from \"../../../../../settings\";\r\nimport alertBox from \"../../../../../components/AlertBox\";\r\nimport confirmModal from \"../../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../../base\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport {Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport ProcessDelay from \"../../processForm/processApplyForm/ProcessDelay\";\r\n\r\nexport default function ProcessForTeaApplyDelay(props){\r\n    const {length, onRefresh}=props\r\n    const {userInfo}=useContext(UserContext)\r\n    const classes=ContentStyleForPage()\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [check,setCheck]=useState(new Array(length).fill(false))\r\n    const [onlineAgree, setOnlineAgree]=useState([])\r\n    const [allDelay,setAllDelay]=useState([])\r\n    const [disOpen,setDisOpen]=useState(false)\r\n    const [list,setList]=useState({})\r\n    const [allCheck, setAllCheck]=useState(false)\r\n\r\n    const getAllDelay=()=>{\r\n        fetch(`${MNG_GET_ALL_PROCESS_DELAY}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setAllDelay(res?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleAgreeAll=()=>{\r\n        if(onlineAgree.length===0){\r\n            alertBox({text:\"没有选择任何任务，无法一键提交\", severity:\"error\"})\r\n            return\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要同意选中的延期任务申请吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_GROUP_APPROVE,\r\n                    values:{\r\n                        list:onlineAgree,\r\n                        status:1,\r\n                        isDelay:1\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"提交成功\",severity:\"success\"})\r\n                        onRefresh()\r\n                        setRefresh((p)=>!p)\r\n                        setAllCheck(false)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleOneAgree=(mission)=>{\r\n        const cor=confirmModal({\r\n            title:\"确认同意这一个任务的延期申请吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_UPDATE,\r\n                    values:{\r\n                        id:mission.id,\r\n                        missionStatus:1,\r\n                        isDelay: 1,\r\n                        year:mission.wishYear,\r\n                        month:mission.wishMonth\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"提交成功\",severity:\"success\"})\r\n                        onRefresh()\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllDelay()//获取所有的某导师名下的延期申请\r\n    },[refresh])\r\n\r\n    useEffect(()=>{\r\n        if (allCheck == true){\r\n            setCheck(new Array(length).fill(true))\r\n            setOnlineAgree(allDelay)\r\n        }\r\n        else{\r\n            setCheck(new Array(length).fill(false))\r\n            setOnlineAgree([])\r\n        }\r\n    },[allCheck])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Checkbox checked={allCheck} onChange={(event, checked)=>{\r\n                    if(checked===true){\r\n                        setAllCheck(checked)\r\n                    }\r\n                    if(checked===false){\r\n                        setAllCheck(false)\r\n                    }\r\n                }}>全选</Checkbox>\r\n\r\n                <Typography align=\"center\" color=\"textPrimary\" size=\"small\" >\r\n                    处理学生任务延期申请\r\n                </Typography>\r\n\r\n                <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    onClick={()=>{\r\n                        handleAgreeAll()\r\n                    }}>一键同意</Button>\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>申请人</TableCell>\r\n                    <TableCell align=\"center\">申请内容</TableCell>\r\n                    <TableCell>预计完成时间</TableCell>\r\n                    <TableCell align=\"center\">操作</TableCell>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {allDelay.map((list,index)=>(\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">\r\n                                <FormControlLabel control={<Checkbox checked={check[index]} onChange={(e,checked)=>{\r\n                                    if(checked===true){\r\n                                        setCheck([...check.slice(0,index),true,...check.slice(index+1,length)])\r\n                                        setOnlineAgree([...onlineAgree,list])\r\n                                    }\r\n                                    if(checked==false){\r\n                                        setCheck([...check.slice(0,index),false,...check.slice(index+1,length)])\r\n                                        setOnlineAgree([...onlineAgree.filter((a)=>{\r\n                                            return a.id!==list.id\r\n                                        })])\r\n                                    }\r\n                                }}/> } />\r\n                            </TableCell>\r\n                            <TableCell>{list.stuName}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                【{list.stuName}】想把【{list.category}】的完成时间延期到{list.wishYear}年{list.wishMonth}月\r\n                            </TableCell>\r\n                            <TableCell>{list.year}.{list.month}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    variant=\"text\"\r\n                                    color=\"primary\"\r\n                                    onClick={()=>{handleOneAgree(list)}}>同意</Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    variant=\"text\"\r\n                                    color=\"primary\"\r\n                                    onClick={()=>{\r\n                                        setDisOpen(true)\r\n                                        setList(list)\r\n                                    }}>不同意</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <ProcessDelay open={disOpen}\r\n                          onClose={()=>{\r\n                              setDisOpen(false)\r\n                          }}\r\n                          onRefresh={()=>{\r\n                              onRefresh()\r\n                              setRefresh((p)=>!p)\r\n                          }}\r\n                          list={list}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\processForTeaApply\\ProcessForTeaApplyAgree.js",["874","875","876","877"],"import ContentStyleForPage from \"../../../../../components/Style/ContentStyleForPage\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport confirmModal from \"../../../../../components/ConfirmModal\";\r\nimport {MNG_GET_ALL_PROCESS_APPROVE, MNG_PROCESS_GROUP_APPROVE, MNG_PROCESS_UPDATE} from \"../../../../../settings\";\r\nimport {UserContext} from \"../../../../../layouts/Context\";\r\nimport {postFetch} from \"../../../../../base\";\r\nimport alertBox from \"../../../../../components/AlertBox\";\r\nimport ProcessAffirmDelay from \"../../processForm/processApplyForm/ProcessAffirmDelay\";\r\n\r\nexport default function ProcessForTeaApplyAgree(props){\r\n    const {length, onRefresh}=props\r\n    const {userInfo}=useContext(UserContext)\r\n    const classes=ContentStyleForPage()\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [check,setCheck]=useState(new Array(length).fill(false))\r\n    const [onlineAgree, setOnlineAgree]=useState([])\r\n    const [allApprove,setAllApprove]=useState([])\r\n    const [disOpen,setDisOpen]=useState(false)\r\n    const [list,setList]=useState({})\r\n    const [allCheck, setAllCheck]=useState(false)\r\n\r\n    const getAllApprove= async ()=>{//获取该导师手下的所有已提交任务\r\n        try{\r\n            let response=await fetch(`${MNG_GET_ALL_PROCESS_APPROVE}?name=${userInfo.name}`)\r\n            return await response.json()\r\n        }\r\n        catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleAgreeAll=()=>{\r\n        if(onlineAgree.length===0){\r\n            alertBox({text:\"没有选择任何任务，无法一键提交\", severity:\"error\"})\r\n            return\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要同意选中的完成任务申请吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_GROUP_APPROVE,\r\n                    values:{\r\n                        list:onlineAgree,\r\n                        status:3,\r\n                        isDelay:0\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"提交成功\",severity:\"success\"})\r\n                        onRefresh()\r\n                        setRefresh((p)=>!p)\r\n                        setAllCheck(false)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleOneAgree=(mission)=>{\r\n        const cor=confirmModal({\r\n            title:\"确认同意这一个完成任务的申请吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:MNG_PROCESS_UPDATE,\r\n                    values:{\r\n                        id:mission.id,\r\n                        missionStatus:3\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"提交成功\",severity:\"success\"})\r\n                        onRefresh()\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllApprove().then((res)=>{\r\n            setAllApprove(res?.data || [])\r\n        })\r\n    },[refresh])\r\n\r\n    useEffect(()=>{\r\n        if (allCheck == true){\r\n            setCheck(new Array(length).fill(true))\r\n            setOnlineAgree(allApprove)\r\n        }\r\n        else {\r\n            setCheck(new Array(length).fill(false))\r\n            setOnlineAgree([])\r\n        }\r\n    },[allCheck])\r\n\r\n    return (\r\n            <div className={classes.root}>\r\n                    <div className={classes.header}>\r\n                        <Checkbox checked={allCheck} onChange={(event, checked)=>{\r\n                            if(checked===true){\r\n                              setAllCheck(true)\r\n                            }\r\n                            if(checked===false){\r\n                                setAllCheck(false)\r\n                            }\r\n                        }}>全选</Checkbox>\r\n\r\n                        <Typography align=\"center\" color=\"textPrimary\" size=\"small\" >\r\n                            处理学生任务完成申请\r\n                        </Typography>\r\n\r\n                        <Button\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                handleAgreeAll()\r\n                            }}>一键同意</Button>\r\n                    </div>\r\n\r\n                <Divider/>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>申请人</TableCell>\r\n                        <TableCell align=\"center\">申请内容</TableCell>\r\n                        <TableCell>预计完成时间</TableCell>\r\n                        <TableCell align=\"center\">操作</TableCell>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {allApprove.map((list,index)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">\r\n                                    <Checkbox checked={check[index]} onChange={(e,checked)=>{\r\n                                        if(checked===true){\r\n                                            setCheck([...check.slice(0,index),true,...check.slice(index+1,length)])\r\n                                            setOnlineAgree([...onlineAgree,list])\r\n                                        }\r\n                                        if(checked==false){\r\n                                            setCheck([...check.slice(0,index),false,...check.slice(index+1,length)])\r\n                                            setOnlineAgree([...onlineAgree.filter((a)=>{\r\n                                                return a.id!==list.id\r\n                                            })])\r\n                                        }\r\n                                    }}/>\r\n                                </TableCell>\r\n                                <TableCell>{list.stuName}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    【{list.stuName}】提交了【{list.category}】任务的完成申请\r\n                                </TableCell>\r\n                                <TableCell>{list.year}.{list.month}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        variant=\"text\"\r\n                                        color=\"primary\"\r\n                                        onClick={()=>{handleOneAgree(list)}}>同意</Button>\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        variant=\"text\"\r\n                                        color=\"primary\"\r\n                                        onClick={()=>{\r\n                                            setDisOpen(true)\r\n                                            setList(list)\r\n                                        }}>不同意</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <ProcessAffirmDelay open={disOpen}\r\n                                    onRefresh={()=>{\r\n                                        onRefresh()\r\n                                        setRefresh((p)=>!p)\r\n                                    }}\r\n                                    onClose={()=>{\r\n                                        setDisOpen(false)\r\n                                    }}\r\n                                    list={list}/>\r\n\r\n            </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessDelay.js",["878","879"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport {useState} from \"react\";\r\nimport ProcessGroupDelay from \"./ProcessGroupDelay\";\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        padding:theme.spacing(3),\r\n    }\r\n}))\r\n\r\nexport default function ProcessDelay(props){//不同意任务完成，任务要延期\r\n    const classes=useStyles()\r\n    const {open, onClose, onRefresh, list}=props\r\n    const [delayTime,setDelayTime]=useState(1)\r\n    const [groupOpen,setGroupOpen]=useState(false)\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} className={classes.root}>\r\n            <DialogTitle>任务延期</DialogTitle>\r\n            <Formik initialValues={list} onSubmit={()=>{\r\n                setGroupOpen(true)\r\n            }}>\r\n                {({handleBlur,handleSubmit})=>(\r\n                    <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n                        <TextField\r\n                            select\r\n                            label={list.missionStatus==2 ? \"任务推迟时间(/月)\":(\r\n                                list.missionStatus==4 && \"请选择合适的推迟时间(/月)\"\r\n                            )}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"delayTime\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e)=>{\r\n                                setDelayTime(parseInt(e.target.value))\r\n                            }}\r\n                            SelectProps={{native:true}}\r\n                            value={delayTime}\r\n                            variant=\"outlined\">\r\n                            <option value={1}>1</option>\r\n                            <option value={2}>2</option>\r\n                            <option value={3}>3</option>\r\n                            <option value={4}>4</option>\r\n                            <option value={5}>5</option>\r\n                            <option value={6}>6</option>\r\n                        </TextField>\r\n                        <Box my={2}>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >提交</Button>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                onClick={()=>onClose()}\r\n                                variant=\"contained\"\r\n                            >取消</Button>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n            <ProcessGroupDelay open={groupOpen}\r\n                               delayTime={delayTime}\r\n                               onClose={()=>{\r\n                                   setGroupOpen(false)\r\n                                   onClose()\r\n                               }}\r\n                               onRefresh={()=>{\r\n                                   onRefresh()\r\n                               }}\r\n                               list={list}/>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessAffirmDelay.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\ScoreEditForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\ScoreAddForm.js",["880"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL, MNG_ADD_SCORE} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst values={\r\n    year:null,\r\n    season:null,\r\n    stuId:null,\r\n    mentor:null,\r\n    comment:null\r\n}\r\n\r\nexport default function ScoreAddForm(props){\r\n    const {open, userDetail, onClose, teacherStuId}=props\r\n    const classes=useStyles()\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} className={classes.root}>\r\n            <DialogTitle onClose={onClose}>\r\n                新建季度评分\r\n            </DialogTitle>\r\n\r\n            <Formik\r\n                initialValues={values}\r\n                onSubmit={(values)=>{\r\n                    if (!values?.year || !values?.season || !values?.comment){\r\n                        alertBox({text:\"请完整填写后再提交\", severity:\"error\"})\r\n                    }\r\n                    else {\r\n                        if (parseInt(values?.season)==0){\r\n                            alertBox({text:\"请重新选择季度\", severity:\"error\"})\r\n                        }\r\n                        else {\r\n                            const cor=confirmModal({\r\n                                title:\"只有一次提交机会，请检查无误再确认提交\",\r\n                                handleCorfirm:()=>{\r\n                                    cor.close()\r\n                                    postFetch({\r\n                                        url:MNG_ADD_SCORE,\r\n                                        values:{\r\n                                            stuId:userDetail.stuId,\r\n                                            stuName: userDetail.name,\r\n                                            stuType :userDetail.type,\r\n                                            mentor:userDetail.mentor,\r\n                                            year:values?.year,\r\n                                            season:values?.season,\r\n                                            comment:values?.comment\r\n                                        },\r\n                                        successCallback:()=>{\r\n                                            alertBox({ text: \"操作成功\", severity: \"success\" });\r\n                                            postFetch({\r\n                                                url:MNG_ADD_BULLETIN_URL,\r\n                                                values:{\r\n                                                    stuId:teacherStuId,\r\n                                                    title:\"学生的季度自评已完成\",\r\n                                                    content:\"您的学生[\"+userDetail.name+\"]的\"+values.year+\"年第\"+values.season+\"季度的自评已经完成，请及时为他的季度表现评分\"\r\n                                                }\r\n                                            })\r\n                                            onClose()\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                }}\r\n            >{({handleBlur,handleChange,handleSubmit,values,\r\n                           })=>(\r\n                               <form onSubmit={handleSubmit}  className=\"dialogForm\">\r\n                                   <TextField\r\n                                       label=\"年份\"\r\n                                       fullWidth\r\n                                       placeholder=\"请填写阿拉伯数字\"\r\n                                       margin=\"normal\"\r\n                                       name=\"year\"\r\n                                       variant=\"outlined\"\r\n                                       value={values?.year}\r\n                                       onBlur={handleBlur}\r\n                                       onChange={handleChange}\r\n                                   />\r\n                                   <TextField\r\n                                       select\r\n                                       fullWidth\r\n                                       label=\"季度\"\r\n                                       name=\"season\"\r\n                                       margin=\"normal\"\r\n                                       onChange={handleChange}\r\n                                       value={values?.season}\r\n                                       variant=\"outlined\"\r\n                                       SelectProps={{\r\n                                           native: true,\r\n                                       }}\r\n                                   >\r\n                                       <option value={0}>0</option>\r\n                                       <option value={1}>1</option>\r\n                                       <option value={2}>2</option>\r\n                                       <option value={3}>3</option>\r\n                                       <option value={4}>4</option>\r\n                                   </TextField>\r\n                                   <TextField\r\n                                       multiline\r\n                                       rows={4}\r\n                                       label=\"评语\"\r\n                                       fullWidth\r\n                                       margin=\"normal\"\r\n                                       name=\"comment\"\r\n                                       value={values?.comment}\r\n                                       variant=\"outlined\"\r\n                                       onBlur={handleBlur}\r\n                                       onChange={handleChange}\r\n                                   />\r\n                                   <Box my={2}>\r\n                                       <Button\r\n                                           fullWidth\r\n                                           color=\"primary\"\r\n                                           size=\"large\"\r\n                                           type=\"submit\"\r\n                                           variant=\"contained\"\r\n                                       >\r\n                                           提交\r\n                                       </Button>\r\n                                       <Button\r\n                                           fullWidth\r\n                                           color=\"secondary\"\r\n                                           size=\"large\"\r\n                                           onClick={()=>{\r\n                                               onClose()\r\n                                           }}\r\n                                           variant=\"contained\"\r\n                                       >取消</Button>\r\n                                   </Box>\r\n                               </form>\r\n\r\n            )}</Formik>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\score\\scoreForm\\ScoreStudentComment.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessDetailForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessPartAddForm.js",["881","882","883"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL, MNG_PROCESS_ADD, MNG_PROCESS_UPDATE} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n    root:{\r\n        padding: theme.spacing(3),\r\n    }\r\n}))\r\n\r\nexport default function ProcessPartAddForm(props){\r\n    const {open, onClose, missionDetail}=props\r\n    const classes=useStyles()\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} className={classes.root}>\r\n            <DialogTitle onClose={onClose}>\r\n                添加任务\r\n            </DialogTitle>\r\n            <Formik\r\n                initialValues={missionDetail}\r\n                validationSchema={Yup.object().shape({\r\n                    missionDetail:Yup.string().\r\n                        required(\"请输入具体的任务内容\"),\r\n                    predictDate:Yup.string().\r\n                        required(\"请属于预定的完成时间\")\r\n                })}\r\n                onSubmit={(values)=>{\r\n                    const newDate=new Date()\r\n                    const nYear=newDate.getFullYear()//当前的年份\r\n                    const nMonth=newDate.getMonth()+1//当前的月份\r\n                    const newYear=parseInt(values?.predictDate.slice(0,4))//预计完成年份\r\n                    const newMonth=parseInt(values?.predictDate.slice(5,7))//预计完成月份\r\n                    if(newYear<nYear || (newYear===nYear && newMonth<nMonth)){\r\n                        alertBox({text:\"预计完成时间不能是过去的时间\",severity:\"error\"})\r\n                        return\r\n                    }\r\n                    const cor=confirmModal({\r\n                        title:\"确定要添加这个任务吗\",\r\n                        handleCorfirm:()=>{\r\n                            cor.close()\r\n                            postFetch({\r\n                                url:MNG_PROCESS_UPDATE,\r\n                                values:{\r\n                                    id:missionDetail.id,\r\n                                    missionName:values?.missionName,\r\n                                    missionDetail:values?.missionDetail,\r\n                                    year: newYear,\r\n                                    month: newMonth,\r\n                                    missionStatus:1,\r\n                                    isDelay:0\r\n                                },\r\n                                successCallback:()=>{\r\n                                    alertBox({text:\"操作成功\",severity:\"success\"})\r\n                                    postFetch({\r\n                                        url:MNG_ADD_BULLETIN_URL,\r\n                                        values:{\r\n                                            stuId:missionDetail.stuId,\r\n                                            title:\"新的培养过程任务已发布\",\r\n                                            content:\"你有新的任务，请及时查看并按时完成\"\r\n                                        }\r\n                                    })\r\n                                    onClose()\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }}>\r\n                {({handleChange,handleSubmit,handleBlur,values,errors,touched})=>(\r\n                    <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n                        <TextField\r\n                            InputProps={{readOnly:true}}\r\n                            label=\"任务名称\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            name=\"missionName\"\r\n                            value={values?.missionName}\r\n                            onBlur={handleBlur}\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <TextField\r\n                            error={Boolean(touched.missionDetail && errors.missionDetail)}\r\n                            label=\"任务内容\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            margin=\"normal\"\r\n                            name=\"missionDetail\"\r\n                            value={values?.missionDetail}\r\n                            onBlur={handleBlur}\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}/>\r\n\r\n                        <TextField\r\n                            error={Boolean(touched.predictDate && errors.predictDate)}\r\n                            label=\"预计完成时间\"\r\n                            name=\"predictDate\"\r\n                            type=\"month\"\r\n                            value={values?.predictDate}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{shrink:true}}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <Box my={2}>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >提交</Button>\r\n                            <Button\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                onClick={()=>onClose()}\r\n                                variant=\"contained\"\r\n                            >取消</Button>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </Dialog>\r\n    )\r\n\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessDisagreeForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\processApplyForm\\ProcessGroupDelay.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\boss\\WeeklyPublicationForBoss.js",["884","885","886"],"import {BOSS_GET_PUBLICATION, UPDATE_WEEKLYPUBLICATION} from \"../../../settings\";\r\nimport {postFetch} from \"../../../base\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport EditPublicationComment from \"../dialog/EditPublicationComment\";\r\nimport PublicationComment from \"../dialog/PublicationComment\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport WeeklyPublicationDialog from \"../dialog/WeeklyPublicationDialog\";\r\n\r\nconst TYPE={\r\n    0:\"硕士\",\r\n    10:\"博士\"\r\n}\r\nexport default function WeeklyPublicationForBoss(){\r\n    const getWeek=()=>{//获取现在是今年的第几周\r\n        const today = new Date();\r\n        let firstDayOfYear = new Date(today.getFullYear(), 0, 1);\r\n        const dayOfWeek = firstDayOfYear.getDay();\r\n        let spendDay = 1;\r\n        if (dayOfWeek != 0) {\r\n            spendDay = 7 - dayOfWeek + 1;\r\n        }\r\n        firstDayOfYear = new Date(today.getFullYear(), 0, spendDay);\r\n        const d = Math.ceil((today.valueOf() - firstDayOfYear.valueOf()) / 86400000);\r\n        return Math.ceil(d / 7)\r\n    }\r\n    const yearNum=new Date().getFullYear()\r\n    const weekNum=getWeek()\r\n    const classes=ContentStyle()\r\n    const [week, setWeek]=useState(yearNum+\"-W\"+(weekNum<10 ? \"0\"+weekNum : weekNum))\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [weeklyPublication,setWeeklyPublication]=useState([])\r\n    const [open,setOpen]=useState(false)\r\n    const [editOpen,setEditOpen]=useState(false)\r\n    const [publication,setPublication]=useState({})\r\n    const [publicationOpen, setPublicationOpen]=useState(false)\r\n\r\n    const bossGetWeeklyPublication=async ({page=1, limit, week})=>{\r\n        try {\r\n            let response=await fetch(\r\n                `${BOSS_GET_PUBLICATION}?week=${week}&limit=${limit}&offset=${(page-1)*limit}`);\r\n            return response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleScoreChange=(publication,score)=>{\r\n        const cor=confirmModal({\r\n            title:\"确认要修改周报评分吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:UPDATE_WEEKLYPUBLICATION,\r\n                    values:{\r\n                        id:publication.id,\r\n                        score:score\r\n                    },\r\n                    successCallback:()=>{\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const year=parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        bossGetWeeklyPublication({week:\"第\"+year+\"年第\"+weekNum+\"周\", page,limit:10}).then((res)=>{\r\n            setWeeklyPublication(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total/10) || 0)\r\n        })\r\n    },[refresh, page, pageNo, week])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        实验室学生周报\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        label=\"请选择周数\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        margin=\"normal\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        value={week}\r\n                        onChange={(event)=>{\r\n                            setWeek(event.target.value)\r\n                        }}\r\n                        type=\"week\"\r\n                        variant=\"outlined\"/>\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>学生姓名</TableCell>\r\n                                <TableCell align=\"center\">学生类型</TableCell>\r\n                                <TableCell align=\"center\">周报提交时间</TableCell>\r\n                                <TableCell align=\"center\">周报</TableCell>\r\n                                <TableCell align=\"center\">周报评分</TableCell>\r\n                                <TableCell align=\"center\">周报评语</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {weeklyPublication.map((publication)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{publication.stuName}</TableCell>\r\n                                    <TableCell align=\"center\">{TYPE[publication.type]}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        publication.date ? (publication.date) : (\r\n                                            \"暂未上传周报\"\r\n                                        )}</TableCell>\r\n                                    {publication.target ?(\r\n                                        <TableCell align=\"center\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    setPublicationOpen(true)\r\n                                                    setPublication(publication)\r\n                                                }}\r\n                                            >查看周报内容</Button>\r\n                                        </TableCell>\r\n                                    ):(\r\n                                        <TableCell align=\"center\">暂未上传</TableCell>\r\n                                    )}\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {publication.target ? (\r\n                                            publication.isMentor == 1 ? (//=1代表是导师，可以评价\r\n                                                <TextField\r\n                                                    select\r\n                                                    size=\"small\"\r\n                                                    value={publication.score? publication.score: 0}\r\n                                                    variant=\"outlined\"\r\n                                                    onChange={(e)=>{\r\n                                                        handleScoreChange(publication,parseInt(e.target.value))\r\n                                                    }}\r\n                                                    SelectProps={{native:true}}\r\n                                                >\r\n                                                    <option value={0}>0</option>\r\n                                                    <option value={1}>1</option>\r\n                                                    <option value={2}>2</option>\r\n                                                    <option value={3}>3</option>\r\n                                                    <option value={4}>4</option>\r\n                                                    <option value={5}>5</option>\r\n                                                </TextField>\r\n                                                ):(publication.score ? (publication.score) :(\r\n                                                    \"导师暂未评分\"\r\n                                            ))\r\n                                        ): \"暂未上传周报\"}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        {publication.target ? (\r\n                                            publication.isMentor == 1 ? (\r\n                                                <>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            setEditOpen(true)\r\n                                                            setPublication(publication)\r\n                                                        }}\r\n                                                    >{publication.comment ? \"修改评语\" : \"添加评语\"}</Button>\r\n\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"text\"\r\n                                                        onClick={()=>{\r\n                                                            setOpen(true)\r\n                                                            setPublication(publication)\r\n                                                        }}\r\n                                                    >查看周报评语</Button>\r\n                                                </>):(\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        setOpen(true)\r\n                                                        setPublication(publication)\r\n                                                    }}\r\n                                                >查看周报评语</Button>\r\n                                            )\r\n                                        ): \"暂未上传周报\"}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            href={`/app/weeklyPublication/${publication.stuId}`}\r\n                                        >查看学生所有周报</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n                {pageNo>1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}\r\n                    />\r\n                )}\r\n            </Card>\r\n\r\n            <EditPublicationComment open={editOpen}\r\n                                    onClose={()=>{\r\n                                        setEditOpen(false)\r\n                                        setPublication({})\r\n                                        setRefresh((p)=>!p)\r\n                                    }}\r\n                                    publication={publication}/>\r\n\r\n            <PublicationComment open={open}\r\n                                onClose={()=>{\r\n                                    setOpen(false)\r\n                                    setPublication({})\r\n                                    setRefresh((p)=>!p)\r\n                                }}\r\n                                publication={publication}/>\r\n\r\n            <WeeklyPublicationDialog open={publicationOpen}\r\n                                     onClose={()=>{\r\n                                         setPublicationOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)\r\n                                     }}\r\n                                     weeklyPublication={publication}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\updateUserInfo\\UpdateUserInfoForm.js",["887","888","889","890","891","892","893","894","895","896","897","898"],"import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { useFormik } from \"formik\";\r\nimport { postFetch } from \"src/base\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport alertBox from \"src/components/AlertBox\";\r\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\r\nimport { MNG_UPDATE_USER_URL, U_UPDATE_USER_URL } from \"src/settings\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1.5),\r\n  },\r\n  textField: {\r\n    width: \"47.9%\",\r\n  },\r\n}));\r\nconst types = [\r\n  {\r\n    value: 10,\r\n    label: \"学术型\",\r\n  },\r\n  {\r\n    value: 20,\r\n    label: \"结合型\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"技术型\",\r\n  },\r\n];\r\n\r\n\r\nexport default function UpdateUserInfoForm(props) {\r\n    const {userDetail, handleRefreshS}=props\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {userInfo} = useContext(UserContext);\r\n\r\n  const handleOnRefresh=()=>{\r\n      handleRefreshS();\r\n  }\r\n\r\n    const userRoles = [\r\n        {\r\n          right:true,\r\n          label:\"无\",\r\n          value: 0\r\n        },\r\n        {\r\n          right: false,\r\n          label: \"无\",\r\n          value: 0\r\n        },\r\n        {\r\n            right: userDetail.isTalkMng==1,\r\n            label: \"讨论班管理员\",\r\n            value:1\r\n        },\r\n        {\r\n            right: userDetail.isLabMng==1,\r\n            label: \"Lab管理员\",\r\n            value: 2\r\n        },\r\n        {\r\n            right: userDetail.isPaperMng==1,\r\n            label: \"推荐论文管理员\",\r\n            value: 3\r\n        },\r\n        {\r\n            right: userDetail.isEducateMng>0,\r\n            label: \"培养方案管理员\",\r\n            value: 4\r\n        },\r\n        {\r\n            right: userDetail.isDeviceMng==1,\r\n            label: \"设备管理员\",\r\n            value: 5\r\n        },\r\n    ];\r\n\r\n  const formik = useFormik({\r\n    initialValues: userDetail,\r\n    onSubmit: (values) => {\r\n      postFetch({\r\n        url: userInfo.isSystemMng ==1 ? MNG_UPDATE_USER_URL : U_UPDATE_USER_URL,\r\n        values,\r\n        successCallback: () => {\r\n          alertBox({ text: \"修改成功\", severity: \"success\" });\r\n          history.replace(\"/app/userManagement\")\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    touched,\r\n    values,\r\n  } = formik;\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.root}>\r\n      <TextField\r\n        label=\"用户姓名\"\r\n        fullWidth\r\n        name=\"name\"\r\n        value={values.name}\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        className={classes.margin}\r\n      />\r\n      <TextField\r\n        label=\"学/工号\"\r\n        fullWidth\r\n        name=\"stuId\"\r\n        value={values.stuId}\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        className={classes.margin}\r\n      />\r\n        {userInfo.isSystemMng==1 &&(\r\n          <TextField\r\n            error={Boolean(touched.name && errors.name)}\r\n            select\r\n            label=\"增加权限\"\r\n            name=\"addRole\"\r\n            className={clsx(classes.margin, classes.textField)}\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            variant=\"outlined\"\r\n            value={values.addRole}\r\n            SelectProps={{\r\n                native: true,\r\n            }}>\r\n              {userRoles.map((role)=> {\r\n                  if(!role.right){\r\n                      return(\r\n                          <option key={role.value} value={role.value}>\r\n                              {role.label}\r\n                          </option>\r\n                      )\r\n                  }\r\n              })}\r\n          </TextField>)}\r\n\r\n        {userInfo.isSystemMng==1 &&(\r\n            <TextField\r\n                error={Boolean(touched.name && errors.name)}\r\n                select\r\n                label=\"删除权限\"\r\n                name=\"deleteRole\"\r\n                className={clsx(classes.margin, classes.textField)}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                value={values.deleteRole}\r\n                SelectProps={{\r\n                    native: true,\r\n                }}>\r\n                {userRoles.map((role)=>{\r\n                    if(role.right){\r\n                        return(\r\n                            <option key={role.value} value={role.value}>\r\n                                {role.label}\r\n                            </option>\r\n                        )\r\n                    }\r\n                }\r\n                )}\r\n            </TextField>)\r\n\r\n        }\r\n\r\n      <TextField\r\n        error={Boolean(touched.name && errors.name)}\r\n        label=\"手机\"\r\n        name=\"telephone\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        variant=\"outlined\"\r\n        value={values.telephone}\r\n        max={11}\r\n        type=\"tel\"\r\n      />\r\n      <TextField\r\n        error={Boolean(touched.name && errors.name)}\r\n        label=\"邮箱\"\r\n        name=\"email\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        variant=\"outlined\"\r\n        value={values.email}\r\n        type=\"email\"\r\n      />\r\n\r\n      <Box my={2} className={classes.margin}>\r\n        <Button\r\n          color=\"primary\"\r\n          // disabled={isSubmitting}\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          提交\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\groupLeader\\WeeklyPublicationForGroupLeaderSelf.js",["899","900","901","902","903","904","905","906","907"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport {Button, Divider, Table, TableBody, TableCell, TableRow, Typography} from \"@material-ui/core\";\r\nimport {DOWNLOAD_WEEKLYPUBLICATION, STU_GET_PUBLICATION, UPLOAD_WEEKLYPUBLICATION} from \"../../../settings\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport {message, notification, Upload} from \"antd\";\r\nimport {DownloadOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport {TableHead} from \"@mui/material\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {useEffect, useState} from \"react\";\r\nimport PublicationComment from \"../dialog/PublicationComment\";\r\nimport WeeklyPublicationDialog from \"../dialog/WeeklyPublicationDialog\";\r\nimport PublicationUploadDialog from \"../dialog/PublicationUploadDialog\";\r\n\r\nexport default function WeeklyPublicationForGroupLeaderSelf(props){\r\n    const {userInfo}=props\r\n    const classes=ContentStyleForPage()\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [weeklyPublication,setWeeklyPublication]=useState([])//得到的所有的周报文件\r\n    const [publication,setPublication]=useState({})//查看评价的周报文件\r\n    const [open,setOpen]=useState(false)//comment的open\r\n    const [uploadOpen, setUploadOpen]=useState(false)\r\n    const [publicationOpen, setPublicationOpen]=useState(false)\r\n\r\n    const getPublication=async ({stuId, page=1, limit})=>{\r\n        try{\r\n            let response= await fetch(\r\n                `${STU_GET_PUBLICATION}?stuId=${stuId}&limit=${limit}&offset=${(page-1)*limit}`\r\n            );\r\n            return response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getPublication({stuId:userInfo.stuId,page, limit:10}).then((res)=>{\r\n            setWeeklyPublication(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total/10) || 0)\r\n        })\r\n    },[refresh, page, pageNo])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                    周报模块\r\n                </Typography>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    onClick={()=>{\r\n                        setUploadOpen(true)\r\n                    }}>上传周报</Button>\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>对应周数</TableCell>\r\n                        <TableCell align=\"center\">周报提交时间</TableCell>\r\n                        <TableCell align=\"center\">周报</TableCell>\r\n                        <TableCell align=\"center\">周报评分</TableCell>\r\n                        <TableCell align=\"center\">周报评语</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {weeklyPublication.map((publication)=>(\r\n                        <TableRow>\r\n                            <TableCell>{publication.week}</TableCell>\r\n                            <TableCell align=\"center\">{publication.date}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={()=>{\r\n                                        setPublicationOpen(true)\r\n                                        setPublication(publication)\r\n                                    }}>查看周报内容</Button>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{publication.score ? (publication.score) : (\"导师暂未评分\")}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"text\"\r\n                                    onClick={()=>{\r\n                                        setPublication(publication)\r\n                                        setOpen(true)\r\n                                    }}\r\n                                >查看周报评语</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            {pageNo>1 && (\r\n                <Pagination\r\n                    className={classes.Pagination}\r\n                    count={pageNo}\r\n                    color=\"primary\"\r\n                    onChange={(e,i)=>setPage(i)}\r\n                />\r\n            )}\r\n\r\n            <PublicationComment open={open}\r\n                                onClose={()=>{\r\n                                    setOpen(false)\r\n                                    setPublication({})\r\n                                    setRefresh((p)=>!p)\r\n                                }}\r\n                                publication={publication}/>\r\n\r\n            <WeeklyPublicationDialog open={publicationOpen}\r\n                                     onClose={()=>{\r\n                                         setPublicationOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)\r\n                                     }}\r\n                                     weeklyPublication={publication}/>\r\n\r\n            <PublicationUploadDialog open={uploadOpen}\r\n                                     onClose={()=>{\r\n                                         setUploadOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)}}\r\n                                     detail={{\r\n                                         stuId:userInfo.stuId,\r\n                                         stuName:userInfo.name\r\n                                     }}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\groupLeader\\WeeklyPublicationForGroupStudents.js",["908","909","910","911"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport {\r\n    GROUPLEADER_GET_PUBLICATION,\r\n    GROUPLEADER_STATISTICS_PUBLICATION,\r\n    MENTOR_STATISTICS_PUBLICATION\r\n} from \"../../../settings\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PublicationComment from \"../dialog/PublicationComment\";\r\nimport WeeklyPublicationDialog from \"../dialog/WeeklyPublicationDialog\";\r\nimport UndoneStudentDialog from \"../dialog/UndoneStudentDialog\";\r\n\r\nexport default function WeeklyPublicationForGroupStudents(props){\r\n    const getWeek=()=>{//获取现在是今年的第几周\r\n        const today = new Date();\r\n        let firstDayOfYear = new Date(today.getFullYear(), 0, 1);\r\n        const dayOfWeek = firstDayOfYear.getDay();\r\n        let spendDay = 1;\r\n        if (dayOfWeek != 0) {\r\n            spendDay = 7 - dayOfWeek + 1;\r\n        }\r\n        firstDayOfYear = new Date(today.getFullYear(), 0, spendDay);\r\n        const d = Math.ceil((today.valueOf() - firstDayOfYear.valueOf()) / 86400000);\r\n        return Math.ceil(d / 7)\r\n    }\r\n    const {userInfo}=props\r\n    const yearNum=new Date().getFullYear()\r\n    const weekNum=getWeek()\r\n    const [week,setWeek]=useState(yearNum+\"-W\"+(weekNum<10 ? \"0\"+weekNum : weekNum))\r\n    const classes=ContentStyleForPage()\r\n    const [weeklyPublication, setWeeklyPublication]=useState([])\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [open,setOpen]=useState(false)\r\n    const [publication,setPublication]=useState({})//查看评论或者修改评论的周报文件\r\n    const [publicationOpen, setPublicationOpen]=useState(false)//dialog是否打开\r\n    const [undoneCount, setUndoneCount]=useState(0)\r\n    const [undoneList,setUndoneList]=useState([])\r\n    const [undoneListOpen, setUndoneListOpen]=useState(false)\r\n\r\n\r\n    const groupLeaderGetWeeklyPublication= async ({stuName, page=1, limit, week})=>{\r\n        try{\r\n            let response=await fetch(\r\n                `${GROUPLEADER_GET_PUBLICATION}?stuName=${stuName}&week=${week}&limit=${limit}&offset=${(page-1)*limit}`\r\n            )\r\n            return response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const groupLeaderStatistics=({stuName, week})=>{\r\n        fetch(`${GROUPLEADER_STATISTICS_PUBLICATION}?stuName=${stuName}&week=${week}`,{method:\"GET\"})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setUndoneCount(res.data.unDoneCount)\r\n                setUndoneList(res.data.unDoneStudentList)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const year= parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        groupLeaderStatistics({stuName:userInfo.name, week:\"第\"+year+\"年第\"+weekNum+\"周\"})\r\n    },[week])\r\n\r\n    useEffect(()=>{\r\n        const year= parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        groupLeaderGetWeeklyPublication({stuName:userInfo.name, page, limit:10, week:\"第\"+year+\"年第\"+weekNum+\"周\"}).then((res)=>{\r\n            setWeeklyPublication(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total /10) || 0)\r\n        })\r\n    },[refresh, page, pageNo, week])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                    组内学生周报\r\n                </Typography>\r\n\r\n                <div className={classes.header}>\r\n                    <TextField\r\n                        label=\"请选择周数\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        margin=\"normal\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        value={week}\r\n                        onChange={(event)=>{\r\n                            setWeek(event.target.value)\r\n                        }}\r\n                        type=\"week\"\r\n                        variant=\"outlined\"/>\r\n\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">该周未提交周报人数：{undoneCount}</Typography>\r\n\r\n                    <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            setUndoneListOpen(true)\r\n                        }}>查看该周未提交周报名单</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>学生姓名</TableCell>\r\n                        <TableCell align=\"center\">周报提交时间</TableCell>\r\n                        <TableCell align=\"center\">周报</TableCell>\r\n                        <TableCell align=\"center\">周报评分</TableCell>\r\n                        <TableCell align=\"center\">周报评语</TableCell>\r\n                        <TableCell align=\"center\">操作</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {weeklyPublication.map((publication)=>(\r\n                        <TableRow>\r\n                            <TableCell>{publication.stuName}</TableCell>\r\n                            <TableCell align=\"center\">{\r\n                                publication.date ? (publication.date) : (\r\n                                    \"暂未上传周报\"\r\n                                )}</TableCell>\r\n                            {publication.target ? (\r\n                                <TableCell align=\"center\">\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        onClick={()=>{\r\n                                            setPublicationOpen(true)\r\n                                            setPublication(publication)\r\n                                        }}\r\n                                    >查看周报内容</Button>\r\n                                </TableCell>\r\n                            ):(\r\n                                <TableCell align=\"center\">暂未上传</TableCell>\r\n                            )}\r\n                            <TableCell align=\"center\">\r\n                                {publication.score? (\r\n                                    publication.score\r\n                                ): \"导师暂未评分\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {publication.target ? (\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        variant=\"text\"\r\n                                        onClick={()=>{\r\n                                            setOpen(true)\r\n                                            setPublication(publication)\r\n                                        }}\r\n                                    >查看周报评语</Button>\r\n                                ): \"暂未上传周报\"}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    variant=\"text\"\r\n                                    href={`/app/weeklyPublication/${publication.stuId}`}\r\n                                >查看学生所有周报</Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            {pageNo>1 && (\r\n                <Pagination\r\n                    className={classes.Pagination}\r\n                    count={pageNo}\r\n                    color=\"primary\"\r\n                    onChange={(e,i)=>setPage(i)}\r\n                />\r\n            )}\r\n\r\n            <PublicationComment open={open}\r\n                                onClose={()=>{\r\n                                    setOpen(false)\r\n                                    setPublication({})\r\n                                    setRefresh((p)=>!p)\r\n                                }}\r\n                                publication={publication}/>\r\n\r\n            <WeeklyPublicationDialog open={publicationOpen}\r\n                                     onClose={()=>{\r\n                                         setPublicationOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)\r\n                                     }}\r\n                                     weeklyPublication={publication}/>\r\n\r\n            <UndoneStudentDialog open={undoneListOpen}\r\n                                 list={undoneList}\r\n                                 onClose={()=>{\r\n                                     setUndoneListOpen(false)\r\n                                 }}/>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\manager\\WeeklyPublicationForManager.js",["912","913","914","915","916"],"import ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport {DOWNLOAD_WEEKLYPUBLICATION, MANAGER_GET_PUBLICATION, MANAGER_STATISTICS_PUBLICATION} from \"../../../settings\";\r\nimport {notification} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {DownloadOutlined} from \"@ant-design/icons\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport WeeklyPublicationDialog from \"../dialog/WeeklyPublicationDialog\";\r\nimport ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport UndoneStudentDialogForMng from \"../dialog/UndoneStudentDialogForMng\";\r\n\r\nconst TYPE={\r\n    0:\"硕士\",\r\n    10:\"博士\"\r\n}\r\n\r\nexport default function WeeklyPublicationForManager(){\r\n    const getWeek=()=>{//获取现在是今年的第几周\r\n        const today = new Date();\r\n        let firstDayOfYear = new Date(today.getFullYear(), 0, 1);\r\n        const dayOfWeek = firstDayOfYear.getDay();\r\n        let spendDay = 1;\r\n        if (dayOfWeek != 0) {\r\n            spendDay = 7 - dayOfWeek + 1;\r\n        }\r\n        firstDayOfYear = new Date(today.getFullYear(), 0, spendDay);\r\n        const d = Math.ceil((today.valueOf() - firstDayOfYear.valueOf()) / 86400000);\r\n        return Math.ceil(d / 7)\r\n    }\r\n    const yearNum=new Date().getFullYear()\r\n    const weekNum=getWeek()\r\n    const classes=ContentStyle()\r\n    const [week,setWeek]=useState(yearNum+\"-W\"+(weekNum<10 ? \"0\"+weekNum : weekNum))\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [weeklyPublication,setWeeklyPublication]=useState([])\r\n    const [publication, setPublication]=useState({})\r\n    const [publicationOpen, setPublicationOpen]=useState(false)\r\n    const [undoneCount, setUndoneCount]=useState(0)\r\n    const [undoneList,setUndoneList]=useState([])\r\n    const [undoneListOpen, setUndoneListOpen]=useState(false)\r\n\r\n    const managerGetWeeklyPublication = async ({page=1,limit, week})=>{\r\n        try{\r\n            let response=await fetch(\r\n                `${MANAGER_GET_PUBLICATION}?week=${week}&limit=${limit}&offset=${(page-1)*limit}`\r\n            )\r\n            return response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const managerStatics=({week})=>{\r\n        fetch(`${MANAGER_STATISTICS_PUBLICATION}?week=${week}`,{method:\"GET\"})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setUndoneCount(res.data.unDoneCount)\r\n                setUndoneList(res.data.unDoneStudentList)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const year= parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        managerStatics({week:\"第\"+year+\"年第\"+weekNum+\"周\"})\r\n    },[week])\r\n\r\n    useEffect(()=>{\r\n        const year= parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        managerGetWeeklyPublication({page,limit:10,week:\"第\"+year+\"年第\"+weekNum+\"周\"}).then((res)=>{\r\n            setWeeklyPublication(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total/10) || 0)\r\n        })\r\n    },[refresh, page, pageNo, week])\r\n\r\n    return (\r\n        <div className={ContentStyleForPage().root}>\r\n                <div>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        周报模块\r\n                    </Typography>\r\n\r\n                    <div className={ContentStyleForPage().header}>\r\n                        <TextField\r\n                            label=\"请选择周数\"\r\n                            InputLabelProps={{shrink:true}}\r\n                            margin=\"normal\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            value={week}\r\n                            onChange={(event)=>{\r\n                                setWeek(event.target.value)\r\n                            }}\r\n                            type=\"week\"\r\n                            variant=\"outlined\"/>\r\n\r\n                        <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">该周未提交周报人数：{undoneCount}</Typography>\r\n\r\n                        <Button\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                setUndoneListOpen(true)\r\n                            }}>查看该周未提交周报名单</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>学生姓名</TableCell>\r\n                                <TableCell align=\"center\">学生类型</TableCell>\r\n                                <TableCell align=\"center\">周报提交时间</TableCell>\r\n                                <TableCell align=\"center\">周报</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {weeklyPublication.map((publication)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{publication.stuName}</TableCell>\r\n                                    <TableCell align=\"center\">{TYPE[publication.type]}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        publication.date ? (\r\n                                            publication.date\r\n                                        ): (\r\n                                            \"暂未上传周报\"\r\n                                        )\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {publication.target ? (\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    setPublicationOpen(true)\r\n                                                    setPublication(publication)\r\n                                                }}\r\n                                            >查看周报内容</Button>\r\n                                        ):(\"暂未上传\")}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n\r\n                {pageNo>1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}\r\n                    />\r\n                )}\r\n\r\n            <WeeklyPublicationDialog open={publicationOpen}\r\n                                     onClose={()=>{\r\n                                         setPublicationOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)\r\n                                     }}\r\n                                     weeklyPublication={publication}/>\r\n\r\n            <UndoneStudentDialogForMng open={undoneListOpen}\r\n                                       week={week}\r\n                                       list={undoneList}\r\n                                       onClose={()=>{\r\n                                           setUndoneListOpen(false)\r\n                                       }}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForTeacher\\ProcessForTea.js",["917","918","919","920"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {\r\n    MNG_PROCESS_GET_COUNT,\r\n    MNG_PROCESS_GET_STUDENT,\r\n    MNG_PROCESS_GET_STUMISSIONSTATUS, PROCESS_GET_MASTERFROMMENTOR_TOTAL\r\n} from \"../../../../settings\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport Badge from '@mui/material/Badge';\r\nimport ProcessForTeachApprove from \"../processForm/ProcessForTeachApprove\";\r\nimport ProcessForTeachDelay from \"../processForm/ProcessForTeachDelay\";\r\nimport ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\n\r\nconst Role={\r\n    0: \"硕士\",\r\n    10: \"博士\"\r\n}\r\n\r\nexport default function ProcessForTea(){\r\n    const classes=ContentStyleForPage()\r\n    const [page, setPage]=useState(1)\r\n    const [pageNo, setPageNo]=useState(0)\r\n    const {userInfo}=useContext(UserContext)\r\n    const [users, setUsers]=useState([])\r\n    const [missionStatus,setMissionStatus]=useState([])\r\n    const [allApprove,setAllApprove]=useState([])\r\n    const [open,setOpen]=useState(false)\r\n    const [allDelay,setAllDelay]=useState([])\r\n    const [delayOpen,setDelayOpen]=useState(false)\r\n    const [count1,setCount1]=useState(0)\r\n    const [count2,setCount2]=useState(0)\r\n\r\n    const getAllStudentMissionStatus=()=>{\r\n        fetch(`${MNG_PROCESS_GET_STUMISSIONSTATUS}?limit=${10}&offset=${(page-1)*10}&name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setMissionStatus(res?.data || [])\r\n            })\r\n    }\r\n    const getCount=()=>{//获取状态异常的学生人数\r\n        fetch(`${MNG_PROCESS_GET_COUNT}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setCount1(res?.data[0])\r\n                setCount2(res?.data[1])\r\n            })\r\n    }\r\n\r\n    const getAllStudent=()=>{\r\n        fetch(`${MNG_PROCESS_GET_STUDENT}?limit=${10}&offset=${(page-1)*10}&name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setUsers(res?.data || [])\r\n            })\r\n\r\n    }\r\n\r\n    const getTotal=()=>{\r\n        fetch(`${PROCESS_GET_MASTERFROMMENTOR_TOTAL}?name=${userInfo.name}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setPageNo(Math.ceil(res.data/10) || 0)\r\n            })\r\n    }\r\n    useEffect(()=>{\r\n        getTotal()\r\n        getCount()//获取状态异常的学生人数\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getAllStudentMissionStatus()\r\n        getAllStudent()\r\n    },[page, pageNo])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                <div className={classes.header}>\r\n\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        学生培养过程管理\r\n                    </Typography>\r\n\r\n                    <Box>\r\n                        <Typography color=\"textPrimary\" size=\"small\">\r\n                            严重逾期人数：{count1}<br/>\r\n                            逾期人数：{count2+count1}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n\r\n                    {missionStatus.length!==0 && (\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>姓名</TableCell>\r\n                                    <TableCell align=\"center\">学/工号</TableCell>\r\n                                    <TableCell align=\"center\">类型</TableCell>\r\n                                    <TableCell align=\"center\">任务逾期数量</TableCell>\r\n                                    <TableCell align=\"center\">操作</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {users.map((user,index)=>{\r\n                                    return (\r\n                                        <TableRow hover key={user.id}>\r\n                                            <TableCell>{user.name}</TableCell>\r\n                                            <TableCell align=\"center\">{user.stuId}</TableCell>\r\n                                            <TableCell align=\"center\">{Role[user.type]}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {missionStatus[index]<1 ? (\r\n                                                    <Badge color=\"success\" badgeContent={0} showZero/>\r\n                                                ):(\r\n                                                    missionStatus[index]>1? (\r\n                                                        <Badge color=\"error\" badgeContent={missionStatus[index]}/>\r\n                                                    ):(\r\n                                                        <Badge color=\"warning\" badgeContent={missionStatus[index]}/>\r\n                                                    )\r\n                                                )}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    href={`/app/studyPlan/stuProcess/${user.stuId}`}\r\n                                                >查看学生培养过程</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    )}\r\n                    {pageNo>1 &&(\r\n                        <Pagination\r\n                            className={classes.Pagination}\r\n                            count={pageNo}\r\n                            color=\"primary\"\r\n                            onChange={(e,i)=>{\r\n                                setPage(i)\r\n                            }}/>\r\n                    )}\r\n\r\n            <ProcessForTeachApprove open={open}\r\n                                    onClose={()=>{\r\n                                        setOpen(false)\r\n                                        window.location.reload()\r\n                                    }}\r\n                                    approveList={allApprove}/>\r\n\r\n            <ProcessForTeachDelay open={delayOpen}\r\n                                  onClose={()=>{\r\n                                      setDelayOpen(false)\r\n                                      window.location.reload()\r\n                                  }}\r\n                                  delayList={allDelay}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\TopBar.js",["921","922","923","924","925"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Popper,\r\n  Grow,\r\n  Paper,\r\n  ClickAwayListener,\r\n  MenuList,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport cookie from \"react-cookies\";\r\nimport { GET_BULLETIN_STATE } from \"src/settings\";\r\nimport {BulletinContext, RefreshContext, UserContext} from \"src/layouts/Context\";\r\nimport BulletinListView from \"../../views/bulletin/BulletinListView\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  logo: {\r\n    color: \"white\",\r\n    fontSize: \"larger\",\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { userInfo } = useContext(UserContext);\r\n  const [newBulletinNumber, setNewBulletinNumber] = useState(0); //未读通知数量\r\n  const logOut = () => {\r\n    cookie.remove(\"loggedIn\", { path: \"/\" });\r\n    history.push(\"/main/login\");\r\n  };\r\n\r\n  //向后台调取所有未读通知数\r\n  const getAllBulletin = () => {\r\n    fetch(`${GET_BULLETIN_STATE}?stuId=${userInfo.stuId}`, {})\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) =>\r\n        setNewBulletinNumber(response)\r\n      );\r\n  };\r\n\r\n  useEffect(getAllBulletin\r\n      ,[]);\r\n\r\n  const anchorRef = React.useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListKeyDown = (event) => {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = useRef(open);\r\n\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n          <Typography className={classes.logo}>\r\n            复旦大学系统软件与安全实验室\r\n          </Typography>\r\n        <Box flexGrow={1} />\r\n        {/*<Hidden mdDown>*/}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            component={RouterLink}\r\n            to={\"/app/bulletinList\"}\r\n          >\r\n            <Badge badgeContent={newBulletinNumber} color=\"error\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <Button\r\n            color=\"inherit\"\r\n            startIcon={<AccountCircleIcon />}\r\n            endIcon={<ExpandMoreIcon />}\r\n            ref={anchorRef}\r\n            aria-controls={open ? \"menu-list-grow\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n          >\r\n            {userInfo.name}\r\n          </Button>\r\n          <Popper\r\n            open={open}\r\n            anchorEl={anchorRef.current}\r\n            role={undefined}\r\n            transition\r\n            disablePortal\r\n          >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{\r\n                  transformOrigin:\r\n                    placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList\r\n                      autoFocusItem={open}\r\n                      id=\"menu-list-grow\"\r\n                      onKeyDown={handleListKeyDown}\r\n                    >\r\n                      <MenuItem\r\n                        component={RouterLink}\r\n                        to={`/app/updateUserInfo/${userInfo.stuId}`}\r\n                      >\r\n                        编辑资料\r\n                      </MenuItem>\r\n                      <MenuItem component={RouterLink} to={\"/main/reset\"}>\r\n                        修改密码\r\n                      </MenuItem>\r\n                      <MenuItem onClick={logOut}>退出登录</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n          {/* <IconButton onClick={logOut} color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton> */}\r\n          {/*</Hidden>*/}\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default TopBar;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\lab\\normalStudent\\PersonalLab.js",["926"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport {Button, Divider, Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport UploadLabWork from \"../dialog/UploadLabWork\";\r\nimport {GET_LAB_NAME} from \"../../../settings\";\r\n\r\nexport default function PersonalLab(props){\r\n    const {userInfo} = props\r\n    const classes = ContentStyleForPage()\r\n    const [open, setOpen]=useState(false)\r\n    const [refresh, setRefresh]=useState(false)\r\n    const [labName, setLabName]=useState([])\r\n\r\n    const getLabName=()=>{\r\n        fetch(GET_LAB_NAME)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setLabName(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n     getLabName()\r\n    },[refresh])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    variant=\"outlined\"\r\n                    onClick={()=>{\r\n                        setOpen(true)\r\n                    }}><UploadOutlined/>上传Lab答案</Button>\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <UploadLabWork open={open} onClose={()=>{\r\n                setOpen(false)\r\n                setRefresh((p)=>!p)\r\n            }} labName={labName}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\baseInformation\\selfEdit\\selfEditForm.js",["927","928"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { useFormik } from \"formik\";\r\nimport { postFetch } from \"src/base\";\r\nimport alertBox from \"src/components/AlertBox\";\r\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\r\nimport {MNG_GET_ALL_USER, MNG_UPDATE_USER_URL, U_UPDATE_USER_URL} from \"src/settings\";\r\nimport {forceGetAllUser} from \"../../../../service/userService\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1.5),\r\n    },\r\n    textField: {\r\n        width: \"47.9%\",\r\n    },\r\n}));\r\n\r\nexport default function SelfEditForm(props) {\r\n    const {userDetail, handleOnRefresh}=props;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [teachers,setTeachers] = useState([]);\r\n    const {userInfo}=useContext(UserContext);\r\n    const [refresh, setRefresh]=useState(false);\r\n\r\n    const handleOnRefreshS=()=>{\r\n        handleOnRefresh();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetch(`${MNG_GET_ALL_USER}?type=${20}`,{})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setTeachers(res?.data || [])\r\n            })\r\n    },[refresh]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: userDetail,\r\n        onSubmit: (values) => {\r\n            postFetch({\r\n                url: userInfo.isEducateMng>0 ? MNG_UPDATE_USER_URL : U_UPDATE_USER_URL,\r\n                values,\r\n                successCallback: () => {\r\n                    alertBox({ text: \"修改成功\", severity: \"success\" });\r\n                    if(userInfo.isEducateMng>0){\r\n                        history.replace(\"/app/studyPlan/baseInformation/mng\")\r\n                    }\r\n                    handleOnRefreshS()\r\n                },\r\n            });\r\n        },\r\n    });\r\n\r\n    const {\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        values,\r\n    } = formik;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.root}>\r\n            <TextField\r\n                label=\"用户姓名\"\r\n                fullWidth\r\n                name=\"name\"\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                className={classes.margin}\r\n            />\r\n            <TextField\r\n                label=\"学/工号\"\r\n                fullWidth\r\n                name=\"stuId\"\r\n                value={values.stuId}\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n            />\r\n            {userInfo.isEducateMng>0 && (\r\n                <TextField\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    select\r\n                    label=\"导师\"\r\n                    name=\"mentor\"\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    value={values.mentor}\r\n                    SelectProps={{\r\n                        native: true,\r\n                    }}\r\n                >\r\n                    <option >\r\n                        无\r\n                    </option>\r\n                    {teachers.map((user)=>(\r\n                        <option value={user.name}>\r\n                            {user.name}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n\r\n            <TextField\r\n              error={Boolean(touched.keshuo && errors.keshuo)}\r\n              select\r\n              disabled={(userInfo.type!==20 || userDetail.type===10)? true: false}\r\n              label=\"硕士类型\"\r\n              name=\"keshuo\"\r\n              className={clsx(classes.margin, classes.textField)}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              value={values.keshuo}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n            >\r\n              <option value={0}>无</option>\r\n              <option value={1}>学硕</option>\r\n              <option value={2}>专硕</option>\r\n              <option value={3}>学工</option>\r\n            </TextField>\r\n            <TextField\r\n              error={Boolean(touched.name && errors.name)}\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              label=\"论文\"\r\n              name=\"papers\"\r\n              className={classes.margin}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              value={values.papers}\r\n            />\r\n            <TextField\r\n              error={Boolean(touched.name && errors.name)}\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              label=\"专利\"\r\n              name=\"patents\"\r\n              className={classes.margin}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              value={values.patents}\r\n            />\r\n            <TextField\r\n              error={Boolean(touched.name && errors.name)}\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              label=\"服务\"\r\n              name=\"services\"\r\n              className={classes.margin}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              value={values.services}\r\n            />\r\n            <TextField\r\n              error={Boolean(touched.name && errors.name)}\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              label=\"项目\"\r\n              name=\"projects\"\r\n              className={classes.margin}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              value={values.projects}\r\n            />\r\n            <Box my={2} className={classes.margin}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    // disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                >\r\n                    提交\r\n                </Button>\r\n            </Box>\r\n        </form>\r\n    );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForMng\\BaseInformationForMng.js",["929","930","931"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {getAllStudent} from \"../../../../service/userService\";\r\nimport ContentStyle from \"../../../../components/Style/ContentStyle\";\r\nimport {\r\n    Box, Button,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport Badge from \"@mui/material/Badge\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\n\r\nconst ROLE= {\r\n    0: \"硕士\",\r\n    10: \"博士\"\r\n}\r\n\r\nexport default function BaseInformationForMng(){\r\n    const classes=ContentStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [students,setStudents]=useState([])\r\n    const [missionStatus,setMissionStatus]=useState([])\r\n    const [name,setName]=useState(\"\")\r\n\r\n    const mngPermission= userInfo.isEducateMng===1\r\n\r\n    // const getAllStudentMissionStatus=()=>{\r\n    //     fetch(`${MNG_PROCESS_GET_MNGSTUMISSOINSTATUS}?limit=${10}&offset=${(page-1)*10}&name=${name}&groupId=${0}`)\r\n    //         .then((res)=>res.json())\r\n    //         .catch((error)=>console.log(error))\r\n    //         .then((res)=>{\r\n    //             setMissionStatus(res?.data || [])\r\n    //         })\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        getAllStudent({page,groupId:0,name}).then((res)=>{ //获取所有的学生\r\n            setStudents(res?.data ||[])\r\n            setPageNo(Math.ceil(res?.paging?.total / 10) || 0)\r\n        })\r\n        // getAllStudentMissionStatus()\r\n    },[refresh, page, pageNo, name])\r\n\r\n    return(\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\">\r\n                        学生培养过程（管理员模式）\r\n                    </Typography>\r\n\r\n                        <TextField\r\n                            label=\"搜索学生\"\r\n                            size=\"small\"\r\n                            onChange={(e)=>{\r\n                                setPage(1)\r\n                                setName(e.target.value)}}\r\n                        />\r\n\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            href=\"/app/studyPlan/mngProcess/category\">\r\n                            管理员配置任务\r\n                        </Button>\r\n\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>姓名</TableCell>\r\n                                <TableCell>学/工号</TableCell>\r\n                                <TableCell>类型</TableCell>\r\n                                <TableCell>导师</TableCell>\r\n                                <TableCell align=\"center\">任务状态</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {students.map((student,index)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{student.name}</TableCell>\r\n                                    <TableCell>{student.stuId}</TableCell>\r\n                                    <TableCell>{ROLE[student.type]}</TableCell>\r\n                                    <TableCell>{student.mentor}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {missionStatus[index]<1 ? (\r\n                                            <Badge color=\"success\" badgeContent={0} showZero/>\r\n                                        ):(\r\n                                            missionStatus[index]>1? (\r\n                                                <Badge color=\"error\" badgeContent={missionStatus[index]}/>\r\n                                            ):(\r\n                                                <Badge color=\"warning\" badgeContent={missionStatus[index]}/>\r\n                                            )\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            href={`/app/updateStudentInfo/${student.stuId}`}\r\n                                        >\r\n                                            编辑学生信息\r\n                                        </Button>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            href={`/app/studyPlan/stuProcess/${student.stuId}`}\r\n                                            >查看学生培养过程</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        </TableBody>\r\n\r\n                    </Table>\r\n\r\n                    {pageNo > 1 && (\r\n                        <Pagination\r\n                            className={classes.Pagination}\r\n                            count={pageNo}\r\n                            color=\"primary\"\r\n                            onChange={(e, i) => setPage(i)}\r\n                        />\r\n                    )}\r\n                </Box>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\layouts\\MainLayout\\TopBar.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\lab\\common\\LabPublish.js",["932","933","934","935","936","937"],"import ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\nimport {Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport {DELETE_LAB_DATA, GET_LAB_DATA} from \"../../../settings\";\r\nimport {useContext, useState} from \"react\";\r\nimport {DownloadOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport UploadLabData from \"../dialog/UploadLabData\";\r\n\r\nexport default function LabPublish(props){\r\n    const {elite} = props\r\n    const classes = ContentStyleForPage()\r\n    const {userInfo} = useContext(UserContext)\r\n    const [refresh, setRefresh]=useState(false)\r\n    const [labData, setLabData] = useState([])\r\n    const [uploadOpen, setUploadOpen]=useState(false)\r\n\r\n    const getLab=()=>{\r\n        fetch(GET_LAB_DATA)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setLabData(res.data)\r\n            })\r\n    }\r\n\r\n    const handleDelete=(id)=>{\r\n        const cor = confirmModal({\r\n            title:\"确定要删除这个已经发布的Lab资料嘛？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                fetch(`${DELETE_LAB_DATA}?id=${id}`, {method:\"POST\"})\r\n                    .then((res)=>res.json())\r\n                    .catch((error)=>console.error(error))\r\n                    .then(()=>{\r\n                        alertBox({text:\"删除成功\",severity:\"success\"})\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.header}>\r\n                <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                    Lab资料\r\n                </Typography>\r\n\r\n                {elite == true && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            setUploadOpen(true)\r\n                        }}\r\n                        ><UploadOutlined/>上传Lab资料</Button>\r\n                )}\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Lab发布时间</TableCell>\r\n                        <TableCell align=\"center\">Lab名称</TableCell>\r\n                        <TableCell align=\"center\">Lab资料</TableCell>\r\n                        <TableCell align=\"center\">Lab发布人</TableCell>\r\n                        {elite == true && (\r\n                            <TableCell align=\"center\">操作</TableCell>\r\n                        )}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {labData.map((singleLabData)=>(\r\n                        <TableRow>\r\n                            <TableCell>{singleLabData.date}</TableCell>\r\n                            <TableCell align=\"center\">{singleLabData.labName}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={()=>{}}\r\n                                    ><DownloadOutlined/>下载</Button>\r\n                            </TableCell>\r\n                            <TableCell>{singleLabData.labPublisher}</TableCell>\r\n                            {elite == true && (\r\n                                <TableCell align=\"center\">{\r\n                                    singleLabData.labPublisherStuId == userInfo.stuId && (\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                handleDelete(singleLabData.id)\r\n                                            }}>删除</Button>\r\n                                    )\r\n                                }</TableCell>\r\n                            )}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <UploadLabData open={uploadOpen}\r\n                           publisher={{\r\n                               stuName:userInfo.name,\r\n                               stuId:userInfo.stuId\r\n                           }}\r\n                           onClose={()=>{\r\n                               setUploadOpen(false)\r\n                               setRefresh((p)=>!p)\r\n                           }}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\UndoneStudentDialog.js",["938","939"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function UndoneStudentDialog(props){\r\n    const {open, list, onClose}=props\r\n    const classes=useStyles()\r\n\r\n    const getNameLine=()=>{\r\n        let nameLine=\"\"\r\n        list.map((l,index)=>{\r\n            let s= index==0 ? l.name : \"，\"+l.name\r\n            nameLine=nameLine+s\r\n        })\r\n        return nameLine\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={onClose} open={open} className={classes.root}>\r\n            <DialogTitle onClose={onClose}>\r\n                未提交周报名单\r\n            </DialogTitle>\r\n            <form className=\"dialogForm\">\r\n                <TextField\r\n                    InputProps={{readOnly:true}}\r\n                    multiline\r\n                    rows={15}\r\n                    fullWidth\r\n                    value={getNameLine()}\r\n                    variant=\"outlined\"\r\n                    />\r\n                <Box my={2}>\r\n                    <Button\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={()=>{\r\n                            onClose()\r\n                        }}\r\n                        variant=\"contained\">关闭</Button>\r\n                </Box>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\UndoneStudentDialogForMng.js",["940","941","942"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL} from \"../../../settings\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function UndoneStudentDialogForMng(props){\r\n    const {open, list, onClose, week}=props\r\n    const classes=useStyles()\r\n\r\n    const getNameLine=()=>{\r\n        let nameLine=\"\"\r\n        list.map((l,index)=>{\r\n            let s= index==0 ? l.name : \"，\"+l.name\r\n            nameLine=nameLine+s\r\n        })\r\n        return nameLine\r\n    }\r\n\r\n    const handleClick=()=>{\r\n        const cor=confirmModal({\r\n            title:\"确定要给该周未提交周报的同学发送提示信息嘛？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                list.map((l)=>{\r\n                    postFetch({\r\n                        url:MNG_ADD_BULLETIN_URL,\r\n                        values:{\r\n                            stuId:l.stuId,\r\n                            title:\"你的周报未及时提交\",\r\n                            content:\"你的第\"+week.slice(0,4)+\"年第\"+week.slice(6)+\"周的周报未提交，请及时提交你的周报\"\r\n                        }\r\n                    })\r\n                })\r\n                alertBox({text:\"通知发送成功\", severity:\"success\"})\r\n                onClose()\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={onClose} open={open} className={classes.root}>\r\n            <DialogTitle onClose={onClose}>\r\n                未提交周报名单\r\n            </DialogTitle>\r\n            <form className=\"dialogForm\">\r\n                <TextField\r\n                    InputProps={{readOnly:true}}\r\n                    multiline\r\n                    rows={15}\r\n                    fullWidth\r\n                    value={getNameLine()}\r\n                    variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                    <Button\r\n                        fullWidth\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={()=>{\r\n                            handleClick()\r\n                        }}\r\n                        variant=\"contained\">发送提示信息</Button>\r\n                    <Button\r\n                        fullWidth\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        onClick={()=>{\r\n                            onClose()\r\n                        }}\r\n                        variant=\"contained\">关闭</Button>\r\n                </Box>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\WeeklyPublicationDialog.js",["943"],"import {AppBar, Dialog, IconButton, makeStyles, TextField, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {Transition} from \"../../device/components/DeviceApplyHistory\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst useStylesS = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1.5),\r\n    },\r\n    textField: {\r\n        width: \"47.9%\",\r\n    },\r\n}));\r\n\r\nexport default function WeeklyPublicationDialog(props){\r\n    const {open, weeklyPublication, onClose}=props\r\n    const classes=useStyles()\r\n    const classesS=useStylesS()\r\n\r\n    return (\r\n        <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h3\" className={classes.title}>\r\n                        {`${weeklyPublication.stuName}${weeklyPublication.date}提交的周报`}\r\n                    </Typography>\r\n\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={onClose}\r\n                        aria-label=\"close\">\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <form className={classesS.root}>\r\n                <TextField\r\n                    className={classesS.margin}\r\n                    InputProps={{readOnly:true}}\r\n                    multiline\r\n                    rows={3}\r\n                    label=\"Target\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"target\"\r\n                    value={weeklyPublication.plan}\r\n                    variant=\"outlined\"/>\r\n                <TextField\r\n                    className={classesS.margin}\r\n                    InputProps={{readOnly:true}}\r\n                    multiline\r\n                    rows={4}\r\n                    label=\"Outlined Achievements\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"outlinedAchievements\"\r\n                    value={weeklyPublication.outlinedAchievements}\r\n                    variant=\"outlined\"/>\r\n                <TextField\r\n                    className={classesS.margin}\r\n                    InputProps={{readOnly:true}}\r\n                    multiline\r\n                    rows={20}\r\n                    label=\"Achievements\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"achievements\"\r\n                    value={weeklyPublication.achievements}\r\n                    variant=\"outlined\"/>\r\n                <TextField\r\n                    className={classesS.margin}\r\n                    InputProps={{readOnly:true}}\r\n                    multiline\r\n                    rows={5}\r\n                    label=\"Plan\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"plan\"\r\n                    value={weeklyPublication.plan}\r\n                    variant=\"outlined\"/>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\PublicationUploadDialog.js",["944","945"],"import {\r\n    AppBar, Box,\r\n    Button,\r\n    ButtonGroup,\r\n    Dialog,\r\n    IconButton,\r\n    makeStyles,\r\n    TextField,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Transition} from \"../../device/components/DeviceApplyHistory\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {Formik} from \"formik\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../base\";\r\nimport {UPDATE_WEEKLYPUBLICATION, UPLOAD_WEEKLYPUBLICATION} from \"../../../settings\";\r\nimport * as Yup from \"yup\";\r\nimport {useState} from \"react\";\r\nimport SelectWeekDialog from \"./SelectWeekDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst useStylesS = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1.5),\r\n    },\r\n    textField: {\r\n        width: \"47.9%\",\r\n    },\r\n}));\r\n\r\nexport default function PublicationUploadDialog(props){\r\n    const {open, detail, onClose}=props\r\n    const classes=useStyles()\r\n    const classesS=useStylesS()\r\n    const [publicationValues, setPublicationValues]=useState({})\r\n    const [selectOpen, setSelectOpen]=useState(false)\r\n\r\n    return (\r\n        <>\r\n        <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h3\" className={classes.title}>\r\n                        周报上传\r\n                    </Typography>\r\n\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={onClose}\r\n                        aria-label=\"close\">\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Formik initialValues={detail}\r\n                    validationSchema={Yup.object().shape({\r\n                        target: Yup.string().required(\"Target的内容不能为空\"),\r\n                        outlinedAchievements: Yup.string().required(\"OutlinedAchievements的内容不能为空\"),\r\n                        achievements: Yup.string().required(\"Achievements的内容不能为空\"),\r\n                        plan: Yup.string().required(\"Plan的内容不能为空\")\r\n                    })}\r\n                    onSubmit={(values)=>{\r\n                        if (detail.id){// detail.id存在，说明是修改，那么week不用改变\r\n                            const cor = confirmModal({\r\n                                title:\"确定要修改此次周报吗？\",\r\n                                handleCorfirm:()=>{\r\n                                    cor.close()\r\n                                    postFetch({\r\n                                        url: UPDATE_WEEKLYPUBLICATION,\r\n                                        values:{\r\n                                            id: detail.id,\r\n                                            target: values.target,\r\n                                            outlinedAchievements: values.outlinedAchievements,\r\n                                            achievements: values.achievements,\r\n                                            plan: values.plan\r\n                                        },\r\n                                        successCallback:()=>{\r\n                                            onClose()\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            setSelectOpen(true)\r\n                            setPublicationValues({\r\n                                stuName:values.stuName,\r\n                                stuId:values.stuId,\r\n                                target:values.target,\r\n                                outlinedAchievements:values.outlinedAchievements,\r\n                                achievements:values.achievements,\r\n                                plan:values.plan\r\n                            })\r\n                        }\r\n            }}\r\n            >{({handleSubmit, handleChange, handleBlur, values, errors, touched })=>(\r\n                <form onSubmit={handleSubmit} className={classesS.root}>\r\n\r\n                    <TextField\r\n                        error={Boolean(touched.target && errors.target)}\r\n                        helperText={touched.target && errors.target}\r\n                        className={classesS.margin}\r\n                        multiline\r\n                        rows={3}\r\n                        label=\"Target\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        name=\"target\"\r\n                        value={values.target}\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}/>\r\n                    <TextField\r\n                        error={Boolean(touched.outlinedAchievements && errors.outlinedAchievements)}\r\n                        helperText={touched.outlinedAchievements && errors.outlinedAchievements}\r\n                        className={classesS.margin}\r\n                        multiline\r\n                        rows={4}\r\n                        label=\"Outlined Achievements\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        name=\"outlinedAchievements\"\r\n                        value={values.outlinedAchievements}\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}/>\r\n                    <TextField\r\n                        error={Boolean(touched.achievements && errors.achievements)}\r\n                        helperText={touched.achievements && errors.achievements}\r\n                        className={classesS.margin}\r\n                        multiline\r\n                        rows={20}\r\n                        label=\"Achievements\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        name=\"achievements\"\r\n                        value={values.achievements}\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}/>\r\n                    <TextField\r\n                        error={Boolean(touched.plan && errors.plan)}\r\n                        helperText={touched.plan && errors.plan}\r\n                        className={classesS.margin}\r\n                        multiline\r\n                        rows={5}\r\n                        label=\"Plan\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        name=\"plan\"\r\n                        value={values.plan}\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}/>\r\n\r\n                    <Box my={2}>\r\n                        <Button\r\n                            className={classesS.margin}\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                        >提交</Button>\r\n                    </Box>\r\n                </form>\r\n            )}</Formik>\r\n        </Dialog>\r\n\r\n        <SelectWeekDialog open={selectOpen}\r\n                          publicationValues={publicationValues}\r\n                          onClose={()=>{\r\n                              setSelectOpen(false)\r\n                              setPublicationValues({})\r\n\r\n                          }}\r\n                          allClose={()=>{\r\n                              setSelectOpen(false)\r\n                              setPublicationValues({})\r\n                              onClose()\r\n                          }}\r\n        />\r\n        </>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessForTeachDelay.js",["946","947","948","949","950","951","952","953"],"import {\r\n    AppBar,\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    makeStyles,\r\n    Slide,\r\n    Table,\r\n    TableBody, TableCell, TableHead,\r\n    TableRow,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL, MNG_PROCESS_GROUP_APPROBE_DELAY, MNG_PROCESS_GROUP_APPROVE} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nexport default function ProcessForTeachDelay(props){\r\n    const classes=useStyles()\r\n    const {open, onClose, delayList}=props\r\n    const [check,setCheck]=useState(false)\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    let onlineAgree=[]\r\n\r\n    // const handleAgree=()=>{\r\n    //     const cor=confirmModal({\r\n    //         title:\"未勾选的任务默认为不同意，确认要提交吗？\",\r\n    //         handleCorfirm:()=>{\r\n    //             cor.close()\r\n    //             postFetch({\r\n    //                 url:MNG_PROCESS_GROUP_APPROVE,\r\n    //                 values:{\r\n    //                     list:onlineAgree,\r\n    //                     status:1,\r\n    //                     isDelay:1\r\n    //                 },\r\n    //                 successCallback:()=>{\r\n    //                     postFetch({\r\n    //                         url:MNG_PROCESS_GROUP_APPROVE,\r\n    //                         values:{\r\n    //                             list:onlineDisAgree,\r\n    //                             status:1\r\n    //                         },\r\n    //                         successCallback:()=>{\r\n    //                             alertBox({text:\"已完成处理\",severity:\"success\"})\r\n    //                             onClose()\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             })\r\n    //             if(onlineDisAgree.length!==0){\r\n    //                 let i=0\r\n    //                 onlineDisAgree.map((process,index)=>{\r\n    //                     if(index===0){//第一个\r\n    //                         postFetch({\r\n    //                             url:MNG_ADD_BULLETIN_URL,\r\n    //                             values:{\r\n    //                                 stuId:process.stuId,\r\n    //                                 title:\"你有任务延期申请未通过\",\r\n    //                                 content:\"你有任务延期申请未通过，请及时查看\"\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                     if(onlineDisAgree[i].stuId!==process.stuId){//此时就说明换了\r\n    //                         i=index\r\n    //                         postFetch({\r\n    //                             url:MNG_ADD_BULLETIN_URL,\r\n    //                             values:{\r\n    //                                 stuId:process.stuId,\r\n    //                                 title:\"你有任务延期申请未通过\",\r\n    //                                 content:\"你有任务延期申请未通过，请及时查看\"\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <Dialog open={open}  fullScreen TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Checkbox defaultChecked={false} onChange={(event, checked)=>{\r\n                        if(checked===true){\r\n                            onlineAgree.push(delayList)\r\n                            setCheck(true)\r\n                        }\r\n                        if(checked==false){\r\n                            onlineAgree=[]\r\n                            setCheck(false)\r\n                        }\r\n                    }} color=\"secondary\"/>全选\r\n\r\n                    <Typography align=\"center\" color=\"inherit\" className={classes.title}>\r\n                        批量处理学生任务延期申请\r\n                    </Typography>\r\n\r\n                    <Button autoFocus color=\"inherit\" onClick={()=>{\r\n                    }}>一键同意</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>申请人</TableCell>\r\n                        <TableCell align=\"center\">申请内容</TableCell>\r\n                        <TableCell align=\"center\">操作</TableCell>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {delayList.map((list)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">\r\n                                    <Checkbox defaultChecked={check} onChange={(event,checked)=>{\r\n                                        if(checked===true){\r\n                                            onlineAgree.push(list)\r\n                                        }\r\n                                        if(checked===false){\r\n                                            onlineAgree=onlineAgree.filter((a)=>{\r\n                                                return a.id!==list.id\r\n                                            })\r\n                                        }\r\n                                    }} />\r\n                                </TableCell>\r\n                                <TableCell>{list.stuName}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    【{list.stuName}】希望将【{list.category}】推迟到{list.wishYear}年{list.wishMonth}月\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        onClick={()=>{}}>同意</Button>\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        onClick={()=>{}}>不同意</Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\NavBar\\index.js",["954","955","956","957","958","959","960","961","962","963","964","965","966","967"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Users as UsersIcon,\r\n  Coffee as CoffeeIcon,\r\n  Server as ServerIcon,\r\n  BookOpen as BookOpenIcon,\r\n  Book as Book\r\n} from \"react-feather\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport NavItem from \"./NavItem\";\r\nimport {getUserInfo} from \"../../../service/userService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst groupLeaders=[ \"20110240046\",\"20110240048\"]\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const [userInfo,setUserInfo]=useState({})\r\n  const [seminarOpen, setSeminarOpen] = useState(false);\r\n  const [talkOpen,setTalkOpen]=useState(false)\r\n  const [userRoles, setUserRoles]=useState([])\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    getUserInfo().then((res)=>{\r\n      if(res?.success){\r\n        setUserInfo(res?.data)\r\n        setUserRoles([\r\n          {\r\n            right: res?.data?.roleId==0,\r\n            label: \"普通用户\",\r\n          },\r\n          {\r\n            right: res?.data?.isSystemMng==1,\r\n            label: \"系统管理员\",\r\n          },\r\n          {\r\n            right: res?.data?.isTalkMng==1,\r\n            label: \"讨论班管理员\",\r\n          },\r\n          {\r\n            right: res?.data?.isLabMng==1,\r\n            label: \"Lab管理员\",\r\n          },\r\n          {\r\n            right: res?.data?.isPaperMng==1,\r\n            label: \"推荐论文管理员\",\r\n          },\r\n          {\r\n            right: res?.data?.isEducateMng==1,\r\n            label: \"培养方案管理员\",\r\n          },\r\n          {\r\n            right: res?.data?.isDeviceMng==1,\r\n            label: \"设备管理员\",\r\n          },\r\n        ]);\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {userInfo.name}\r\n        </Typography>\r\n\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {userInfo.stuId}\r\n        </Typography>\r\n        {\r\n          userRoles.map((userRole)=>{\r\n            if(userRole.right){\r\n              return(\r\n                  <Typography color=\"textSecondary\" variant=\"body2\">\r\n                    {userRole.label}\r\n                  </Typography>\r\n              )\r\n            }\r\n          })\r\n        }\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          <NavItem\r\n            href=\"/app/userManagement\"\r\n            title=\"权限管理\"\r\n            icon={UsersIcon}\r\n          />\r\n\r\n          {userInfo.type===20? (\r\n              userInfo.stuId == \"07175\" ? (\r\n                  <NavItem\r\n                    href=\"/app/weeklyPublication/boss\"\r\n                    title=\"周报管理\"\r\n                    icon={Book}/>\r\n                  ):(\r\n                  <NavItem\r\n                      href=\"/app/weeklyPublication/mentor\"\r\n                      title=\"周报管理\"\r\n                      icon={Book}/>\r\n                  )\r\n          ):(\r\n              groupLeaders.indexOf(userInfo.stuId) == -1 ? (//等于-1，说明不是带组博士\r\n                  <NavItem\r\n                      href=\"/app/weeklyPublication/student\"\r\n                      title=\"周报管理\"\r\n                      icon={Book}\r\n                  />): (//否则，就是带组博士\r\n                      <NavItem\r\n                        href=\"/app/weeklyPublication/groupLeader\"\r\n                        title=\"周报管理\"\r\n                        icon={Book}/>)\r\n          )}\r\n\r\n\r\n          {userInfo.stuId == \"20110240048\" ? (\r\n              <NavItem\r\n                href=\"/app/lab/eliteStudent\"\r\n                title=\"Lab管理\"\r\n                icon={ServerIcon}\r\n                isToOutLink={true}/>\r\n              ):(\r\n              <NavItem\r\n                  href=\"/app/lab/normalStudent\"\r\n                  title=\"Lab管理\"\r\n                  icon={ServerIcon}\r\n                  isToOutLink={true}\r\n              />\r\n              )}\r\n\r\n          <NavItem\r\n              onClick={()=>setSeminarOpen(!seminarOpen)}\r\n              title=\"讨论班管理\"\r\n              icon={CoffeeIcon}\r\n              endIcon={seminarOpen? <ExpandLess/> : <ExpandMore/>}\r\n              nestedItem\r\n          />\r\n          <Collapse in={seminarOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <NavItem className={classes.nested} href=\"/app/recorderGroup\" title=\"分组安排\" icon={CoffeeIcon}/>\r\n              <NavItem className={classes.nested} href=\"/app/recorder\" title=\"导读安排\" icon={CoffeeIcon} />\r\n              <NavItem className={classes.nested} href=\"/app/seminar\" title=\"演讲安排\" icon={CoffeeIcon} />\r\n              <NavItem className={classes.nested} href=\"/app/essayRecommendation\" title=\"推荐论文管理\" icon={CoffeeIcon}/>\r\n              <NavItem className={classes.nested} href=\"/app/battle\" title=\"论文擂台赛\" icon={CoffeeIcon}/>\r\n            </List>\r\n          </Collapse>\r\n\r\n          <NavItem\r\n              onClick={()=>setTalkOpen(!talkOpen)}\r\n              title=\"培养方案管理\"\r\n              icon={BookOpenIcon}\r\n              endIcon={talkOpen? <ExpandLess/> : <ExpandMore/>}\r\n              nestedItem\r\n          />\r\n          <Collapse in={talkOpen} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {\r\n                (userInfo.type<20 ) && (//只有学生才能看到这个\r\n                    <NavItem className={classes.nested} href={`/app/updateStudentInfo/${userInfo.stuId}`} title=\"个人信息\" icon={BookOpenIcon}/>\r\n                  )\r\n              }\r\n\r\n              {\r\n                (userInfo.type==20 ?(\r\n                    <NavItem className={classes.nested} href=\"/app/studyPlan/score\" title=\"学生季度评分\" icon={BookOpenIcon}/>\r\n                ):(\r\n                    <NavItem className={classes.nested} href={`/app/studyPlan/stuScore/${userInfo.stuId}`} title=\"季度评分\" icon={BookOpenIcon}/>\r\n                ))\r\n              }\r\n              {\r\n                (userInfo.type===20 ?( //应该判断三种身份，老师，培养过程管理员和学生\r\n                    userInfo.isEducateMng===1?(\r\n                        <NavItem className={classes.nested} href=\"/app/studyPlan/baseInformation/mng\" title=\"学生培养过程\" icon={BookOpenIcon}/>\r\n                        ):(\r\n                        <NavItem className={classes.nested} href=\"/app/studyPlan/process\" title=\"学生培养过程\" icon={BookOpenIcon}/>\r\n                        )\r\n                ):(//学生\r\n                    <NavItem className={classes.nested} href={`/app/studyPlan/stuProcess/${userInfo.stuId}`} title=\"培养过程\" icon={BookOpenIcon}/>\r\n                ))\r\n              }\r\n\r\n            </List>\r\n          </Collapse>\r\n\r\n          <NavItem href=\"/app/device\" title=\"资源管理\" icon={SettingsIcon} />\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\lab\\dialog\\UploadLabWork.js",["968"],"import {Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function UploadLabWork(props){\r\n    const classes = useStyles()\r\n    const {open, onClose, labName} = props\r\n\r\n    return (\r\n        <Dialog open={open} className={classes.root}>\r\n            <DialogTitle>\r\n                提交Lab作业\r\n            </DialogTitle>\r\n\r\n            <Formik initialValues onSubmit={(values)=>{\r\n\r\n            }}>{({handleBlur, handleChange, handleSubmit, values})=>(\r\n                <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n                    <TextField\r\n                        select\r\n                        label=\"请选择Lab作业对应的Lab\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        SelectProps={{\r\n                            native:false\r\n                        }}\r\n                        value={values?.labName}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        onChange={(event)=>{\r\n                            values.labName=event.target.value\r\n                        }}>\r\n                        {labName.map((singleLabName)=>(\r\n                            <option key={singleLabName.name} value={singleLabName.name()}>\r\n                                {singleLabName.name}\r\n                            </option>\r\n                        ))}\r\n                    </TextField>\r\n\r\n                </form>\r\n            )}</Formik>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\SelectWeekDialog.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\DeviceApplyHistory.js",[],"E:\\fudan-secsys\\my-react\\src\\layouts\\DashoardLayout\\NavBar\\NavItem.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\lab\\dialog\\UploadLabData.js",["969","970","971","972"],"import {Box, Button, Dialog, DialogTitle, makeStyles, TextField} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {message, Upload} from \"antd\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport {UPLOAD_LAB_DATA} from \"../../../settings\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../base\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function UploadLabData(props){\r\n    const {open, publisher, onClose} = props\r\n    const classes = useStyles()\r\n    const [labName, setLabName]=useState(\"\")\r\n    const [disable, setDisable]=useState(true)\r\n    const [refresh, setRefresh]=useState(false)\r\n    const [labData, setLabData]=useState({})\r\n\r\n    useEffect(()=>{\r\n        labName == \"\" ? (\r\n            setDisable(true)\r\n        ):(\r\n            setDisable(false)\r\n        )\r\n    },[refresh])\r\n\r\n    // const uploadProps={\r\n    //     name:\"labFile\",\r\n    //     action: UPLOAD_LAB_DATA,\r\n    //     method:\"POST\",\r\n    //     data:{\r\n    //         labName:labName,\r\n    //         labPublisher:publisher.stuName,\r\n    //         labPublisherStuId:publisher.stuId\r\n    //     },\r\n    //     onChange (info){\r\n    //         if (info.file.status !== 'uploading') {\r\n    //             console.log(info.file, info.fileList);\r\n    //         }\r\n    //         if (info.file.status === 'done') {\r\n    //             alertBox({text:\"上传成功\",severity:\"success\"})\r\n    //             message.success(`${info.file.name} file uploaded successfully`);\r\n    //             setRefresh((prev)=>!prev)\r\n    //         } else if (info.file.status === 'error') {\r\n    //             alertBox({text:\"上传失败\",severity:\"error\"})\r\n    //             message.error(`${info.file.name} file upload failed.`);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <Dialog open={open} className={classes.root}>\r\n            <DialogTitle>\r\n                上传Lab资料\r\n            </DialogTitle>\r\n\r\n            <Formik onSubmit={()=>{\r\n                console.log(labData)\r\n                const cor = confirmModal({\r\n                    title:\"请确定好Lab名称和要上传的Lab资料\",\r\n                    handleCorfirm:()=>{\r\n                        cor.close()\r\n                        postFetch({\r\n                            url:UPLOAD_LAB_DATA,\r\n                            values:{\r\n                                labName: labName,\r\n                                labFile: labData,\r\n                                labPublisher: publisher.stuName,\r\n                                labPublisherStuId: publisher.stuId\r\n                            },\r\n                            successCallback:()=>{\r\n                                alertBox({text:\"上传成功\",severity:\"success\"})\r\n                                onClose()\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n            }}\r\n                    >{({handleBlur, handleSubmit})=>(\r\n                <form className=\"dialogForm\"  onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                    <TextField\r\n                        label=\"请输入Lab名称\"\r\n                        fullWidth\r\n                        placeholder=\"必填\"\r\n                        margin=\"normal\"\r\n                        name=\"labName\"\r\n                        value={labName}\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={(event)=>{\r\n                            setLabName(event.target.value)\r\n                            setRefresh((p)=>!p)\r\n                        }}\r\n                    />\r\n\r\n                    <TextField\r\n                        label=\"请选择Lab资料\"\r\n                        fullWidth\r\n                        InputLabelProps={{shrink:true}}\r\n                        margin=\"normal\"\r\n                        name=\"labData\"\r\n                        onBlur={handleBlur}\r\n                        type=\"file\"\r\n                        onChange={(event)=>{\r\n                            setLabData(event.target.files[0])\r\n                        }}/>\r\n\r\n                    <Box my={2}>\r\n                            <Button\r\n                                disabled={disable}\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                variant=\"outlined\"\r\n                                type=\"submit\"\r\n                            ><UploadOutlined/>上传</Button>\r\n\r\n                        <Button\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                            onClick={()=>{onClose()}}\r\n                            >关闭</Button>\r\n                    </Box>\r\n\r\n                </form>\r\n            )}</Formik>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\cultivationMenu\\process\\processForm\\ProcessForTeachApprove.js",["973","974","975","976","977","978","979","980","981"],"import {\r\n    AppBar, Box, Button,\r\n    Dialog,\r\n    DialogTitle, Divider, IconButton,\r\n    makeStyles, Slide,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Formik} from \"formik\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {Checkbox, List, Toolbar} from \"@mui/material\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../../base\";\r\nimport {MNG_ADD_BULLETIN_URL, MNG_PROCESS_GROUP_APPROVE} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nexport default function ProcessForTeachApprove(props){//导师批量批准\r\n    const classes=useStyles()\r\n    const {open, onClose, approveList}=props\r\n\r\n    const Transition = React.forwardRef(function Transition(props, ref) {\r\n        return <Slide direction=\"up\" ref={ref} {...props} />;\r\n    });\r\n\r\n    let onlineAgree=approveList//这个的意思是导师同意的任务，因为默认是全选，所以默认同意的任务是全部\r\n    let onlineDisAgree=[]//这个的意思就是导师不同意的任务\r\n\r\n    const handleAgree=()=>{\r\n        const cor=confirmModal({\r\n            title:\"未勾选的任务默认为不同意，确认要提交吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({//首先先给同意的发\r\n                    url: MNG_PROCESS_GROUP_APPROVE ,\r\n                    values:{\r\n                        list:onlineAgree,\r\n                        status:3,//同意的missionStatus是3\r\n                    },\r\n                    successCallback:()=>{\r\n                        postFetch({\r\n                            url: MNG_PROCESS_GROUP_APPROVE,\r\n                            values:{\r\n                                list:onlineDisAgree,\r\n                                status:1\r\n                            },\r\n                            successCallback:()=>{\r\n                                alertBox({text:\"已完成处理\",severity:\"success\"})\r\n                                onClose()\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                if(onlineDisAgree.length!==0){\r\n                    let i=0\r\n                    onlineDisAgree.map((process,index)=>{\r\n                        if(index===0){//第一个\r\n                            postFetch({\r\n                                url:MNG_ADD_BULLETIN_URL,\r\n                                values:{\r\n                                    stuId:process.stuId,\r\n                                    title:\"你有任务完成申请未通过\",\r\n                                    content:\"你有任务完成申请未通过，请及时查看\"\r\n                                }\r\n                            })\r\n                        }\r\n                        if(onlineDisAgree[i].stuId!==process.stuId){//此时就说明换了\r\n                            i=index\r\n                            postFetch({\r\n                                url:MNG_ADD_BULLETIN_URL,\r\n                                values:{\r\n                                    stuId:process.stuId,\r\n                                    title:\"你有任务完成申请未通过\",\r\n                                    content:\"你有任务完成申请未通过，请及时查看\"\r\n                                }\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open}  fullScreen TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography align=\"center\" color=\"inherit\" className={classes.title}>\r\n                        批量处理学生申请\r\n                    </Typography>\r\n\r\n                    <Button autoFocus color=\"inherit\" onClick={()=>{\r\n                        handleAgree()\r\n                    }}>同意</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box>\r\n                <Table>\r\n                    <TableBody>\r\n                        {approveList.map((list)=>(\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">\r\n                                    <Checkbox defaultChecked={true} onChange={(event,checked)=>{\r\n                                        if(checked===true){\r\n                                            onlineAgree.push(list)\r\n                                            onlineDisAgree=onlineDisAgree.filter((a)=>{\r\n                                                return a.id!==list.id\r\n                                            })\r\n                                        }\r\n                                        if(checked===false){\r\n                                            onlineAgree=onlineAgree.filter((a)=>{\r\n                                                return a.id!==list.id\r\n                                            })\r\n                                            onlineDisAgree.push(list)\r\n                                        }\r\n                                    }}/>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    【{list.stuName}】提交了【{list.category}】的完成申请\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\PublicationComment.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\dialog\\EditPublicationComment.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\userManagemet\\UserManage.js",["982","983","984","985","986","987","988","989","990","991","992"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography, TextField,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport corfirmModal from \"src/components/ConfirmModal\";\r\nimport {RoleName, DELETE_USER_URL, MNG_RESET_PASSWORD_URL, MNG_GET_PROCESS_LIST} from \"src/settings\";\r\nimport ProcessAlert, {getAllUser, getProcessAlert} from \"src/service/userService\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport {deleteFetch, formFetch} from \"src/base\";\r\nimport UserManageForm from \"./UserManageForm\";\r\nimport ContentStyle from \"../../components/Style/ContentStyle\";\r\n\r\nconst UserManage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const classes = ContentStyle()\r\n  const [open, setOpen] = React.useState(false);\r\n  const { userInfo } = useContext(UserContext);\r\n  const [page, setPage] = useState(1);\r\n  const [pageNo, setPageNo] = useState(0);\r\n  const [editOpen, setEditOpen]=useState(false);\r\n  const [stuId, setStuId]=useState(\"\");\r\n  const [name, setName]=useState(\"\");\r\n  const [alertOpen,setAlertOpen]=useState(false)\r\n  const [processDetail,setProcessDetail]=useState({})\r\n\r\n  const handleOpen = () => {//打开一个窗口\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setRefresh(prev => !prev);\r\n  };\r\n\r\n  const handleResetPassWd=(id,name)=>{//重置密码\r\n    const cor=corfirmModal({\r\n      title: `确定要重置[${name}]的密码吗？`,\r\n      handleCorfirm:()=>{\r\n        cor.close();\r\n        formFetch({\r\n          url: `${MNG_RESET_PASSWORD_URL}?id=${id}`,\r\n          successCallback:()=>{\r\n            setRefresh((prev) => !prev);\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleDeleteUser = (id, name) => {//删除用户\r\n    const cor = corfirmModal({\r\n      title: `确定要删除[${name}]吗？`,\r\n      handleCorfirm: () => {\r\n        cor.close();\r\n        deleteFetch({\r\n          url: `${DELETE_USER_URL}?id=${id}`,\r\n          values: { id },\r\n          successCallback: () => {\r\n            setRefresh((prev) => !prev);\r\n          },\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  // useEffect(getAllUser,[]);\r\n  useEffect(() => {\r\n    fetch(`${MNG_GET_PROCESS_LIST}?stuId=${userInfo.stuId}`)//获得提示\r\n        .then((res)=>res.json())\r\n        .catch((error)=>console.log(error))\r\n        .then((res)=>{\r\n          res?.data.map((re)=> {\r\n            if(re.alert===1){//这个月有需要完成的任务\r\n              setProcessDetail(re)\r\n              setAlertOpen(true)\r\n            }\r\n            if(re.missionStatus===0){//已经逾期\r\n              setProcessDetail(re)\r\n              setAlertOpen(true)\r\n            }\r\n          })\r\n        })\r\n    getAllUser({ page, name }).then((res) => {\r\n      setUsers(res.data || []);\r\n      setPageNo(Math.ceil(res?.paging?.total / 10) || 0);\r\n    });\r\n  }, [refresh, page, name]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Box className={classes.header}>\r\n          <Typography color=\"textPrimary\" size=\"small\">\r\n            用户管理\r\n          </Typography>\r\n\r\n          {(userInfo.isSystemMng==1) && //检验是否拥有系统管理员权限\r\n\r\n              (<TextField\r\n                  label=\"搜索用户\"\r\n                  size=\"small\"\r\n                  onChange={(e)=>{\r\n                    setPage(1)\r\n                    setName(e.target.value)}}\r\n              />)}\r\n\r\n          {(userInfo.isSystemMng==1) && (\r\n              <Button\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onClick={handleOpen}\r\n              >\r\n                添加新用户\r\n              </Button>\r\n          )}\r\n\r\n        </Box>\r\n\r\n        <Divider />\r\n        {/* <PerfectScrollbar> */}\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>姓名</TableCell>\r\n                <TableCell>学/工号</TableCell>\r\n                <TableCell>角色</TableCell>\r\n                {(userInfo.isSystemMng==1)&& (//依然是检验权限\r\n                  <TableCell align=\"center\">操作</TableCell>\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {users.map((user) => (\r\n                <TableRow hover key={user.id}>\r\n                  <TableCell>{user.name}</TableCell>\r\n                  <TableCell>{user.stuId}</TableCell>\r\n                  <TableCell>{RoleName[user.roleId]}</TableCell>\r\n                  {(userInfo.isSystemMng==1) && (\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"text\"\r\n                        href={`/app/updateUserInfo/${user.stuId}`}\r\n                      >\r\n                        编辑\r\n                      </Button>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"text\"\r\n                        onClick={(e) => handleDeleteUser(user.id, user.name)}\r\n                      >\r\n                        删除\r\n                      </Button>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        size=\"size\"\r\n                        variant=\"text\"\r\n                        onClick={(e)=>handleResetPassWd(user.id,user.name)}\r\n                        >\r\n                        重置密码\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          {pageNo > 1 && (\r\n            <Pagination\r\n              className={classes.Pagination}\r\n              count={pageNo}\r\n              color=\"primary\"\r\n              onChange={(e, i) => setPage(i)}\r\n            />\r\n          )}\r\n        </Box>\r\n        {/* </PerfectScrollbar> */}\r\n      </Card>\r\n      <UserManageForm open={open} onClose={handleClose} />\r\n\r\n      <ProcessAlert processDetail={processDetail} open={alertOpen} onClose={()=>{\r\n        setAlertOpen(false)\r\n        setRefresh((p)=>!p)\r\n      }}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManage;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\student\\WeeklyPublicationAllTime.js",["993","994"],"import ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {STU_GET_PUBLICATION} from \"../../../settings\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PublicationComment from \"../dialog/PublicationComment\";\r\nimport {TextField} from \"@mui/material\";\r\n\r\nexport default function WeeklyPublicationAllTime(props){\r\n    const classes=ContentStyle()\r\n    const {userInfo}=props\r\n    const history = useHistory()\r\n    const [page, setPage]=useState(1)\r\n    const [pageNo, setPageNo]=useState(0)\r\n    const [refresh, setRefresh]=useState(false)\r\n    const [weeklyPublication, setWeeklyPublication]=useState([])\r\n    const [open, setOpen]=useState(false)\r\n    const [publication,setPublication]=useState({})\r\n\r\n    const getPublication = async ({stuId, page=1,limit})=>{\r\n        try{\r\n            let response = await fetch(\r\n                `${STU_GET_PUBLICATION}?stuId=${stuId}&limit=${limit}&offset=${(page-1)*limit}`\r\n            )\r\n            return response.json()\r\n        }catch (error){\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getPublication({stuId:userInfo.stuId, page, limit:4})\r\n            .then((res)=>{\r\n                setWeeklyPublication(res?.data || [])\r\n                setPageNo(Math.ceil(res?.paging?.total/4) || 0)\r\n            })\r\n    },[refresh, page, pageNo])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        {userInfo.name}的周报模块\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            history.goBack()\r\n                        }}>返回</Button>\r\n                </Box>\r\n\r\n                <Divider/>\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>对应周数</TableCell>\r\n                                <TableCell align=\"center\">Target</TableCell>\r\n                                <TableCell align=\"center\">OutlinedAchievements</TableCell>\r\n                                <TableCell align=\"center\">Achievements</TableCell>\r\n                                <TableCell align=\"center\">Plan</TableCell>\r\n                                <TableCell align=\"center\">评分</TableCell>\r\n                                <TableCell align=\"center\">评语</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {weeklyPublication.map((publication)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{publication.week}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TextField\r\n                                            style={{\r\n                                                fontSize:\"smaller\"\r\n                                            }}\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            value={publication.target}/>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TextField\r\n                                            style={{\r\n                                                fontSize:\"smaller\"\r\n                                            }}\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            value={publication.outlinedAchievements}/>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TextField\r\n                                            style={{\r\n                                                fontSize:\"smaller\"\r\n                                            }}\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            value={publication.achievements}/>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TextField\r\n                                            style={{\r\n                                                fontSize:\"smaller\"\r\n                                            }}\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            maxRows={4}\r\n                                            value={publication.plan}/>\r\n                                    </TableCell>\r\n                                    <TableCell>{publication.score}</TableCell>\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                setOpen(true)\r\n                                                setPublication(publication)\r\n                                            }}>查看评语</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                )\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n\r\n                {pageNo>1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}/>\r\n                )}\r\n\r\n            </Card>\r\n\r\n            <PublicationComment open={open}\r\n                                onClose={()=>{\r\n                                    setOpen(false)\r\n                                    setPublication({})\r\n                                }}\r\n                                publication={publication}/>\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\device\\DeviceNormal.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\essayRecommendation\\EssayRecommendation.js",["995","996","997","998","999"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Button, Card,\r\n  Divider,\r\n  Table, TableBody, TableCell,\r\n  TableHead, TableRow,\r\n  TextField, Typography\r\n} from \"@material-ui/core\";\r\nimport {DELETE_ARTICLE_URL, GET_ALL_ARTICLE_URL, GET_ALL_CLASS_URL} from \"src/settings\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport EssayEditForm from \"./EssayEditForm\";\r\nimport corfirmModal from \"../../../components/ConfirmModal\";\r\nimport {deleteFetch} from \"../../../base\";\r\nimport ContentStyle from \"../../../components/Style/ContentStyle\";\r\n\r\nconst EssayRecommendation=()=> {\r\n  const classes = ContentStyle()\r\n  const { userInfo } = useContext(UserContext);\r\n  const [refresh, setRefresh]=useState(false);\r\n  const [page, setPage]=useState(1);\r\n  const [pageNo, setPageNo]=useState(0);\r\n  const [article, setArticle]=useState([]);\r\n  const [open, setOpen]=useState(false); //用来判断是否打开编辑框\r\n  const [articleDetail, setArticleDetail]=useState({});\r\n\r\n  const getAllArticle=async ({page=1, limit=10})=>{ //获得已发布的所有文章信息\r\n    try{\r\n      let response =await fetch(\r\n          `${GET_ALL_ARTICLE_URL}?limit=${limit}&offset=${(page - 1) * 10}`\r\n      );\r\n      return await response.json();\r\n    }catch (error){\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleDeleteEssays = (id, name) => {//删除文章\r\n    const cor = corfirmModal({\r\n      title: `确定要删除[${name}]吗？`,\r\n      handleCorfirm: () => {\r\n        cor.close();\r\n        deleteFetch({\r\n          url: `${DELETE_ARTICLE_URL}?id=${id}`,\r\n          successCallback: () => {\r\n            setRefresh((prev) => !prev);\r\n          },\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    getAllArticle({page}).then((res)=>{\r\n      setArticle(res?.data || []);\r\n      setPageNo(Math.ceil(res?.paging?.total /10) || 0);\r\n    })\r\n  },[refresh, page, pageNo])\r\n\r\n  return (\r\n      <div>\r\n        <Card>\r\n        <Box className={classes.header}>\r\n          <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n            论文演讲安排\r\n          </Typography>\r\n\r\n          {userInfo.isPaperMng ==1 &&( //推荐论文管理员可以添加论文\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onClick={()=>{\r\n                    setOpen(true)\r\n                  }}\r\n                  >\r\n                  添加论文\r\n                </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Box minWidth={800}>\r\n        <Table>\r\n\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>论文演讲时间</TableCell>\r\n              <TableCell align=\"center\">论文名称</TableCell>\r\n              <TableCell align=\"center\">论文链接</TableCell>\r\n              {userInfo.isPaperMng ==1 &&(\r\n                  <TableCell align=\"center\">操作</TableCell>\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {article.map((art)=>(\r\n                <TableRow >\r\n                  <TableCell>{art.date}</TableCell>\r\n                  <TableCell align=\"center\">{art.title}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <a href={art.content}>{art.content}</a>\r\n                  </TableCell>\r\n                  {userInfo.isPaperMng ==1 &&(\r\n                      <TableCell align=\"center\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"text\"\r\n                            onClick={()=>{\r\n                              setOpen(true)\r\n                              setArticleDetail(art)\r\n                            }}\r\n                        >\r\n                          编辑\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"text\"\r\n                            onClick={()=>{\r\n                              handleDeleteEssays(art.id, art.title)\r\n                            }}\r\n                        >\r\n                          删除\r\n                        </Button>\r\n                      </TableCell>\r\n                  )}\r\n                </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n          {pageNo > 1 && (\r\n              <Pagination\r\n                  className={classes.Pagination}\r\n                  count={pageNo}\r\n                  color=\"primary\"\r\n                  onChange={(e, i) => setPage(i)}\r\n              />\r\n          )}\r\n        </Box>\r\n        </Card>\r\n        <EssayEditForm\r\n          open={open}\r\n          onClose={()=>{\r\n            setOpen(false)\r\n            setArticleDetail({})\r\n            setRefresh((prev)=>!prev)\r\n          }}\r\n          articleDetail={articleDetail}\r\n          />\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default EssayRecommendation;\r\n\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarHead.js",["1000","1001"],"import {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport SeminarForMaster from \"./seminarMng/SeminarForMaster\";\r\nimport SeminarForDoc from \"./seminarMng/SeminarForDoc\";\r\nimport PageView from \"../../../components/Style/PageView\";\r\nimport TabPanel from \"../../../components/TabPanel\";\r\n\r\nconst SeminarHead=()=>{\r\n  const classes=PageView()\r\n  const [value,setValue]=useState(0)\r\n\r\n  const handleChanged=(e,newValue)=>{\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n      <Paper className={classes.root}>\r\n        <AppBar position=\"static\" color=\"secondary\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChanged}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n          >\r\n            <Tab label=\"论文演讲安排\" {...a11yProps(0)}/>\r\n            <Tab label=\"专题选讲\" {...a11yProps(1)}/>\r\n          </Tabs>\r\n        </AppBar>\r\n\r\n        <TabPanel index={0} value={value}>\r\n          <SeminarForMaster />\r\n        </TabPanel>\r\n\r\n        <TabPanel index={1} value={value}>\r\n          <SeminarForDoc />\r\n        </TabPanel>\r\n      </Paper>\r\n  )\r\n}\r\n\r\nexport default  SeminarHead;\r\n\r\n\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\teacher\\WeeklyPublicationForTea.js",["1002","1003","1004","1005","1006"],"import {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {MENTOR_GET_PUBLICATION, MENTOR_STATISTICS_PUBLICATION, UPDATE_WEEKLYPUBLICATION} from \"../../../settings\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PublicationComment from \"../dialog/PublicationComment\";\r\nimport EditPublicationComment from \"../dialog/EditPublicationComment\";\r\nimport {postFetch} from \"../../../base\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport WeeklyPublicationDialog from \"../dialog/WeeklyPublicationDialog\";\r\nimport UndoneStudentDialog from \"../dialog/UndoneStudentDialog\";\r\nimport ContentStyleForPage from \"../../../components/Style/ContentStyleForPage\";\r\n\r\nexport default function WeeklyPublicationForTea(props){\r\n    const getWeek=()=>{//获取现在是今年的第几周\r\n        const today = new Date();\r\n        let firstDayOfYear = new Date(today.getFullYear(), 0, 1);\r\n        const dayOfWeek = firstDayOfYear.getDay();\r\n        let spendDay = 1;\r\n        if (dayOfWeek != 0) {\r\n            spendDay = 7 - dayOfWeek + 1;\r\n        }\r\n        firstDayOfYear = new Date(today.getFullYear(), 0, spendDay);\r\n        const d = Math.ceil((today.valueOf() - firstDayOfYear.valueOf()) / 86400000);\r\n        return Math.ceil(d / 7)\r\n    }\r\n    const {userInfo}=props\r\n    const yearNum=new Date().getFullYear()\r\n    const weekNum=getWeek()\r\n    const classes=ContentStyle()\r\n    const [week,setWeek]=useState(yearNum+\"-W\"+(weekNum<10 ? \"0\"+weekNum : weekNum))\r\n    const [weeklyPublication, setWeeklyPublication]=useState([])\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [editOpen,setEditOpen]=useState(false)\r\n    const [open,setOpen]=useState(false)\r\n    const [publicationOpen, setPublicationOpen]=useState(false)\r\n    const [publication,setPublication]=useState({})//查看评论或者修改评论的周报文件\r\n    const [undoneCount, setUndoneCount]=useState(0)\r\n    const [undoneList,setUndoneList]=useState([])\r\n    const [undoneListOpen, setUndoneListOpen]=useState(false)\r\n\r\n    const mentorGetWeeklyPublication=async ({stuName=userInfo.name, page=1, limit, week})=>{\r\n        try{\r\n            let response=await fetch(\r\n                `${MENTOR_GET_PUBLICATION}?stuName=${stuName}&week=${week}&limit=${limit}&offset=${(page-1)*limit}`\r\n            );\r\n            return response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const mentorStatistics=({stuName, week})=>{\r\n        fetch(`${MENTOR_STATISTICS_PUBLICATION}?stuName=${stuName}&week=${week}`,{method:\"GET\"})\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((res)=>{\r\n                setUndoneCount(res.data.unDoneCount)\r\n                setUndoneList(res.data.unDoneStudentList)\r\n            })\r\n    }\r\n\r\n    const handleScoreChange=(publication, score)=>{\r\n        const cor=confirmModal({\r\n            title:\"确认要修改周报评分吗？\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                postFetch({\r\n                    url:UPDATE_WEEKLYPUBLICATION,\r\n                    values:{\r\n                        id:publication.id,\r\n                        score:score\r\n                    },\r\n                    successCallback:()=>{\r\n                        setRefresh((p)=>!p)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getNameLine=()=>{\r\n        let nameLine=\"\"\r\n        undoneList.map((l,index)=>{\r\n            let s= index==0 ? l.name : \"，\"+l.name\r\n            nameLine=nameLine+s\r\n        })\r\n        return nameLine\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const year= parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        mentorStatistics({stuName:userInfo.name, week:\"第\"+year+\"年第\"+weekNum+\"周\"})\r\n    },[week])\r\n\r\n    useEffect(()=>{\r\n        const year= parseInt(week.slice(0,4))\r\n        const weekNum=parseInt(week.slice(6))\r\n        mentorGetWeeklyPublication({stuName:userInfo.name, page, limit:10, week:\"第\"+year+\"年第\"+weekNum+\"周\"}).then((res)=>{\r\n            setWeeklyPublication(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total/10) || 0)\r\n        })\r\n    },[refresh, page, pageNo, week])\r\n\r\n    return (\r\n        <div className={ContentStyleForPage().root}>\r\n                <div className={ContentStyleForPage().header}>\r\n                    <Typography color=\"textPrimary\" size=\"large\" component=\"h2\">\r\n                        学生周报\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        label=\"请选择周数\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        margin=\"normal\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        value={week}\r\n                        onChange={(event)=>{\r\n                            setWeek(event.target.value)\r\n                        }}\r\n                        type=\"week\"\r\n                        variant=\"outlined\"/>\r\n\r\n                </div>\r\n            <br/>\r\n\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        该周未交周报的人数：{undoneCount}\r\n                    </Typography>\r\n\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        该周未交周报名单：{getNameLine()}\r\n                    </Typography>\r\n            <br/>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>学生姓名</TableCell>\r\n                                <TableCell align=\"center\">该周周报提交时间</TableCell>\r\n                                <TableCell align=\"center\">周报</TableCell>\r\n                                <TableCell align=\"center\">周报评分</TableCell>\r\n                                <TableCell align=\"center\">周报评语</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {weeklyPublication.map((publication)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{publication.stuName}</TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        publication.date ? (publication.date) : (\r\n                                            \"暂未上传周报\"\r\n                                        )\r\n                                    }</TableCell>\r\n                                    {publication.target ?(\r\n                                        <TableCell align=\"center\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    setPublicationOpen(true)\r\n                                                    setPublication(publication)\r\n                                                }}\r\n                                            >查看周报内容</Button>\r\n                                        </TableCell>\r\n                                    ):(\r\n                                        <TableCell align=\"center\">暂未上传</TableCell>\r\n                                    )}\r\n                                    <TableCell align=\"center\">\r\n                                        {publication.target ? (\r\n                                            <TextField\r\n                                                select\r\n                                                size=\"small\"\r\n                                                value={publication.score? publication.score: 0}\r\n                                                variant=\"outlined\"\r\n                                                onChange={(e)=>{\r\n                                                    handleScoreChange(publication,parseInt(e.target.value))\r\n                                                }}\r\n                                                SelectProps={{native:true}}\r\n                                            >\r\n                                                <option value={0}>0</option>\r\n                                                <option value={1}>1</option>\r\n                                                <option value={2}>2</option>\r\n                                                <option value={3}>3</option>\r\n                                                <option value={4}>4</option>\r\n                                                <option value={5}>5</option>\r\n                                            </TextField>\r\n                                        ): \"暂未上传周报\"}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {publication.target ? (\r\n                                            <>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        setEditOpen(true)\r\n                                                        setPublication(publication)\r\n                                                    }}\r\n                                                >{publication.comment ? \"修改评语\" : \"添加评语\"}</Button>\r\n\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={()=>{\r\n                                                        setOpen(true)\r\n                                                        setPublication(publication)\r\n                                                    }}\r\n                                                >查看周报评语</Button>\r\n                                            </>\r\n                                        ): \"暂未上传周报\"}\r\n\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            href={`/app/weeklyPublication/${publication.stuId}`}\r\n                                        >查看学生所有周报</Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n\r\n                {pageNo>1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}\r\n                    />\r\n                )}\r\n\r\n            <EditPublicationComment open={editOpen}\r\n                                    onClose={()=>{\r\n                                        setEditOpen(false)\r\n                                        setPublication({})\r\n                                        setRefresh((p)=>!p)\r\n                                    }}\r\n                                    publication={publication}/>\r\n\r\n            <PublicationComment open={open}\r\n                                onClose={()=>{\r\n                                    setOpen(false)\r\n                                    setPublication({})\r\n                                    setRefresh((p)=>!p)\r\n                                }}\r\n                                publication={publication}/>\r\n\r\n            <WeeklyPublicationDialog open={publicationOpen}\r\n                                     onClose={()=>{\r\n                                         postFetch({\r\n                                             url:UPDATE_WEEKLYPUBLICATION,\r\n                                             values:{\r\n                                                 id:publication.id,\r\n                                                 isRead:1\r\n                                             },\r\n                                             successCallback:()=>{\r\n\r\n                                             }\r\n                                         })\r\n                                         setPublicationOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)\r\n                                     }}\r\n                                     weeklyPublication={publication}/>\r\n\r\n            <UndoneStudentDialog open={undoneListOpen}\r\n                                 list={undoneList}\r\n                                 onClose={()=>{\r\n                                     setUndoneListOpen(false)\r\n                                 }}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\trainingScheme\\TrainingScheme.js",["1007","1008","1009"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\r\nimport { GET_ALL_CLASS_URL } from \"src/settings\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport CatalogCard from \"../../components/CatalogCard\";\r\nimport cookie from \"react-cookies\";\r\nimport NewClassForm from \"../../components/NewClassForm\";\r\nimport NewArticleForm from \"../../components/NewArticleForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    \"& button\": {\r\n      marginInline: 8,\r\n    },\r\n  },\r\n}));\r\nexport default function TrainingScheme() {\r\n  const classes = useStyles();\r\n  const [datas, setDatas] = useState([]);\r\n  const [open_class, setOpen_class] = useState(false);\r\n  const [open_article, setOpen_article] = useState(false);\r\n  const { userInfo } = useContext(UserContext);\r\n\r\n  const handleOpen_class = () => {\r\n    setOpen_class(true);\r\n  };\r\n\r\n  const handleClose_class = () => {\r\n    setOpen_class(false);\r\n    getEssayCatalog();\r\n  };\r\n  const handleOpen_article = () => {\r\n    setOpen_article(true);\r\n  };\r\n  const handleClose_article = () => {\r\n    setOpen_article(false);\r\n    getEssayCatalog();\r\n  };\r\n\r\n  const getEssayCatalog = () => {\r\n    fetch(GET_ALL_CLASS_URL + \"?tag=1\", {})\r\n      .then((res) => res.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDatas(response?.data || []);\r\n      });\r\n  };\r\n  useEffect(getEssayCatalog, []);\r\n  return (\r\n    <div>\r\n      {(userInfo.roleId == 10 || userInfo.roleId == 50) && (\r\n        <Box className={classes.toolbar}>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            variant=\"contained\"\r\n            onClick={handleOpen_class}\r\n          >\r\n            新建类别\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            variant=\"contained\"\r\n            onClick={handleOpen_article}\r\n          >\r\n            新建文章\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {datas.map((item) => (\r\n        <CatalogCard\r\n          key={item.id}\r\n          data={item}\r\n          refresh={getEssayCatalog}\r\n          userRoleId={userInfo.roleId}\r\n          authType={4}\r\n        ></CatalogCard>\r\n      ))}\r\n      <NewClassForm\r\n        open={open_class}\r\n        onClose={handleClose_class}\r\n        tag={1}\r\n      ></NewClassForm>\r\n      <NewArticleForm\r\n        open={open_article}\r\n        onClose={handleClose_article}\r\n        classes={datas}\r\n      ></NewArticleForm>\r\n    </div>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\battle\\Battle.js",["1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021"],"import ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../layouts/Context\";\r\nimport {MinusSquareOutlined, PlusSquareOutlined} from \"@ant-design/icons\";\r\nimport {getAllLeader, getAllRecorder} from \"../../../service/userService\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\nimport {postFetch} from \"../../../base\";\r\nimport {ADD_SEMINAR_URL, GET_ALL_SEMINAR_URL, MNG_ADD_BULLETIN_URL, UPDATE_BATTLE__URL} from \"../../../settings\";\r\n\r\n\r\n\r\nfunction ascCompare(property){//从小到大排序\r\n    return function (a,b){\r\n        let value1=a[property]\r\n        let value2=b[property]\r\n        return value1-value2\r\n    }\r\n}\r\n\r\nexport default function Battle(){\r\n    const classes=ContentStyle()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [recorder,setRecorder]=useState([]) //recorder中包含了所有的东西，包括组名和基础分数，所以直接用recorder就行\r\n    const [battlePermission,setBattlePermission]=useState(true) //默认一开始都是可以评分的\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [defend,setDefend]=useState(\"\") //守擂的组号\r\n\r\n    const getSeminar=()=>{ //上次讲过论文的组这周守擂，这个方法的目的是获取上次讲论文的那个组\r\n        fetch(`${GET_ALL_SEMINAR_URL}?limit=2`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((response)=>{\r\n                setDefend(response?.data[1]?.groupId)\r\n            })\r\n    }\r\n\r\n    const handleAdd=(rec)=>{ //处理加分情况\r\n        let newRecorder=[]\r\n        recorder.map((re)=>{\r\n            if(re.id==rec.id){ //如果两个的id值相等\r\n                re.baseScore++\r\n                newRecorder.push(re)\r\n            }\r\n            else {//两个id不等，直接push进去\r\n                newRecorder.push(re)\r\n            }\r\n        })\r\n        setRecorder(newRecorder)\r\n    }\r\n\r\n    const handleSub=(rec)=>{ //处理减分情况\r\n        let newRecorder=[]\r\n        recorder.map((re)=>{\r\n            if(re.id==rec.id){ //如果两个的id值相等\r\n                re.baseScore--\r\n                newRecorder.push(re)\r\n            }\r\n            else {//两个id不等，直接push进去\r\n                newRecorder.push(re)\r\n            }\r\n        })\r\n        setRecorder(newRecorder)\r\n    }\r\n\r\n    const handleSubmit=()=>{ //将battle的分数提交\r\n        if(userInfo.status!=1){ //如果用户不是博士，无法进行评分，这个在后面会改\r\n            alertBox({text:\"无权进行battle评分\",severity:\"error\"})\r\n            return\r\n        }\r\n        if(!battlePermission){ //如果这一轮已经评分过了，就不会重复提交\r\n            alertBox({text:\"这一轮已经评分已经结束了\",severity:\"error\"})\r\n            return\r\n        }\r\n        const cor=confirmModal({\r\n            title:\"确定要提交battle评分吗？确定之后不可修改\",\r\n            handleCorfirm:()=>{\r\n                cor.close()\r\n                const newRecorder=recorder.filter((rec)=>{ //过滤掉守擂组的所有组\r\n                    return rec.groupId!=parseInt(defend)\r\n                })\r\n                newRecorder.sort(ascCompare(\"baseScore\"))//将recorder内容按照baeScore从小到大排序\r\n                postFetch({//增加演讲安排\r\n                    url:ADD_SEMINAR_URL,\r\n                    values:{\r\n                        groupId:newRecorder[0].groupId\r\n                    }\r\n                })\r\n                postFetch({ //设置这一组battle为已经battle过\r\n                    url:UPDATE_BATTLE__URL,\r\n                    values:{\r\n                        id:recorder[0].id\r\n                    },\r\n                    successCallback:()=>{\r\n                        alertBox({text:\"评分成功\",severity:\"success\"})\r\n                        setRefresh((prev)=>!prev)\r\n                    }\r\n                })\r\n                getAllLeader().then((res)=>{ //向输了的组的组长发送通知\r\n                    postFetch({\r\n                        url:MNG_ADD_BULLETIN_URL,\r\n                        values:{\r\n                            stuId:res?.data.find((leader)=>leader.groupId==newRecorder[0].groupId).stuId,\r\n                            title:\"下周论文论文演讲组为[\"+newRecorder[0].groupId+\"]组\",\r\n                            content:\"很遗憾，下周的论文需要由你们组准备，请及时选出论文演讲人员\"\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllRecorder({limit:4}).then((res)=>{\r\n            if(res?.data[0].isBattle==1){//如果isBattle的值为0，就标明还没有进行过battle，那么就可以上传battle分数，反之则不能\r\n                //可行\r\n                setBattlePermission(false)\r\n            }\r\n            setRecorder(res?.data || [])\r\n        })\r\n        getSeminar()\r\n    },[refresh])\r\n\r\n    return　(\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        battle计分\r\n                    </Typography>\r\n\r\n                    {userInfo.status==1 && <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        守擂组：\r\n                        <TextField\r\n                            value={defend}\r\n                            onChange={(e)=>{\r\n                                setDefend(e.target.value)\r\n                            }}\r\n                        >\r\n                            {defend}\r\n                        </TextField>\r\n                    </Typography>\r\n                    }\r\n\r\n\r\n                    {(userInfo.status==1 &&recorder!=[]) &&(\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{\r\n                                handleSubmit()\r\n                            }}\r\n                        >提交</Button>\r\n                    )}\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>组号</TableCell>\r\n                                <TableCell align=\"center\">分数</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <Divider/>\r\n\r\n                        {userInfo.status==1 && (\r\n                            <TableBody>\r\n                                {recorder.map((rec)=>(\r\n                                    <TableRow>\r\n                                        <TableCell>{rec.groupId}</TableCell>\r\n                                        <TableCell align=\"center\">{rec.baseScore}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"large\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{\r\n                                                    handleAdd(rec)\r\n                                                }}\r\n                                            ><PlusSquareOutlined /></Button>\r\n\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"large\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{\r\n                                                    handleSub(rec)\r\n                                                }}\r\n                                            ><MinusSquareOutlined /></Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        )}\r\n                    </Table>\r\n                </Box>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\weeklyPublication\\student\\WeeklyPublicationForStu.js",["1022","1023"],"import ContentStyle from \"../../../components/Style/ContentStyle\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {TableHead} from \"@mui/material\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {DELETE_WEEKLYPUBLICATION, STU_GET_PUBLICATION} from \"../../../settings\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PublicationComment from \"../dialog/PublicationComment\";\r\nimport WeeklyPublicationDialog from \"../dialog/WeeklyPublicationDialog\";\r\nimport PublicationUploadDialog from \"../dialog/PublicationUploadDialog\";\r\nimport confirmModal from \"../../../components/ConfirmModal\";\r\n\r\nexport default function WeeklyPublicationForStu(props){\r\n    const {userInfo}=props\r\n    const classes=ContentStyle()\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [weeklyPublication,setWeeklyPublication]=useState([])//得到的所有的周报文件\r\n    const [publication,setPublication]=useState({})//查看评价的周报文件\r\n    const [open,setOpen]=useState(false)\r\n    const [publicationOpen,setPublicationOpen]=useState(false)//控制查看周报信息的dialog是否打开\r\n    const [uploadOpen, setUploadOpen]=useState(false)\r\n    const [publicationValues, setPublicationValues]=useState({})\r\n\r\n    const getPublication=async ({stuId, page=1, limit})=>{\r\n        try{\r\n            let response= await fetch(\r\n                `${STU_GET_PUBLICATION}?stuId=${stuId}&limit=${limit}&offset=${(page-1)*limit}`\r\n            );\r\n            return response.json()\r\n        }catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleDelete=(id)=>{\r\n        fetch(`${DELETE_WEEKLYPUBLICATION}?id=${id}`,{method: \"POST\"})\r\n            .then(()=>{\r\n                setRefresh((p)=>!p)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getPublication({stuId:userInfo.stuId,page, limit:10}).then((res)=>{\r\n            setWeeklyPublication(res?.data || [])\r\n            setPageNo(Math.ceil(res?.paging?.total/10) || 0)\r\n        })\r\n    },[refresh, page, pageNo])\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        周报模块\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            setUploadOpen(true)\r\n                            setPublicationValues({\r\n                                stuName:userInfo.name,\r\n                                stuId:userInfo.stuId\r\n                            })\r\n                        }}>\r\n                        <UploadOutlined/>上传周报</Button>\r\n                </Box>\r\n\r\n                <Divider/>\r\n\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>对应周数</TableCell>\r\n                                <TableCell align=\"center\">周报提交时间</TableCell>\r\n                                <TableCell align=\"center\">周报</TableCell>\r\n                                <TableCell align=\"center\">周报评分</TableCell>\r\n                                <TableCell align=\"center\">周报评语</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {weeklyPublication.map((publication)=>(\r\n                                <TableRow>\r\n                                    <TableCell>{publication.week}</TableCell>\r\n                                    <TableCell align=\"center\">{publication.date}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            onClick={()=>{\r\n                                                setPublicationOpen(true)\r\n                                                setPublication(publication)\r\n                                                console.log(publication)\r\n                                            }}>查看周报内容</Button>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{\r\n                                        publication.score ? (publication.score):(\r\n                                            \"导师暂未评分\"\r\n                                        )\r\n                                    }</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                setPublication(publication)\r\n                                                setOpen(true)\r\n                                            }}\r\n                                        >查看周报评语</Button>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            variant=\"text\"\r\n                                            onClick={()=>{\r\n                                                setUploadOpen(true)\r\n                                                setPublicationValues(publication)\r\n                                            }}>修改周报</Button>\r\n\r\n                                        {publication.isRead==0 ? (\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"text\"\r\n                                                onClick={()=>{\r\n                                                    const cor = confirmModal({\r\n                                                        title:\"该周报导师还没有阅读，确认要删除这个周报吗？\",\r\n                                                        handleCorfirm:()=>{\r\n                                                            cor.close()\r\n                                                            handleDelete(publication.id)\r\n                                                        }\r\n                                                    })\r\n                                                }}>删除周报</Button>\r\n                                        ):(\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"text\"\r\n                                                disabled\r\n                                            >删除周报</Button>\r\n                                        )}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n\r\n                {pageNo>1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e,i)=>setPage(i)}\r\n                    />\r\n                )}\r\n            </Card>\r\n\r\n            <PublicationComment open={open}\r\n                                onClose={()=>{\r\n                                    setOpen(false)\r\n                                    setPublication({})\r\n                                    setRefresh((p)=>!p)\r\n                                }}\r\n                                publication={publication}/>\r\n\r\n            <WeeklyPublicationDialog open={publicationOpen}\r\n                                     onClose={()=>{\r\n                                         setPublicationOpen(false)\r\n                                         setPublication({})\r\n                                         setRefresh((p)=>!p)\r\n                                     }}\r\n                                     weeklyPublication={publication}/>\r\n\r\n            <PublicationUploadDialog open={uploadOpen}\r\n                                     onClose={()=>{\r\n                                         setUploadOpen(false)\r\n                                         setPublicationValues({})\r\n                                         setRefresh((p)=>!p)}}\r\n                                     detail={publicationValues} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\userManagemet\\UserManageForm.js",["1024","1025","1026","1027","1028","1029"],"import React, { useEffect, useState} from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { postFetch } from \"src/base\";\r\nimport { Box, Button, TextField, Typography, Dialog } from \"@material-ui/core\";\r\nimport {ADD_USER_URL, MNG_GET_ALL_USER} from \"src/settings\";\r\nimport alertBox from \"../../components/AlertBox\";\r\n//添加用户\r\n\r\n\r\nconst userTypes=[\r\n    {\r\n        value:null,\r\n        type:\"无\"\r\n    },\r\n    {\r\n        value:0,\r\n        type:\"硕士研究生\"\r\n    },\r\n    {\r\n        value:10,\r\n        type:\"博士研究生\"\r\n    },\r\n    {\r\n        value:20,\r\n        type:\"教师\"\r\n    }\r\n]\r\n\r\nfunction UserManageForm(props) {\r\n  const { onClose, open } = props;\r\n  const [allTeacher,setAllTeacher]=useState([]);\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n    useEffect(()=>{\r\n        fetch(`${MNG_GET_ALL_USER}?type=20`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.log(error))\r\n            .then((res)=>{\r\n                setAllTeacher(res?.data || [])\r\n            })\r\n        },[])\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <Formik\r\n        initialValues={{\r\n          name:\"\",\r\n          stuId: \"\"\r\n        }}\r\n        onSubmit={(values) => {\r\n            if(!values?.name || !values?.stuId || !values?.type){\r\n                alertBox({text:\"请填写必要的字段\",severity:\"error\"})\r\n                return\r\n            }\r\n            if(parseInt(values?.type)!==20){//说明不是教师\r\n                if(!Number.isInteger(parseInt(values?.enrollYear))){\r\n                    alertBox({text:\"请输入正确的入学年份\",severity:\"error\"})\r\n                    return\r\n                }\r\n            }\r\n          postFetch({\r\n            url: ADD_USER_URL,\r\n            values:{\r\n                stuId:values?.stuId,\r\n                name:values?.name,\r\n                type:parseInt(values?.type),\r\n                enrollYear:parseInt(values?.enrollYear),\r\n                keshuo:values?.keshuo,\r\n                mentor:values?.mentor\r\n            },\r\n            successCallback: () => {\r\n              console.log(\"添加用户成功\");\r\n              handleClose();\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n            <Box mb={1}>\r\n              <Typography color=\"textPrimary\" variant=\"h4\">\r\n                添加新用户\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              error={Boolean(touched.name && errors.name)}\r\n              fullWidth\r\n              label=\"用户姓名\"\r\n              margin=\"normal\"\r\n              name=\"name\"\r\n              placeholder=\"必填\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={Boolean(touched.stuId && errors.stuId)}\r\n              fullWidth\r\n              placeholder=\"必填\"\r\n              label=\"学/工号\"\r\n              margin=\"normal\"\r\n              name=\"stuId\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n            />\r\n              <TextField\r\n                  error={Boolean(touched.userType && errors.userType)}\r\n                  fullWidth\r\n                  select\r\n                  margin=\"normal\"\r\n                  label=\"身份类型\"\r\n                  name=\"type\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  variant=\"outlined\"\r\n                  value={values.type}\r\n                  SelectProps={{\r\n                      native: true,\r\n                  }}>\r\n                  {userTypes.map((userType)=>(\r\n                      <option key={userType.value} value={userType.value}>\r\n                          {userType.type}\r\n                      </option>\r\n                  ))\r\n                  }\r\n              </TextField>\r\n              {values.type==0 && (\r\n                  <TextField\r\n                      select\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"硕士类型\"\r\n                      name=\"keshuo\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      values={values.keshuo}\r\n                      SelectProps={{\r\n                          native:true\r\n                      }}>\r\n                      <option value={0}>无</option>\r\n                      <option value={1}>学硕</option>\r\n                      <option value={2}>专硕</option>\r\n                      <option value={3}>学工</option>\r\n                  </TextField>\r\n              )}\r\n              {(values.type==0 || values.type==10) &&\r\n                  (<TextField\r\n                      error={Boolean(touched.enrollYear && errors.enrollYear)}\r\n                      fullWidth\r\n                      label=\"入学年份\"\r\n                      margin=\"normal\"\r\n                      placeholder=\"必填\"\r\n                      name=\"enrollYear\"\r\n                      value={values.enrollYear}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                  />)}\r\n              {(values.type==0 || values.type==10) &&\r\n                  (<TextField\r\n                          error={Boolean(touched.mentor && errors.mentor)}\r\n                          fullWidth\r\n                          label=\"导师\"\r\n                          margin=\"normal\"\r\n                          name=\"mentor\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          select\r\n                          value={values.mentor}\r\n                          SelectProps={{\r\n                              native:true\r\n                          }}>\r\n                          <option>无</option>\r\n                          {\r\n                              allTeacher.map((user)=>{\r\n                                  return (\r\n                                      <option value={user.name}>\r\n                                          {user.name}\r\n                                      </option>\r\n                                  )\r\n                              })\r\n                          }\r\n                      </TextField>\r\n\r\n\r\n                  )}\r\n            <Box my={2}>\r\n              <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n              >\r\n                提交\r\n              </Button>\r\n\r\n                <Button\r\n                    fullWidth\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={()=>{\r\n                        onClose()\r\n                    }}\r\n                >取消</Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\nexport default UserManageForm;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\essayRecommendation\\EssayEditForm.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\TabPanel.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\HistoryTable.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\NewClassForm.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\NewArticleForm.js",[],"E:\\fudan-secsys\\my-react\\src\\components\\CatalogCard.js",["1030","1031","1032","1033","1034","1035"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Button, Grid, Typography } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { DELETE_ARTICLE_URL, DELETE_CLASS_URL } from 'src/settings';\r\nimport { deleteFetch } from \"src/base\";\r\nimport corfirmModal from \"src/components/ConfirmModal\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    margin: 8\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: 600\r\n  }\r\n\r\n});\r\n\r\nexport default function CatalogCard(props) {\r\n  const classes = useStyles();\r\n  const { data = {}, refresh, userRoleId, authType } = props;\r\n  const { name, id, articles } = data;\r\n  const handleDeleteArticle = (id, name) => {\r\n    const cor = corfirmModal({\r\n      title: `确定要删除[${name}]吗？`,\r\n      handleCorfirm: () => {\r\n        cor.close();\r\n        deleteFetch({\r\n          url: `${DELETE_ARTICLE_URL}?id=${id}`,\r\n          values: { id },\r\n          successCallback: refresh,\r\n        });\r\n      },\r\n    });\r\n  }\r\n  const handleDeleteClass = (id, name) => {\r\n    const cor = corfirmModal({\r\n      title: `确定要删除[${name}]吗？`,\r\n      handleCorfirm: () => {\r\n        cor.close();\r\n        deleteFetch({\r\n          url: `${DELETE_CLASS_URL}?id=${id}`,\r\n          values: { id },\r\n          successCallback: refresh,\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Grid container spacing={1}>\r\n          <Grid item md={11}>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              {name}\r\n            </Typography>\r\n          </Grid>\r\n          {(userRoleId == 10 || userRoleId == authType) && (\r\n            <Grid item md={1}>\r\n              <Button onClick={(e) => handleDeleteClass(id, name)}>\r\n                删除类{\" \"}\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n        {articles?.map((item) => (\r\n          <Grid container spacing={1} key={item.id}>\r\n            <Grid item md={10}>\r\n              <RouterLink to={\"/app/article/\" + item.id}>\r\n                <Typography component=\"h2\">{item.title}</Typography>\r\n              </RouterLink>\r\n            </Grid>\r\n            {(userRoleId == 10 || userRoleId == authType) && (\r\n              <Grid item md={1}>\r\n                <Button\r\n                  component={RouterLink}\r\n                  to={\"/app/articleEdit/\" + item.id}\r\n                >\r\n                  编辑{\" \"}\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            {(userRoleId == 10 || userRoleId == authType) && (\r\n              <Grid item md={1}>\r\n                <Button\r\n                  onClick={(e) => handleDeleteArticle(item.id, item.title)}\r\n                >\r\n                  删除{\" \"}\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\seminarMng\\SeminarForDoc.js",["1036","1037","1038","1039","1040","1041","1042","1043"],"import {\r\n    Box,\r\n    Button,\r\n    Divider,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {UserContext} from \"../../../../layouts/Context\";\r\nimport {\r\n    DELETE_SECTION_URL,\r\n    DOWNLOAD_SECTION_URL,\r\n    DOWNLOAD_SEMINAR_URL,\r\n    GET_ALL_SECTION_URL,\r\n    UPLOAD_SECTION_URL\r\n} from \"../../../../settings\";\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport {message, notification, Upload} from \"antd\";\r\nimport {DownloadOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport SeminarSectionEditForm from \"../SeminarSectionEditForm\";\r\nimport confirmModal from \"../../../../components/ConfirmModal\";\r\nimport {deleteFetch} from \"../../../../base\";\r\nimport SeminarSectionDetailForm from \"../SeminarSectionDetailForm\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    actions: {\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    td: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"16px\",\r\n        \"& p\": {\r\n            lineHeight: 2,\r\n        },\r\n    },\r\n    Pagination: {\r\n        padding: theme.spacing(2),\r\n        \"& .MuiPagination-ul\": {\r\n            justifyContent: \"center\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst SeminarForDoc=()=>{\r\n    const classes=useStyles()\r\n    const {userInfo}=useContext(UserContext)\r\n    const [section,setSection]=useState([])\r\n    const [page,setPage]=useState(1)\r\n    const [pageNo,setPageNo]=useState(0)\r\n    const [refresh,setRefresh]=useState(false)\r\n    const [paperId,setPaperId]=useState(0)//需要上传的论文Id\r\n    const [open,setOpen]=useState(false) //这个是判断编辑/新增的专题框是否打开\r\n    const [sectionDetail,setSectionDetail]=useState({}) //要进行编辑的信息\r\n    const [detailOpen,setDetailOpen]=useState(false)\r\n\r\n    const hasPermission= userInfo.status==1 //判断用户是否是博士生，如果是博士生，则能够进行专题操作\r\n\r\n    const getAllSection=()=>{//从后台调取所有的section安排\r\n        fetch(`${GET_ALL_SECTION_URL}?limit=10&offset=${(page-1)*10}`,{})\r\n            .then((res)=>res.json()) //将接受到的Promise对象res转为json格式\r\n            .catch((error)=>console.log(\"Error:\",error))\r\n            .then((response)=>{\r\n                setSection(response?.data || [])\r\n                setPageNo(Math.ceil(response?.paging?.total/10) || 0)\r\n            })\r\n    }\r\n\r\n    const getDownloadSection=(section)=>{ //下载文件功能\r\n        fetch(`${DOWNLOAD_SECTION_URL}?id=${section.id}`,{\r\n            method:\"GET\",\r\n            credentials:\"include\",\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        }).then((res)=>{\r\n            res.blob().then(blob=>{\r\n                const aLink=document.createElement(\"a\")\r\n                document.body.appendChild(aLink)\r\n                aLink.style.display=\"none\"\r\n                const objectUrl=window.URL.createObjectURL(blob)\r\n                aLink.href=objectUrl\r\n                aLink.download=`${section.sectionFileName}`\r\n                aLink.click()\r\n                document.body.removeChild(aLink)\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(\"下载失败\",error)\r\n            notification.success({\r\n                message:\"文件下载失败\",\r\n                description:error\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleDeleteSection=(section)=>{ //确定是否删除\r\n        if(section.stuId != userInfo.stuId){\r\n            alertBox({text:\"无权进行删除\",severity:\"error\"})\r\n        }\r\n        else{\r\n            const cor=confirmModal({\r\n                title:\"确定要删除吗？\",\r\n                handleCorfirm:()=>{\r\n                    cor.close()\r\n                    deleteFetch({\r\n                        url:`${DELETE_SECTION_URL}?id=${section.id}`,\r\n                        successCallback:()=>{\r\n                            setRefresh((prev)=>!prev)\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const uploadProps={//Upload的相关属性\r\n        name:\"sectionFile\",\r\n        action:UPLOAD_SECTION_URL,\r\n        method:\"POST\",\r\n        data:{\r\n            id:paperId\r\n        },\r\n        onChange (info){\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                alertBox({text:\"上传成功\",severity:\"success\"})\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n                setRefresh((prev)=>!prev)\r\n            } else if (info.file.status === 'error') {\r\n                alertBox({text:\"上传失败\",severity:\"error\"})\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllSection()\r\n    },[refresh, page, pageNo])\r\n\r\n    return (\r\n        <div>\r\n            <Box className={classes.header}>\r\n                <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                    专题选讲\r\n                </Typography>\r\n\r\n                {hasPermission && (\r\n                    <Button\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={()=>{\r\n                            setOpen(true)\r\n                            setSectionDetail({\r\n                                name:userInfo.name,\r\n                                stuId:userInfo.stuId\r\n                            })\r\n                        }}\r\n                    >\r\n                        添加专题\r\n                    </Button>\r\n                )\r\n                }\r\n\r\n            </Box>\r\n\r\n            <Divider/>\r\n\r\n            <Box minWidth={800}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>演讲时间</TableCell>\r\n                            <TableCell>专题主讲人</TableCell>\r\n                            <TableCell align=\"center\">主题</TableCell>\r\n                            <TableCell align=\"center\">资源</TableCell>\r\n                            <TableCell align=\"center\">推荐论文</TableCell>\r\n                            {hasPermission && ( //博士生有权利将他们发表过的专题修改或删除\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            )}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {section.map((sec)=>(\r\n                            <TableRow>\r\n                                <TableCell>{sec.date}</TableCell>\r\n                                <TableCell>{sec.name}</TableCell>\r\n                                <TableCell align=\"center\">{sec.topic}</TableCell>\r\n\r\n                                {sec.stuId==userInfo.stuId?( //这里是判断发布这个专题的人是否是用户本人，如果是，可以上传资源，如果不是，只能下载资源\r\n                                    <TableCell align=\"center\">\r\n                                        <Upload {...uploadProps}>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    setPaperId(sec.id)\r\n                                                }}\r\n                                            >\r\n                                                <UploadOutlined/>{sec.isFile==1?\"重新上传\":\"上传文件\"}\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </TableCell>\r\n                                ):(\r\n                                    <TableCell align=\"center\">\r\n                                        {sec.isFile==1?( //如果isFIle为1，那么说明数据库已经有文件，就可以进行下载，否则显示暂未上传\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    getDownloadSection(sec)\r\n                                                }}\r\n                                            >\r\n                                            <DownloadOutlined/>下载文件\r\n                                            </Button>\r\n                                        ):\"暂未上传\"}\r\n                                    </TableCell>\r\n                                )}\r\n\r\n                                <TableCell align=\"center\">\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        size=\"small\"\r\n                                        variant=\"text\"\r\n                                        onClick={()=>{\r\n                                            setDetailOpen(true)\r\n                                            setSectionDetail(sec)\r\n                                        }}>查看推荐论文</Button>\r\n                                    </TableCell>\r\n\r\n                                {hasPermission &&(//首先，得是博士，才有操作的大前提\r\n                                  <TableCell align=\"center\">\r\n                                      {\r\n                                          sec.stuId==userInfo.stuId && (//这里是判断专题的发布人是否是用户本人，如果是用户本人，那么就有删除修改权限，否则没有\r\n                                          <>\r\n                                              <Button\r\n                                                  color=\"primary\"\r\n                                                  size=\"small\"\r\n                                                  variant=\"text\"\r\n                                                  onClick={()=>{\r\n                                                      setSectionDetail({\r\n                                                          id:sec.id,\r\n                                                          name:userInfo.name,\r\n                                                          stuId:userInfo.stuId,\r\n                                                          topic:sec.topic,\r\n                                                          paperRec:sec.paperRec\r\n                                                      })\r\n                                                      setOpen(true)\r\n                                                  }}\r\n                                              >编辑</Button>\r\n                                              <Button\r\n                                                  color=\"primary\"\r\n                                                  size=\"small\"\r\n                                                  variant=\"text\"\r\n                                                  onClick={()=>{\r\n                                                      handleDeleteSection(sec)\r\n                                                  }}\r\n                                              >删除</Button>\r\n                                          </>\r\n                                          )\r\n                                      }\r\n                                  </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n            </Box>\r\n            {pageNo > 1 && (\r\n                <Pagination\r\n                    className={classes.Pagination}\r\n                    count={pageNo}\r\n                    color=\"primary\"\r\n                    onChange={(e, i) => setPage(i)}\r\n                />\r\n            )}\r\n\r\n            <SeminarSectionEditForm\r\n                open={open}\r\n                sectionDetail={sectionDetail}\r\n                onClose={()=>{\r\n                    setOpen(false)\r\n                    setSectionDetail({})\r\n                    setRefresh((prev)=>!prev)\r\n                }}\r\n            />\r\n\r\n            <SeminarSectionDetailForm\r\n                open={detailOpen}\r\n                sectionDetail={sectionDetail}\r\n                onClose={()=>{\r\n                    setDetailOpen(false)\r\n                    setSectionDetail({})\r\n                    setRefresh((p)=>!p)\r\n                }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeminarForDoc;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\seminarMng\\SeminarForMaster.js",["1044","1045","1046","1047","1048","1049","1050","1051","1052"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Divider,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow, TextField,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport {\r\n    GET_ALL_SEMINAR_URL,\r\n    DELETE_SEMINAR_URL,\r\n    ADD_SEMINAR_URL,\r\n    UPDATE_SEMINAR_URL,\r\n    DOWNLOAD_SEMINAR_URL, UPLOAD_SEMINAR_URL, MNG_ADD_BULLETIN_URL, MNG_GET_ALL_USER\r\n} from \"src/settings\";\r\nimport {deleteFetch, postFetch} from \"src/base\";\r\nimport corfirmModal from \"src/components/ConfirmModal\";\r\n\r\nimport alertBox from \"../../../../components/AlertBox\";\r\nimport {message, notification, Upload} from \"antd\";\r\nimport {DownloadOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport ContentStyleForPage from \"../../../../components/Style/ContentStyleForPage\";\r\n\r\nconst SeminarForMaster= () => {\r\n    const classes = ContentStyleForPage()\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [seminars, setSeminars] = useState([]);\r\n    const [groupMembers,setGroupMembers]=useState([])\r\n    const { userInfo } = useContext(UserContext);\r\n    const [page, setPage] = useState(1);\r\n    const [pageNo, setPageNo] = useState(0);\r\n    const [id,setId]=useState(0)\r\n\r\n    //向后台调取用户列表并更新界面\r\n    const getAllSeminar = () => {//获取所有的演讲安排\r\n        fetch(`${GET_ALL_SEMINAR_URL}?limit=10&offset=${(page - 1) * 10}`, {})\r\n            .then((res) => res.json())\r\n            .catch((error) => console.error(\"Error:\", error))\r\n            .then((response) => {\r\n                setSeminars(response?.data || []);\r\n                setPageNo(Math.ceil(response?.paging?.total / 10) || 0);\r\n            })\r\n    };\r\n\r\n    const getAllGroupMembers=()=>{\r\n        fetch(`${MNG_GET_ALL_USER}?groupId=${userInfo.groupId}`)\r\n            .then((res)=>res.json())\r\n            .catch((error)=>console.error(error))\r\n            .then((response)=>{\r\n                setGroupMembers(response?.data || [])\r\n            })\r\n    }\r\n\r\n    const handleDeleteSeminar = (seminar) => {\r\n        if(userInfo.groupId==seminar.groupId){\r\n            const cor = corfirmModal({\r\n                title: \"确定要删除吗？\",\r\n                handleCorfirm: () => {\r\n                    cor.close();\r\n                    deleteFetch({\r\n                        url: `${DELETE_SEMINAR_URL}?id=${seminar.id}`,\r\n                        values: { id },\r\n                        successCallback: () => {\r\n                            setRefresh((prev) => !prev);\r\n                        },\r\n                    });\r\n                },\r\n            });\r\n        }\r\n        else{\r\n            alertBox({text:\"您无权删除这条演讲记录！\",severity:\"error\"})\r\n            return\r\n        }\r\n    };\r\n\r\n    const uploadProps={\r\n        name:\"file\",\r\n        action:UPLOAD_SEMINAR_URL,\r\n        method:\"POST\",\r\n        data:{\r\n            id:id\r\n        },\r\n        onChange (info){\r\n            if (info.file.status !== 'uploading') {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === 'done') {\r\n                alertBox({text:\"上传成功\",severity:\"success\"})\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n                setRefresh((prev)=>!prev)\r\n            } else if (info.file.status === 'error') {\r\n                alertBox({text:\"上传失败\",severity:\"error\"})\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    }\r\n\r\n    const getDownloadSeminar=(seminar)=>{\r\n        fetch(`${DOWNLOAD_SEMINAR_URL}?id=${seminar.id}`,{\r\n            method:\"GET\",\r\n            credentials:\"include\",\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        }).then((res)=>{\r\n            res.blob().then(blob=>{\r\n                const aLink=document.createElement(\"a\")\r\n                document.body.appendChild(aLink)\r\n                aLink.style.display=\"none\"\r\n                const objectUrl=window.URL.createObjectURL(blob)\r\n                aLink.href=objectUrl\r\n                aLink.download=`${seminar.fileName}`\r\n                aLink.click()\r\n                document.body.removeChild(aLink)\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(\"下载失败\",error)\r\n            notification.success({\r\n                message:\"文件下载失败\",\r\n                description:error\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllSeminar()\r\n        getAllGroupMembers()\r\n    }, [refresh,page,pageNo]);\r\n\r\n    return (\r\n        <div>\r\n                <Box className={classes.header}>\r\n                    <Typography color=\"textPrimary\" size=\"small\" component=\"h2\">\r\n                        论文演讲安排\r\n                    </Typography>\r\n\r\n                    {userInfo.groupId!==0 && (\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={()=>{ //点击添加一次演讲安排\r\n                                postFetch({//为本组添加一次演讲安排\r\n                                    url:ADD_SEMINAR_URL,\r\n                                    values:{\r\n                                        groupId:userInfo.groupId\r\n                                    },\r\n                                    successCallback:()=>{\r\n                                        alertBox({text:\"添加成功\",severity:\"success\"})\r\n                                        setRefresh((prev)=>!prev)\r\n                                    }\r\n                                })\r\n                            }}\r\n                        >\r\n                            添加演讲安排\r\n                        </Button>\r\n                    )}\r\n\r\n                </Box>\r\n                <Divider />\r\n                <Box minWidth={800}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>发布时间</TableCell>\r\n                                <TableCell>组号</TableCell>\r\n                                <TableCell>主讲人</TableCell>\r\n                                <TableCell>演讲资源</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {seminars.map((seminar) => (\r\n                                <TableRow hover key={seminar.id}>\r\n                                    <TableCell>{seminar.date}</TableCell>\r\n                                    <TableCell>{seminar.groupId}</TableCell>\r\n                                    {(userInfo.groupId==seminar.groupId)?(//设定的演讲组和登录用户的演讲组是否相同\r\n                                        <TableCell>\r\n                                            <TextField\r\n                                                select\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                value={seminar.speakerName?seminar.speakerName:\"无\"}\r\n                                                onChange={(e)=>{\r\n                                                    postFetch({\r\n                                                        url:UPDATE_SEMINAR_URL,\r\n                                                        values:{\r\n                                                            id:seminar.id,\r\n                                                            speakerName:e.target.value,\r\n                                                            speakerStuId:groupMembers.find((member)=>member.name==e.target.value).stuId\r\n                                                        },\r\n                                                        successCallback:()=>{\r\n                                                            setRefresh((prev)=>!prev)\r\n                                                        }\r\n                                                    })\r\n                                                    postFetch({\r\n                                                        url:MNG_ADD_BULLETIN_URL,\r\n                                                        values:{\r\n                                                            stuId:groupMembers.find((member)=>member.name==e.target.value).stuId,\r\n                                                            title:\"请及时准备下周论文演讲\",\r\n                                                            content:\"经组内成员商议决定，下周的论文演讲由你完成，请及时准备并上传演讲资料\"\r\n                                                        }\r\n                                                    })\r\n                                                }}\r\n                                                SelectProps={{\r\n                                                    native:true\r\n                                                }}\r\n                                            >\r\n                                                <option>无</option>\r\n                                                {groupMembers.map((user)=>(\r\n                                                    <option value={user.name}>\r\n                                                        {user.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </TableCell>\r\n                                    ):(<TableCell>{seminar.speakerName}</TableCell>)}\r\n\r\n                                    {seminar.speakerName==userInfo.name?(\r\n                                        <TableCell>\r\n                                            <Box>\r\n                                                <Upload {...uploadProps}>\r\n                                                    <Button\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        variant=\"outlined\"\r\n                                                        onClick={()=>{\r\n                                                            setId(seminar.id)\r\n                                                        }}\r\n                                                    >\r\n                                                        <UploadOutlined/>{seminar.isFile==1?\"重新上传\":\"上传文件\"}\r\n                                                    </Button>\r\n                                                </Upload >\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                    ): (<TableCell>\r\n                                        {seminar.isFile==1?(\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\"\r\n                                                onClick={()=>{\r\n                                                    getDownloadSeminar(seminar)\r\n                                                }}\r\n                                            ><DownloadOutlined />下载文件</Button>\r\n                                        ):\"暂未上传\"}\r\n                                    </TableCell>)}\r\n                                        <TableCell align=\"center\">\r\n                                            {userInfo.groupId==seminar.groupId &&(\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    variant=\"text\"\r\n                                                    onClick={(e) => handleDeleteSeminar(seminar)}\r\n                                                >\r\n                                                    删除\r\n                                                </Button>\r\n                                                )\r\n                                            }\r\n                                        </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n                {pageNo > 1 && (\r\n                    <Pagination\r\n                        className={classes.Pagination}\r\n                        count={pageNo}\r\n                        color=\"primary\"\r\n                        onChange={(e, i) => setPage(i)}\r\n                    />\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeminarForMaster;\r\n","E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\DeviceTable.js",["1053","1054"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  Divider,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { UserContext } from \"src/layouts/Context\";\r\nimport {\r\n  MNG_DELETE_DEVICE_URL, U_APPLY_DEVICE_URL,\r\n} from \"src/settings\";\r\nimport {deleteFetch, postFetch} from \"src/base\";\r\nimport corfirmModal from \"src/components/ConfirmModal\";\r\nimport EditDevice from './EditDevice'\r\nimport DeviceApplyHistory from \"./DeviceApplyHistory\";\r\nimport {getAllDevices} from \"../../../service/deviceService\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2),\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingBottom: theme.spacing(2),\r\n    \"& .MuiTextField-root\": {\r\n      width: \"150px\",\r\n    },\r\n    \"& .MuiButton-root\": {\r\n      width: \"150px\",\r\n      height: \"40px\",\r\n    },\r\n  },\r\n  Pagination: {\r\n    padding:theme.spacing(2),\r\n    '& .MuiPagination-ul':{\r\n      justifyContent: 'center',\r\n    }\r\n  },\r\n}));\r\n\r\nconst TYPES = [//设备类型\r\n  {\r\n    id: 100,\r\n    name: \"所有设备\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"显示器\",\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"移动设备\",\r\n  },\r\n  {\r\n    id: 30,\r\n    name: \"台式主机\",\r\n  },\r\n  {\r\n    id: 50,\r\n    name: \"服务器\",\r\n  },\r\n  {\r\n    id: 40,\r\n    name: \"其它设备\",\r\n  },\r\n  {\r\n    id: 0,\r\n    name: \"无详细指明\"\r\n  }\r\n];\r\nexport default function DeviceTable(props) {\r\n  const { refreshHistory } = props;\r\n  const classes = useStyles();\r\n  const { userInfo } = useContext(UserContext);\r\n  const [openEditDevice, setOpenEditDevice] = useState(false);//默认不打开编辑页面\r\n  const [openHitory, setOpenHitory] = useState(false);\r\n  const [type, setType] = useState(100)//设备类型默认显示所有设备\r\n  const [deviceDetail, setDeviceDetail] = useState({});\r\n  const [page, setPage]=useState(1);\r\n  const [pageNo,setPageNo]=useState(0);\r\n  const [devices,setDevices]=useState([]);\r\n  const [refresh, setRefresh]=useState(false);\r\n  const [selectName, setSelectName]=useState(\"\");\r\n\r\n  const deleteDevice = (id, name) => {//删除设备操作\r\n    const cor = corfirmModal({\r\n      title: `确定要删除[${name}]吗？`,\r\n      handleCorfirm: () => {\r\n        cor.close();\r\n        deleteFetch({\r\n          url: `${MNG_DELETE_DEVICE_URL}?id=${id}`,\r\n          successCallback: ()=>{\r\n            setRefresh((prev)=>!prev);\r\n          }\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleApply=(device)=>{\r\n    const cor=corfirmModal({\r\n      title:\"确定要申请这个设备吗？\",\r\n      handleCorfirm:()=>{\r\n        cor.close()\r\n        if(device.borrow){\r\n          alertBox({text:\"该设备已被申请，请申请别的设备\"})\r\n          return\r\n        }\r\n        else{\r\n          postFetch({\r\n            url:U_APPLY_DEVICE_URL,\r\n            values:{\r\n              deviceId:device.id\r\n            },\r\n            successCallback:()=>{\r\n              alertBox({text:\"申请成功\", severity:\"success\"})\r\n              setRefresh((p)=>!p)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const hasPermission = (userInfo.isDeviceMng==1) //检验用户权限\r\n\r\n  useEffect(()=>{\r\n    getAllDevices({page, type, selectName}).then((res)=>{\r\n      setDevices(res.data||[]);\r\n      setPageNo(Math.ceil(res?.paging?.total /10) || 0);\r\n    })\r\n  },[refresh,page,type,selectName])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n\r\n      <div className={classes.header}>\r\n\r\n        <TextField\r\n          select\r\n          label=\"设备类型\"\r\n          size=\"small\"\r\n          value={type}\r\n          onChange={(event) => {\r\n            setPage(1)\r\n            if(pageNo>0){\r\n              setPageNo(1)\r\n            }\r\n            setType(parseInt(event.target.value))\r\n\r\n          }}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          {TYPES.map((option) => (\r\n            <option key={option.id} value={option.id}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n\r\n        <TextField\r\n          label=\"根据借用人搜索设备\"\r\n          size=\"small\"\r\n          onChange={(e)=>{\r\n            setPage(1)\r\n            setSelectName(e.target.value)}}\r\n          />\r\n\r\n        {hasPermission && (//如果有管理员权限，就显示“添加设备”的按钮\r\n          <Button variant=\"outlined\" onClick={() => setOpenEditDevice(true)}>\r\n            添加设备\r\n          </Button>\r\n        )}\r\n\r\n      </div>\r\n\r\n\r\n      <Divider />\r\n\r\n\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>设备类型</TableCell>\r\n            <TableCell>设备编号</TableCell>\r\n            <TableCell>设备品牌</TableCell>\r\n            <TableCell>设备型号</TableCell>\r\n            <TableCell>负责人</TableCell>\r\n            <TableCell>当前保管人</TableCell>\r\n            <TableCell align=\"center\">操作</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {/* type;设备类型 model;设备型号 name;设备名称 principal;负责人姓名\r\n          inventory;库存 inventoryUnit;库存单位 */}\r\n        <TableBody>\r\n          {devices.map((device) => (\r\n            <TableRow hover key={device.id}>\r\n              <TableCell>\r\n                {TYPES.find((type) => type.id === device.type).name}\r\n              </TableCell>\r\n              <TableCell>{device.id}</TableCell>\r\n              <TableCell>{device.name}</TableCell>\r\n              <TableCell>{device.model}</TableCell>\r\n              <TableCell>{device.principal}</TableCell>\r\n              <TableCell>{device.borrow}</TableCell>\r\n              <TableCell align=\"center\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    variant=\"text\"\r\n                    onClick={() => {\r\n                      handleApply(device)\r\n                    }}\r\n                >\r\n                  申请设备\r\n                </Button>\r\n                {hasPermission && (\r\n                  <>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"text\"\r\n                      onClick={() => {\r\n                        setDeviceDetail(device);\r\n                        setOpenHitory(true);\r\n                      }}\r\n                    >\r\n                      借用记录\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"text\"\r\n                      onClick={() => {\r\n                        setOpenEditDevice(true);\r\n                        setDeviceDetail(device);\r\n                      }}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      variant=\"text\"\r\n                      onClick={() => deleteDevice(device.id, device.name)}\r\n                    >\r\n                      删除\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {pageNo >1 &&(\r\n          <Pagination\r\n            className={classes.Pagination}\r\n            count={pageNo}\r\n            color=\"primary\"\r\n            onChange={(e,i)=>setPage(i)}\r\n            />\r\n      )}\r\n\r\n      <EditDevice\r\n        open={openEditDevice}\r\n        onClose={() => {\r\n          setOpenEditDevice(false);\r\n          setDeviceDetail({});\r\n          setRefresh((prev)=>!prev);\r\n        }}\r\n        deviceDetail={deviceDetail}\r\n      />\r\n      <DeviceApplyHistory\r\n        open={openHitory}\r\n        onClose={() => {\r\n          setOpenHitory(false);\r\n          setDeviceDetail({});\r\n          setRefresh((prev)=>!prev);\r\n        }}\r\n        deviceDetail={deviceDetail}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\service\\deviceService.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\device\\components\\EditDevice.js",["1055","1056","1057","1058","1059"],"import React, {useEffect,useState} from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  makeStyles,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport alertBox from \"src/components/AlertBox\";\r\nimport { MNG_ADD_DEVICE_URL, MNG_UPDATE_DEVICE_URL, MNG_GET_ALL_USER,GET_ALL_USER_URL} from \"src/settings\";\r\nimport { postFetch } from \"src/base\";\r\nimport {forceGetAllUser} from \"../../../service/userService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n}));\r\n\r\nconst Type=[\r\n    {\r\n        id: 0,\r\n        value: \"无\"\r\n    },\r\n    {\r\n        id: 10,\r\n        value: \"显示器\"\r\n    },\r\n    {\r\n        id: 20,\r\n        value: \"移动设备\"\r\n    },\r\n    {\r\n        id: 30,\r\n        value: \"台式主机\"\r\n    },\r\n    {\r\n        id:50,\r\n        value: \"服务器\",\r\n    },\r\n    {\r\n        id: 40,\r\n        value: \"其他\"\r\n    }\r\n]\r\n\r\nexport default function EditDevice(props) {\r\n  const { onClose, open, deviceDetail } = props;\r\n  const [users,getUsers]=useState([])\r\n  const [refresh,setRefresh]=useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(()=>{\r\n      forceGetAllUser().then((res)=>{\r\n          getUsers(res.data || [])\r\n      })\r\n  },[refresh]);\r\n\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setRefresh((prev) => !prev)\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} className={classes.root}>\r\n      <DialogTitle onClose={handleClose}>\r\n        {deviceDetail?.id ? \"编辑设备\" : \"新增设备\"}{/**deviceID是否存在，如果存在，说明是对设备的编辑，如果不存在，说明是新增的设备**/}\r\n      </DialogTitle>\r\n      <Formik\r\n        initialValues={deviceDetail}\r\n        // validationSchema={Yup.object().shape({\r\n        //   type: Yup.number().required(\"设备类型必填\"),\r\n        // })}\r\n        onSubmit={(values) => {\r\n          postFetch({\r\n            url:\r\n              deviceDetail?.id? MNG_UPDATE_DEVICE_URL : MNG_ADD_DEVICE_URL,\r\n            values: {\r\n                type: values?.type || 0,\r\n                model: values?.model || \"\",\r\n                name: values?.name || \"\",\r\n                principal: values?.principal || \"\",\r\n                id:values?.id ||0\r\n              //...values,\r\n            },\r\n            successCallback: () => {\r\n              alertBox({ text: \"操作成功\", severity: \"success\" });\r\n              handleClose();\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n            <TextField\r\n              select\r\n              fullWidth\r\n              label=\"设备类型\"\r\n              name=\"type\"\r\n              margin=\"normal\"\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n              value={values.type}\r\n            >{\r\n                Type.map((type)=>(\r\n                    <option value={type.id}>\r\n                        {type.value}\r\n                    </option>\r\n                ))\r\n            }\r\n            </TextField>\r\n            <TextField\r\n              label=\"设备型号\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"model\"\r\n              value={values.model}\r\n              variant=\"outlined\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              label=\"设备品牌\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              variant=\"outlined\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n              <TextField\r\n              select\r\n              fullWidth\r\n              label=\"负责人姓名\"\r\n              name=\"principal\"\r\n              margin=\"normal\"\r\n              onChange={handleChange}\r\n              value={values.principal}\r\n              variant=\"outlined\"\r\n              SelectProps={{\r\n              native: true,\r\n          }}>\r\n                  <option >\r\n                      无\r\n                  </option>\r\n              {\r\n                  users.map((user)=>{\r\n                      if(user.isDeviceMng==1){\r\n                          return(\r\n                              <option value={user.name}>\r\n                                  {user.name}\r\n                              </option>\r\n                          )\r\n                      }\r\n                  })\r\n              }\r\n            </TextField>\r\n            {/*<TextField*/}\r\n            {/*  label=\"库存\"*/}\r\n            {/*  margin=\"normal\"*/}\r\n            {/*  fullWidth*/}\r\n            {/*  name=\"inventory\"*/}\r\n            {/*  value={values.inventory}*/}\r\n            {/*  variant=\"outlined\"*/}\r\n            {/*  onBlur={handleBlur}*/}\r\n            {/*  onChange={handleChange}*/}\r\n            {/*/>*/}\r\n            {/*<TextField*/}\r\n            {/*  label=\"库存单位\"*/}\r\n            {/*  margin=\"normal\"*/}\r\n            {/*  fullWidth*/}\r\n            {/*  name=\"inventoryUnit\"*/}\r\n            {/*  value={values.inventoryUnit}*/}\r\n            {/*  variant=\"outlined\"*/}\r\n            {/*  onBlur={handleBlur}*/}\r\n            {/*  onChange={handleChange}*/}\r\n            {/*/>*/}\r\n\r\n            <Box my={2}>\r\n              <Button\r\n                fullWidth\r\n                color=\"primary\"\r\n                // disabled={isSubmitting}\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                提交\r\n              </Button>\r\n                <Button\r\n                    fullWidth\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    onClick={()=>{onClose()}}\r\n                >取消</Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n}\r\n","E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarSectionDetailForm.js",[],"E:\\fudan-secsys\\my-react\\src\\views\\seminarMenu\\seminar\\SeminarSectionEditForm.js",["1060","1061","1062"],"import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Dialog,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { postFetch } from \"src/base\";\r\nimport {ADD_SECTION_URL, ADD_SEMINAR_URL, UPDATE_SECTION_URL} from \"src/settings\";\r\nimport alertBox from \"../../../components/AlertBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst SeminarSectionEditForm = (props) => {\r\n  const { onClose, open, sectionDetail } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <Formik\r\n        initialValues={sectionDetail}\r\n        onSubmit={(values) => {\r\n          postFetch({\r\n            url: sectionDetail?.id ? UPDATE_SECTION_URL:ADD_SECTION_URL,\r\n            values,\r\n            successCallback: () => {\r\n              alertBox({text:\"操作成功\",severity:\"success\"})\r\n              handleClose();\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"dialogForm\">\r\n            <Box mb={1}>\r\n              <Typography color=\"textPrimary\" variant=\"h6\">\r\n                {sectionDetail?.id ?\"编辑专题\" : \"添加专题\"}\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              fullWidth\r\n              label=\"演讲时间\"\r\n              name=\"date\"\r\n              type=\"date\"\r\n              margin=\"normal\"\r\n              value={values?.date}\r\n              onChange={handleChange}\r\n              InputLabelProps={{shrink:true}}\r\n              />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"演讲主题\"\r\n              margin=\"normal\"\r\n              placeholder=\"必填\"\r\n              name=\"topic\"\r\n              value={values?.topic}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                multiline\r\n                rows={3}\r\n                label=\"推荐文章\"\r\n                onBlur={handleBlur}\r\n                placeholder=\"可不填\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                name=\"paperRec\"\r\n                value={values.paperRec}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n            />\r\n            <Box my={2}>\r\n              <Button\r\n                color=\"primary\"\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                提交\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                fullWidth\r\n                size=\"large\"\r\n                onClick={()=>{\r\n                  onClose()\r\n                }}\r\n                variant=\"contained\"\r\n                >取消</Button>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default SeminarSectionEditForm;\r\n",{"ruleId":"1063","replacedBy":"1064"},{"ruleId":"1065","replacedBy":"1066"},{"ruleId":"1067","severity":1,"message":"1068","line":6,"column":1,"nodeType":"1069","messageId":"1070","endLine":6,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":14,"column":40,"nodeType":"1073","messageId":"1074","endLine":14,"endColumn":42},{"ruleId":"1071","severity":1,"message":"1072","line":37,"column":29,"nodeType":"1073","messageId":"1074","endLine":37,"endColumn":31},{"ruleId":"1075","severity":1,"message":"1076","line":47,"column":26,"nodeType":"1077","endLine":47,"endColumn":35,"suggestions":"1078"},{"ruleId":"1079","severity":1,"message":"1080","line":1,"column":17,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":26},{"ruleId":"1079","severity":1,"message":"1083","line":1,"column":28,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":36},{"ruleId":"1079","severity":1,"message":"1084","line":1,"column":38,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":48},{"ruleId":"1079","severity":1,"message":"1085","line":6,"column":30,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":46},{"ruleId":"1079","severity":1,"message":"1086","line":6,"column":48,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":57},{"ruleId":"1079","severity":1,"message":"1087","line":2,"column":21,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":31},{"ruleId":"1079","severity":1,"message":"1088","line":10,"column":12,"nodeType":"1081","messageId":"1082","endLine":10,"endColumn":20},{"ruleId":"1075","severity":1,"message":"1089","line":37,"column":7,"nodeType":"1077","endLine":37,"endColumn":9,"suggestions":"1090"},{"ruleId":"1071","severity":1,"message":"1072","line":42,"column":23,"nodeType":"1073","messageId":"1074","endLine":42,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":43,"column":36,"nodeType":"1073","messageId":"1074","endLine":43,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":17,"column":36,"nodeType":"1073","messageId":"1074","endLine":17,"endColumn":38},{"ruleId":"1079","severity":1,"message":"1091","line":1,"column":17,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":23},{"ruleId":"1079","severity":1,"message":"1092","line":22,"column":12,"nodeType":"1081","messageId":"1082","endLine":22,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1093","line":22,"column":21,"nodeType":"1081","messageId":"1082","endLine":22,"endColumn":31},{"ruleId":"1071","severity":1,"message":"1072","line":22,"column":26,"nodeType":"1073","messageId":"1074","endLine":22,"endColumn":28},{"ruleId":"1075","severity":1,"message":"1089","line":31,"column":7,"nodeType":"1077","endLine":31,"endColumn":14,"suggestions":"1094"},{"ruleId":"1075","severity":1,"message":"1095","line":47,"column":28,"nodeType":"1077","endLine":47,"endColumn":37,"suggestions":"1096"},{"ruleId":"1071","severity":1,"message":"1072","line":58,"column":46,"nodeType":"1073","messageId":"1074","endLine":58,"endColumn":48},{"ruleId":"1075","severity":1,"message":"1097","line":35,"column":7,"nodeType":"1077","endLine":35,"endColumn":16,"suggestions":"1098"},{"ruleId":"1079","severity":1,"message":"1099","line":1,"column":8,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":17},{"ruleId":"1079","severity":1,"message":"1100","line":2,"column":9,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":29,"column":29,"nodeType":"1073","messageId":"1074","endLine":29,"endColumn":31},{"ruleId":"1075","severity":1,"message":"1101","line":34,"column":7,"nodeType":"1077","endLine":34,"endColumn":9,"suggestions":"1102"},{"ruleId":"1079","severity":1,"message":"1103","line":2,"column":9,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1104","line":10,"column":7,"nodeType":"1081","messageId":"1082","endLine":10,"endColumn":20},{"ruleId":"1071","severity":1,"message":"1072","line":24,"column":29,"nodeType":"1073","messageId":"1074","endLine":24,"endColumn":31},{"ruleId":"1075","severity":1,"message":"1105","line":29,"column":7,"nodeType":"1077","endLine":29,"endColumn":9,"suggestions":"1106"},{"ruleId":"1071","severity":1,"message":"1072","line":29,"column":30,"nodeType":"1073","messageId":"1074","endLine":29,"endColumn":32},{"ruleId":"1075","severity":1,"message":"1105","line":38,"column":7,"nodeType":"1077","endLine":38,"endColumn":9,"suggestions":"1107"},{"ruleId":"1079","severity":1,"message":"1108","line":6,"column":9,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":15},{"ruleId":"1079","severity":1,"message":"1109","line":6,"column":17,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":20},{"ruleId":"1079","severity":1,"message":"1110","line":6,"column":60,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":63},{"ruleId":"1079","severity":1,"message":"1111","line":6,"column":65,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":69},{"ruleId":"1079","severity":1,"message":"1112","line":7,"column":8,"nodeType":"1081","messageId":"1082","endLine":7,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1113","line":8,"column":8,"nodeType":"1081","messageId":"1082","endLine":8,"endColumn":17},{"ruleId":"1079","severity":1,"message":"1114","line":9,"column":8,"nodeType":"1081","messageId":"1082","endLine":9,"endColumn":30},{"ruleId":"1079","severity":1,"message":"1115","line":10,"column":8,"nodeType":"1081","messageId":"1082","endLine":10,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1116","line":13,"column":8,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":21},{"ruleId":"1079","severity":1,"message":"1104","line":16,"column":7,"nodeType":"1081","messageId":"1082","endLine":16,"endColumn":20},{"ruleId":"1071","severity":1,"message":"1072","line":31,"column":29,"nodeType":"1073","messageId":"1074","endLine":31,"endColumn":31},{"ruleId":"1075","severity":1,"message":"1105","line":36,"column":7,"nodeType":"1077","endLine":36,"endColumn":9,"suggestions":"1117"},{"ruleId":"1118","severity":1,"message":"1119","line":1,"column":1,"nodeType":"1120","endLine":35,"endColumn":3},{"ruleId":"1118","severity":1,"message":"1121","line":1,"column":1,"nodeType":"1120","endLine":27,"endColumn":3},{"ruleId":"1075","severity":1,"message":"1122","line":88,"column":6,"nodeType":"1077","endLine":88,"endColumn":15,"suggestions":"1123"},{"ruleId":"1079","severity":1,"message":"1124","line":40,"column":7,"nodeType":"1081","messageId":"1082","endLine":40,"endColumn":14},{"ruleId":"1067","severity":1,"message":"1068","line":7,"column":1,"nodeType":"1069","messageId":"1070","endLine":7,"endColumn":55},{"ruleId":"1075","severity":1,"message":"1125","line":98,"column":6,"nodeType":"1077","endLine":98,"endColumn":8,"suggestions":"1126"},{"ruleId":"1075","severity":1,"message":"1127","line":164,"column":22,"nodeType":"1077","endLine":164,"endColumn":37,"suggestions":"1128"},{"ruleId":"1079","severity":1,"message":"1100","line":4,"column":5,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":14},{"ruleId":"1079","severity":1,"message":"1129","line":6,"column":28,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":33},{"ruleId":"1079","severity":1,"message":"1130","line":8,"column":8,"nodeType":"1081","messageId":"1082","endLine":8,"endColumn":12},{"ruleId":"1079","severity":1,"message":"1086","line":11,"column":10,"nodeType":"1081","messageId":"1082","endLine":11,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1131","line":15,"column":8,"nodeType":"1081","messageId":"1082","endLine":15,"endColumn":25},{"ruleId":"1075","severity":1,"message":"1132","line":48,"column":8,"nodeType":"1077","endLine":48,"endColumn":31,"suggestions":"1133"},{"ruleId":"1067","severity":1,"message":"1068","line":7,"column":1,"nodeType":"1069","messageId":"1070","endLine":7,"endColumn":23},{"ruleId":"1079","severity":1,"message":"1134","line":1,"column":8,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":13},{"ruleId":"1079","severity":1,"message":"1135","line":16,"column":9,"nodeType":"1081","messageId":"1082","endLine":16,"endColumn":25},{"ruleId":"1075","severity":1,"message":"1136","line":21,"column":7,"nodeType":"1077","endLine":21,"endColumn":21,"suggestions":"1137"},{"ruleId":"1138","severity":1,"message":"1139","line":78,"column":33,"nodeType":"1140","messageId":"1141","endLine":78,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":79,"column":25,"nodeType":"1073","messageId":"1074","endLine":79,"endColumn":27},{"ruleId":"1075","severity":1,"message":"1142","line":96,"column":7,"nodeType":"1077","endLine":96,"endColumn":9,"suggestions":"1143"},{"ruleId":"1075","severity":1,"message":"1144","line":102,"column":7,"nodeType":"1077","endLine":102,"endColumn":22,"suggestions":"1145"},{"ruleId":"1075","severity":1,"message":"1146","line":110,"column":7,"nodeType":"1077","endLine":110,"endColumn":16,"suggestions":"1147"},{"ruleId":"1075","severity":1,"message":"1148","line":114,"column":7,"nodeType":"1077","endLine":114,"endColumn":16,"suggestions":"1149"},{"ruleId":"1079","severity":1,"message":"1150","line":29,"column":7,"nodeType":"1081","messageId":"1082","endLine":29,"endColumn":16},{"ruleId":"1138","severity":1,"message":"1139","line":119,"column":54,"nodeType":"1140","messageId":"1141","endLine":119,"endColumn":56},{"ruleId":"1138","severity":1,"message":"1139","line":120,"column":51,"nodeType":"1140","messageId":"1141","endLine":120,"endColumn":53},{"ruleId":"1138","severity":1,"message":"1139","line":158,"column":54,"nodeType":"1140","messageId":"1141","endLine":158,"endColumn":56},{"ruleId":"1138","severity":1,"message":"1139","line":159,"column":51,"nodeType":"1140","messageId":"1141","endLine":159,"endColumn":53},{"ruleId":"1075","severity":1,"message":"1151","line":197,"column":7,"nodeType":"1077","endLine":197,"endColumn":16,"suggestions":"1152"},{"ruleId":"1079","severity":1,"message":"1153","line":22,"column":9,"nodeType":"1081","messageId":"1082","endLine":22,"endColumn":21},{"ruleId":"1138","severity":1,"message":"1139","line":56,"column":39,"nodeType":"1140","messageId":"1141","endLine":56,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":64,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":66},{"ruleId":"1071","severity":1,"message":"1072","line":68,"column":65,"nodeType":"1073","messageId":"1074","endLine":68,"endColumn":67},{"ruleId":"1071","severity":1,"message":"1072","line":170,"column":52,"nodeType":"1073","messageId":"1074","endLine":170,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":170,"column":99,"nodeType":"1073","messageId":"1074","endLine":170,"endColumn":101},{"ruleId":"1071","severity":1,"message":"1072","line":209,"column":59,"nodeType":"1073","messageId":"1074","endLine":209,"endColumn":61},{"ruleId":"1075","severity":1,"message":"1154","line":138,"column":7,"nodeType":"1077","endLine":138,"endColumn":9,"suggestions":"1155"},{"ruleId":"1075","severity":1,"message":"1156","line":146,"column":7,"nodeType":"1077","endLine":146,"endColumn":29,"suggestions":"1157"},{"ruleId":"1075","severity":1,"message":"1158","line":152,"column":7,"nodeType":"1077","endLine":152,"endColumn":31,"suggestions":"1159"},{"ruleId":"1071","severity":1,"message":"1072","line":281,"column":66,"nodeType":"1073","messageId":"1074","endLine":281,"endColumn":68},{"ruleId":"1071","severity":1,"message":"1072","line":305,"column":66,"nodeType":"1073","messageId":"1074","endLine":305,"endColumn":68},{"ruleId":"1079","severity":1,"message":"1092","line":25,"column":12,"nodeType":"1081","messageId":"1082","endLine":25,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1160","line":6,"column":5,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":14},{"ruleId":"1067","severity":1,"message":"1161","line":47,"column":5,"nodeType":"1069","messageId":"1162","endLine":47,"endColumn":29},{"ruleId":"1075","severity":1,"message":"1163","line":198,"column":7,"nodeType":"1077","endLine":198,"endColumn":16,"suggestions":"1164"},{"ruleId":"1079","severity":1,"message":"1165","line":15,"column":53,"nodeType":"1081","messageId":"1082","endLine":15,"endColumn":73},{"ruleId":"1075","severity":1,"message":"1166","line":182,"column":7,"nodeType":"1077","endLine":182,"endColumn":28,"suggestions":"1167"},{"ruleId":"1138","severity":1,"message":"1168","line":211,"column":59,"nodeType":"1140","messageId":"1169","endLine":211,"endColumn":61},{"ruleId":"1071","severity":1,"message":"1072","line":212,"column":58,"nodeType":"1073","messageId":"1074","endLine":212,"endColumn":60},{"ruleId":"1071","severity":1,"message":"1072","line":264,"column":72,"nodeType":"1073","messageId":"1074","endLine":264,"endColumn":74},{"ruleId":"1071","severity":1,"message":"1072","line":278,"column":116,"nodeType":"1073","messageId":"1074","endLine":278,"endColumn":118},{"ruleId":"1071","severity":1,"message":"1072","line":285,"column":87,"nodeType":"1073","messageId":"1074","endLine":285,"endColumn":89},{"ruleId":"1071","severity":1,"message":"1072","line":300,"column":78,"nodeType":"1073","messageId":"1074","endLine":300,"endColumn":80},{"ruleId":"1071","severity":1,"message":"1072","line":314,"column":118,"nodeType":"1073","messageId":"1074","endLine":314,"endColumn":120},{"ruleId":"1071","severity":1,"message":"1072","line":321,"column":89,"nodeType":"1073","messageId":"1074","endLine":321,"endColumn":91},{"ruleId":"1079","severity":1,"message":"1170","line":51,"column":12,"nodeType":"1081","messageId":"1082","endLine":51,"endColumn":23},{"ruleId":"1079","severity":1,"message":"1171","line":51,"column":24,"nodeType":"1081","messageId":"1082","endLine":51,"endColumn":38},{"ruleId":"1079","severity":1,"message":"1172","line":52,"column":12,"nodeType":"1081","messageId":"1082","endLine":52,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1173","line":52,"column":26,"nodeType":"1081","messageId":"1082","endLine":52,"endColumn":42},{"ruleId":"1079","severity":1,"message":"1174","line":53,"column":12,"nodeType":"1081","messageId":"1082","endLine":53,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1175","line":53,"column":17,"nodeType":"1081","messageId":"1082","endLine":53,"endColumn":24},{"ruleId":"1079","severity":1,"message":"1176","line":54,"column":12,"nodeType":"1081","messageId":"1082","endLine":54,"endColumn":21},{"ruleId":"1079","severity":1,"message":"1177","line":54,"column":22,"nodeType":"1081","messageId":"1082","endLine":54,"endColumn":34},{"ruleId":"1075","severity":1,"message":"1178","line":91,"column":7,"nodeType":"1077","endLine":91,"endColumn":16,"suggestions":"1179"},{"ruleId":"1079","severity":1,"message":"1180","line":2,"column":8,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":13},{"ruleId":"1075","severity":1,"message":"1181","line":71,"column":23,"nodeType":"1182","endLine":73,"endColumn":19},{"ruleId":"1183","severity":1,"message":"1184","line":72,"column":44,"nodeType":"1185","messageId":"1186","endLine":72,"endColumn":57,"fix":"1187"},{"ruleId":"1075","severity":1,"message":"1188","line":75,"column":23,"nodeType":"1182","endLine":77,"endColumn":19},{"ruleId":"1075","severity":1,"message":"1189","line":148,"column":7,"nodeType":"1077","endLine":148,"endColumn":9,"suggestions":"1190"},{"ruleId":"1075","severity":1,"message":"1191","line":152,"column":7,"nodeType":"1077","endLine":152,"endColumn":16,"suggestions":"1192"},{"ruleId":"1075","severity":1,"message":"1193","line":170,"column":7,"nodeType":"1077","endLine":170,"endColumn":9,"suggestions":"1194"},{"ruleId":"1075","severity":1,"message":"1195","line":174,"column":7,"nodeType":"1077","endLine":174,"endColumn":16,"suggestions":"1196"},{"ruleId":"1071","severity":1,"message":"1072","line":41,"column":42,"nodeType":"1073","messageId":"1074","endLine":41,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1072","line":43,"column":41,"nodeType":"1073","messageId":"1074","endLine":43,"endColumn":43},{"ruleId":"1075","severity":1,"message":"1197","line":88,"column":7,"nodeType":"1077","endLine":88,"endColumn":16,"suggestions":"1198"},{"ruleId":"1075","severity":1,"message":"1163","line":197,"column":7,"nodeType":"1077","endLine":197,"endColumn":16,"suggestions":"1199"},{"ruleId":"1075","severity":1,"message":"1200","line":37,"column":7,"nodeType":"1077","endLine":37,"endColumn":9,"suggestions":"1201"},{"ruleId":"1075","severity":1,"message":"1202","line":41,"column":7,"nodeType":"1077","endLine":41,"endColumn":13,"suggestions":"1203"},{"ruleId":"1075","severity":1,"message":"1204","line":42,"column":7,"nodeType":"1077","endLine":42,"endColumn":16,"suggestions":"1205"},{"ruleId":"1079","severity":1,"message":"1206","line":2,"column":10,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1207","line":13,"column":3,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":14},{"ruleId":"1075","severity":1,"message":"1208","line":106,"column":6,"nodeType":"1077","endLine":106,"endColumn":8,"suggestions":"1209"},{"ruleId":"1079","severity":1,"message":"1206","line":2,"column":10,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1210","line":3,"column":13,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1211","line":8,"column":3,"nodeType":"1081","messageId":"1082","endLine":8,"endColumn":13},{"ruleId":"1079","severity":1,"message":"1212","line":21,"column":8,"nodeType":"1081","messageId":"1082","endLine":21,"endColumn":17},{"ruleId":"1075","severity":1,"message":"1213","line":108,"column":6,"nodeType":"1077","endLine":108,"endColumn":31,"suggestions":"1214"},{"ruleId":"1071","severity":1,"message":"1215","line":118,"column":59,"nodeType":"1073","messageId":"1074","endLine":118,"endColumn":61},{"ruleId":"1079","severity":1,"message":"1083","line":1,"column":28,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":36},{"ruleId":"1079","severity":1,"message":"1216","line":4,"column":9,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1217","line":5,"column":10,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1218","line":29,"column":10,"nodeType":"1081","messageId":"1082","endLine":29,"endColumn":22},{"ruleId":"1079","severity":1,"message":"1092","line":31,"column":21,"nodeType":"1081","messageId":"1082","endLine":31,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":63,"column":35,"nodeType":"1073","messageId":"1074","endLine":63,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1072","line":99,"column":33,"nodeType":"1073","messageId":"1074","endLine":99,"endColumn":35},{"ruleId":"1079","severity":1,"message":"1134","line":1,"column":8,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":13},{"ruleId":"1079","severity":1,"message":"1180","line":3,"column":8,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":13},{"ruleId":"1079","severity":1,"message":"1219","line":1,"column":8,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":14},{"ruleId":"1079","severity":1,"message":"1220","line":15,"column":25,"nodeType":"1081","messageId":"1082","endLine":15,"endColumn":45},{"ruleId":"1079","severity":1,"message":"1221","line":25,"column":9,"nodeType":"1081","messageId":"1082","endLine":25,"endColumn":20},{"ruleId":"1079","severity":1,"message":"1084","line":26,"column":9,"nodeType":"1081","messageId":"1082","endLine":26,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1083","line":26,"column":21,"nodeType":"1081","messageId":"1082","endLine":26,"endColumn":29},{"ruleId":"1079","severity":1,"message":"1222","line":5,"column":31,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":55},{"ruleId":"1079","severity":1,"message":"1210","line":3,"column":13,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1223","line":18,"column":11,"nodeType":"1081","messageId":"1082","endLine":18,"endColumn":15},{"ruleId":"1079","severity":1,"message":"1165","line":7,"column":9,"nodeType":"1081","messageId":"1082","endLine":7,"endColumn":29},{"ruleId":"1079","severity":1,"message":"1224","line":7,"column":62,"nodeType":"1081","messageId":"1082","endLine":7,"endColumn":77},{"ruleId":"1075","severity":1,"message":"1225","line":92,"column":7,"nodeType":"1077","endLine":92,"endColumn":16,"suggestions":"1226"},{"ruleId":"1071","severity":1,"message":"1072","line":95,"column":22,"nodeType":"1073","messageId":"1074","endLine":95,"endColumn":24},{"ruleId":"1075","severity":1,"message":"1227","line":103,"column":7,"nodeType":"1077","endLine":103,"endColumn":17,"suggestions":"1228"},{"ruleId":"1071","severity":1,"message":"1072","line":149,"column":47,"nodeType":"1073","messageId":"1074","endLine":149,"endColumn":49},{"ruleId":"1075","severity":1,"message":"1229","line":96,"column":7,"nodeType":"1077","endLine":96,"endColumn":16,"suggestions":"1230"},{"ruleId":"1071","severity":1,"message":"1072","line":99,"column":22,"nodeType":"1073","messageId":"1074","endLine":99,"endColumn":24},{"ruleId":"1075","severity":1,"message":"1231","line":107,"column":7,"nodeType":"1077","endLine":107,"endColumn":17,"suggestions":"1232"},{"ruleId":"1071","severity":1,"message":"1072","line":153,"column":51,"nodeType":"1073","messageId":"1074","endLine":153,"endColumn":53},{"ruleId":"1071","severity":1,"message":"1072","line":28,"column":54,"nodeType":"1073","messageId":"1074","endLine":28,"endColumn":56},{"ruleId":"1071","severity":1,"message":"1072","line":29,"column":51,"nodeType":"1073","messageId":"1074","endLine":29,"endColumn":53},{"ruleId":"1071","severity":1,"message":"1072","line":40,"column":53,"nodeType":"1073","messageId":"1074","endLine":40,"endColumn":55},{"ruleId":"1079","severity":1,"message":"1224","line":5,"column":31,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":46},{"ruleId":"1233","severity":1,"message":"1234","line":27,"column":47,"nodeType":"1185","messageId":"1235","endLine":27,"endColumn":48,"fix":"1236"},{"ruleId":"1233","severity":1,"message":"1234","line":29,"column":45,"nodeType":"1185","messageId":"1235","endLine":29,"endColumn":46,"fix":"1237"},{"ruleId":"1071","severity":1,"message":"1215","line":33,"column":23,"nodeType":"1073","messageId":"1074","endLine":33,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":156,"column":66,"nodeType":"1073","messageId":"1074","endLine":156,"endColumn":68},{"ruleId":"1071","severity":1,"message":"1072","line":182,"column":66,"nodeType":"1073","messageId":"1074","endLine":182,"endColumn":68},{"ruleId":"1079","severity":1,"message":"1238","line":22,"column":7,"nodeType":"1081","messageId":"1082","endLine":22,"endColumn":12},{"ruleId":"1079","severity":1,"message":"1239","line":44,"column":9,"nodeType":"1081","messageId":"1082","endLine":44,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":40,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":42},{"ruleId":"1071","severity":1,"message":"1072","line":65,"column":39,"nodeType":"1073","messageId":"1074","endLine":65,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1072","line":70,"column":41,"nodeType":"1073","messageId":"1074","endLine":70,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":42,"nodeType":"1073","messageId":"1074","endLine":80,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1072","line":90,"column":35,"nodeType":"1073","messageId":"1074","endLine":90,"endColumn":37},{"ruleId":"1079","severity":1,"message":"1240","line":105,"column":5,"nodeType":"1081","messageId":"1082","endLine":105,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":133,"column":30,"nodeType":"1073","messageId":"1074","endLine":133,"endColumn":32},{"ruleId":"1138","severity":1,"message":"1168","line":147,"column":36,"nodeType":"1140","messageId":"1169","endLine":147,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":158,"column":30,"nodeType":"1073","messageId":"1074","endLine":158,"endColumn":32},{"ruleId":"1138","severity":1,"message":"1168","line":172,"column":38,"nodeType":"1140","messageId":"1169","endLine":172,"endColumn":40},{"ruleId":"1079","severity":1,"message":"1241","line":3,"column":9,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":35},{"ruleId":"1079","severity":1,"message":"1242","line":3,"column":58,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":82},{"ruleId":"1079","severity":1,"message":"1243","line":4,"column":8,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1244","line":5,"column":9,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1245","line":5,"column":18,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":30},{"ruleId":"1079","severity":1,"message":"1246","line":5,"column":32,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":38},{"ruleId":"1079","severity":1,"message":"1247","line":6,"column":9,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1248","line":6,"column":27,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":41},{"ruleId":"1075","severity":1,"message":"1249","line":42,"column":7,"nodeType":"1077","endLine":42,"endColumn":30,"suggestions":"1250"},{"ruleId":"1079","severity":1,"message":"1251","line":5,"column":5,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":34},{"ruleId":"1071","severity":1,"message":"1215","line":30,"column":23,"nodeType":"1073","messageId":"1074","endLine":30,"endColumn":25},{"ruleId":"1075","severity":1,"message":"1097","line":79,"column":7,"nodeType":"1077","endLine":79,"endColumn":13,"suggestions":"1252"},{"ruleId":"1075","severity":1,"message":"1097","line":88,"column":7,"nodeType":"1077","endLine":88,"endColumn":36,"suggestions":"1253"},{"ruleId":"1079","severity":1,"message":"1241","line":2,"column":9,"nodeType":"1081","messageId":"1082","endLine":2,"endColumn":35},{"ruleId":"1079","severity":1,"message":"1245","line":3,"column":9,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":21},{"ruleId":"1079","severity":1,"message":"1254","line":8,"column":5,"nodeType":"1081","messageId":"1082","endLine":8,"endColumn":9},{"ruleId":"1079","severity":1,"message":"1247","line":17,"column":9,"nodeType":"1081","messageId":"1082","endLine":17,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1215","line":34,"column":23,"nodeType":"1073","messageId":"1074","endLine":34,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1255","line":37,"column":23,"nodeType":"1081","messageId":"1082","endLine":37,"endColumn":36},{"ruleId":"1079","severity":1,"message":"1256","line":39,"column":21,"nodeType":"1081","messageId":"1082","endLine":39,"endColumn":32},{"ruleId":"1075","severity":1,"message":"1257","line":83,"column":7,"nodeType":"1077","endLine":83,"endColumn":9,"suggestions":"1258"},{"ruleId":"1075","severity":1,"message":"1259","line":88,"column":7,"nodeType":"1077","endLine":88,"endColumn":21,"suggestions":"1260"},{"ruleId":"1079","severity":1,"message":"1261","line":25,"column":8,"nodeType":"1081","messageId":"1082","endLine":25,"endColumn":17},{"ruleId":"1079","severity":1,"message":"1262","line":29,"column":9,"nodeType":"1081","messageId":"1082","endLine":29,"endColumn":24},{"ruleId":"1079","severity":1,"message":"1263","line":29,"column":26,"nodeType":"1081","messageId":"1082","endLine":29,"endColumn":40},{"ruleId":"1079","severity":1,"message":"1264","line":30,"column":8,"nodeType":"1081","messageId":"1082","endLine":30,"endColumn":24},{"ruleId":"1075","severity":1,"message":"1249","line":65,"column":8,"nodeType":"1077","endLine":65,"endColumn":10,"suggestions":"1265"},{"ruleId":"1079","severity":1,"message":"1088","line":9,"column":12,"nodeType":"1081","messageId":"1082","endLine":9,"endColumn":20},{"ruleId":"1079","severity":1,"message":"1266","line":9,"column":9,"nodeType":"1081","messageId":"1082","endLine":9,"endColumn":24},{"ruleId":"1079","severity":1,"message":"1093","line":31,"column":21,"nodeType":"1081","messageId":"1082","endLine":31,"endColumn":31},{"ruleId":"1079","severity":1,"message":"1093","line":31,"column":20,"nodeType":"1081","messageId":"1082","endLine":31,"endColumn":30},{"ruleId":"1079","severity":1,"message":"1267","line":33,"column":26,"nodeType":"1081","messageId":"1082","endLine":33,"endColumn":42},{"ruleId":"1079","severity":1,"message":"1268","line":36,"column":11,"nodeType":"1081","messageId":"1082","endLine":36,"endColumn":24},{"ruleId":"1079","severity":1,"message":"1092","line":15,"column":12,"nodeType":"1081","messageId":"1082","endLine":15,"endColumn":19},{"ruleId":"1079","severity":1,"message":"1269","line":19,"column":11,"nodeType":"1081","messageId":"1082","endLine":19,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":50,"column":24,"nodeType":"1073","messageId":"1074","endLine":50,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":71,"column":32,"nodeType":"1073","messageId":"1074","endLine":71,"endColumn":34},{"ruleId":"1071","severity":1,"message":"1072","line":90,"column":36,"nodeType":"1073","messageId":"1074","endLine":90,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":92,"column":69,"nodeType":"1073","messageId":"1074","endLine":92,"endColumn":71},{"ruleId":"1138","severity":1,"message":"1139","line":15,"column":27,"nodeType":"1140","messageId":"1141","endLine":15,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":16,"column":25,"nodeType":"1073","messageId":"1074","endLine":16,"endColumn":27},{"ruleId":"1138","severity":1,"message":"1139","line":19,"column":27,"nodeType":"1140","messageId":"1141","endLine":19,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":20,"column":25,"nodeType":"1073","messageId":"1074","endLine":20,"endColumn":27},{"ruleId":"1138","severity":1,"message":"1139","line":31,"column":29,"nodeType":"1140","messageId":"1141","endLine":31,"endColumn":31},{"ruleId":"1079","severity":1,"message":"1206","line":4,"column":9,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":15},{"ruleId":"1079","severity":1,"message":"1270","line":4,"column":5,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1242","line":17,"column":35,"nodeType":"1081","messageId":"1082","endLine":17,"endColumn":59},{"ruleId":"1079","severity":1,"message":"1271","line":16,"column":8,"nodeType":"1081","messageId":"1082","endLine":16,"endColumn":20},{"ruleId":"1079","severity":1,"message":"1086","line":17,"column":9,"nodeType":"1081","messageId":"1082","endLine":17,"endColumn":18},{"ruleId":"1079","severity":1,"message":"1165","line":18,"column":9,"nodeType":"1081","messageId":"1082","endLine":18,"endColumn":29},{"ruleId":"1079","severity":1,"message":"1272","line":18,"column":31,"nodeType":"1081","messageId":"1082","endLine":18,"endColumn":62},{"ruleId":"1079","severity":1,"message":"1273","line":18,"column":64,"nodeType":"1081","messageId":"1082","endLine":18,"endColumn":89},{"ruleId":"1079","severity":1,"message":"1243","line":19,"column":8,"nodeType":"1081","messageId":"1082","endLine":19,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1274","line":33,"column":18,"nodeType":"1081","messageId":"1082","endLine":33,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":107,"column":35,"nodeType":"1073","messageId":"1074","endLine":107,"endColumn":37},{"ruleId":"1275","severity":1,"message":"1276","line":18,"column":3,"nodeType":"1277","messageId":"1278","endLine":18,"endColumn":15,"fix":"1279"},{"ruleId":"1071","severity":1,"message":"1072","line":62,"column":37,"nodeType":"1073","messageId":"1074","endLine":62,"endColumn":39},{"ruleId":"1071","severity":1,"message":"1072","line":66,"column":42,"nodeType":"1073","messageId":"1074","endLine":66,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1072","line":70,"column":40,"nodeType":"1073","messageId":"1074","endLine":70,"endColumn":42},{"ruleId":"1071","severity":1,"message":"1072","line":74,"column":39,"nodeType":"1073","messageId":"1074","endLine":74,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1072","line":78,"column":41,"nodeType":"1073","messageId":"1074","endLine":78,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":82,"column":43,"nodeType":"1073","messageId":"1074","endLine":82,"endColumn":45},{"ruleId":"1071","severity":1,"message":"1072","line":86,"column":42,"nodeType":"1073","messageId":"1074","endLine":86,"endColumn":44},{"ruleId":"1075","severity":1,"message":"1280","line":92,"column":6,"nodeType":"1077","endLine":92,"endColumn":8,"suggestions":"1281"},{"ruleId":"1138","severity":1,"message":"1168","line":105,"column":35,"nodeType":"1140","messageId":"1169","endLine":105,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1072","line":126,"column":30,"nodeType":"1073","messageId":"1074","endLine":126,"endColumn":32},{"ruleId":"1071","severity":1,"message":"1072","line":138,"column":52,"nodeType":"1073","messageId":"1074","endLine":138,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":151,"column":27,"nodeType":"1073","messageId":"1074","endLine":151,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":199,"column":31,"nodeType":"1073","messageId":"1074","endLine":199,"endColumn":33},{"ruleId":"1079","severity":1,"message":"1274","line":12,"column":18,"nodeType":"1081","messageId":"1082","endLine":12,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1244","line":5,"column":9,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1246","line":5,"column":18,"nodeType":"1081","messageId":"1082","endLine":5,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1072","line":26,"column":17,"nodeType":"1073","messageId":"1074","endLine":26,"endColumn":19},{"ruleId":"1075","severity":1,"message":"1282","line":31,"column":7,"nodeType":"1077","endLine":31,"endColumn":16,"suggestions":"1283"},{"ruleId":"1079","severity":1,"message":"1207","line":4,"column":5,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1284","line":4,"column":18,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":25},{"ruleId":"1079","severity":1,"message":"1211","line":4,"column":27,"nodeType":"1081","messageId":"1082","endLine":4,"endColumn":37},{"ruleId":"1079","severity":1,"message":"1206","line":12,"column":9,"nodeType":"1081","messageId":"1082","endLine":12,"endColumn":15},{"ruleId":"1079","severity":1,"message":"1084","line":13,"column":16,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":26},{"ruleId":"1079","severity":1,"message":"1083","line":13,"column":28,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":36},{"ruleId":"1079","severity":1,"message":"1221","line":14,"column":9,"nodeType":"1081","messageId":"1082","endLine":14,"endColumn":20},{"ruleId":"1079","severity":1,"message":"1285","line":15,"column":19,"nodeType":"1081","messageId":"1082","endLine":15,"endColumn":23},{"ruleId":"1138","severity":1,"message":"1139","line":69,"column":55,"nodeType":"1140","messageId":"1141","endLine":69,"endColumn":57},{"ruleId":"1079","severity":1,"message":"1286","line":17,"column":35,"nodeType":"1081","messageId":"1082","endLine":17,"endColumn":50},{"ruleId":"1079","severity":1,"message":"1287","line":31,"column":10,"nodeType":"1081","messageId":"1082","endLine":31,"endColumn":18},{"ruleId":"1079","severity":1,"message":"1288","line":31,"column":20,"nodeType":"1081","messageId":"1082","endLine":31,"endColumn":31},{"ruleId":"1079","severity":1,"message":"1289","line":32,"column":10,"nodeType":"1081","messageId":"1082","endLine":32,"endColumn":15},{"ruleId":"1079","severity":1,"message":"1290","line":32,"column":17,"nodeType":"1081","messageId":"1082","endLine":32,"endColumn":25},{"ruleId":"1138","severity":1,"message":"1139","line":84,"column":29,"nodeType":"1140","messageId":"1141","endLine":84,"endColumn":31},{"ruleId":"1075","severity":1,"message":"1249","line":99,"column":6,"nodeType":"1077","endLine":99,"endColumn":27,"suggestions":"1291"},{"ruleId":"1071","severity":1,"message":"1072","line":108,"column":33,"nodeType":"1073","messageId":"1074","endLine":108,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":118,"column":33,"nodeType":"1073","messageId":"1074","endLine":118,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":140,"column":39,"nodeType":"1073","messageId":"1074","endLine":140,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1072","line":152,"column":41,"nodeType":"1073","messageId":"1074","endLine":152,"endColumn":43},{"ruleId":"1079","severity":1,"message":"1093","line":27,"column":21,"nodeType":"1081","messageId":"1082","endLine":27,"endColumn":31},{"ruleId":"1075","severity":1,"message":"1249","line":49,"column":7,"nodeType":"1077","endLine":49,"endColumn":30,"suggestions":"1292"},{"ruleId":"1079","severity":1,"message":"1160","line":8,"column":3,"nodeType":"1081","messageId":"1082","endLine":8,"endColumn":12},{"ruleId":"1079","severity":1,"message":"1293","line":10,"column":50,"nodeType":"1081","messageId":"1082","endLine":10,"endColumn":67},{"ruleId":"1071","severity":1,"message":"1072","line":69,"column":32,"nodeType":"1073","messageId":"1074","endLine":69,"endColumn":34},{"ruleId":"1071","severity":1,"message":"1072","line":93,"column":36,"nodeType":"1073","messageId":"1074","endLine":93,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":107,"column":40,"nodeType":"1073","messageId":"1074","endLine":107,"endColumn":42},{"ruleId":"1079","severity":1,"message":"1109","line":1,"column":17,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":20},{"ruleId":"1079","severity":1,"message":"1087","line":1,"column":22,"nodeType":"1081","messageId":"1082","endLine":1,"endColumn":32},{"ruleId":"1071","severity":1,"message":"1215","line":30,"column":23,"nodeType":"1073","messageId":"1074","endLine":30,"endColumn":25},{"ruleId":"1138","severity":1,"message":"1139","line":96,"column":33,"nodeType":"1140","messageId":"1141","endLine":96,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":97,"column":25,"nodeType":"1073","messageId":"1074","endLine":97,"endColumn":27},{"ruleId":"1075","severity":1,"message":"1097","line":107,"column":7,"nodeType":"1077","endLine":107,"endColumn":13,"suggestions":"1294"},{"ruleId":"1075","severity":1,"message":"1295","line":116,"column":7,"nodeType":"1077","endLine":116,"endColumn":36,"suggestions":"1296"},{"ruleId":"1079","severity":1,"message":"1219","line":6,"column":8,"nodeType":"1081","messageId":"1082","endLine":6,"endColumn":14},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":25,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":50,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":52},{"ruleId":"1138","severity":1,"message":"1139","line":52,"column":26,"nodeType":"1140","messageId":"1141","endLine":52,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":53,"column":21,"nodeType":"1073","messageId":"1074","endLine":53,"endColumn":23},{"ruleId":"1138","severity":1,"message":"1139","line":66,"column":26,"nodeType":"1140","messageId":"1141","endLine":66,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":67,"column":21,"nodeType":"1073","messageId":"1074","endLine":67,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1215","line":79,"column":27,"nodeType":"1073","messageId":"1074","endLine":79,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1215","line":92,"column":39,"nodeType":"1073","messageId":"1074","endLine":92,"endColumn":41},{"ruleId":"1071","severity":1,"message":"1072","line":115,"column":74,"nodeType":"1073","messageId":"1074","endLine":115,"endColumn":76},{"ruleId":"1071","severity":1,"message":"1072","line":127,"column":37,"nodeType":"1073","messageId":"1074","endLine":127,"endColumn":39},{"ruleId":"1071","severity":1,"message":"1072","line":144,"column":37,"nodeType":"1073","messageId":"1074","endLine":144,"endColumn":39},{"ruleId":"1071","severity":1,"message":"1072","line":158,"column":38,"nodeType":"1073","messageId":"1074","endLine":158,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1215","line":158,"column":52,"nodeType":"1073","messageId":"1074","endLine":158,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":184,"column":41,"nodeType":"1073","messageId":"1074","endLine":184,"endColumn":43},{"ruleId":"1075","severity":1,"message":"1249","line":59,"column":7,"nodeType":"1077","endLine":59,"endColumn":30,"suggestions":"1297"},{"ruleId":"1071","severity":1,"message":"1072","line":141,"column":60,"nodeType":"1073","messageId":"1074","endLine":141,"endColumn":62},{"ruleId":"1079","severity":1,"message":"1210","line":3,"column":13,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":139,"column":27,"nodeType":"1073","messageId":"1074","endLine":139,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":159,"column":28,"nodeType":"1073","messageId":"1074","endLine":159,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1072","line":159,"column":46,"nodeType":"1073","messageId":"1074","endLine":159,"endColumn":48},{"ruleId":"1071","severity":1,"message":"1072","line":172,"column":28,"nodeType":"1073","messageId":"1074","endLine":172,"endColumn":30},{"ruleId":"1071","severity":1,"message":"1072","line":172,"column":46,"nodeType":"1073","messageId":"1074","endLine":172,"endColumn":48},{"ruleId":"1071","severity":1,"message":"1072","line":64,"column":24,"nodeType":"1073","messageId":"1074","endLine":64,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":64,"column":44,"nodeType":"1073","messageId":"1074","endLine":64,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":26,"nodeType":"1073","messageId":"1074","endLine":80,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":46,"nodeType":"1073","messageId":"1074","endLine":80,"endColumn":48},{"ruleId":"1071","severity":1,"message":"1072","line":90,"column":26,"nodeType":"1073","messageId":"1074","endLine":90,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":90,"column":46,"nodeType":"1073","messageId":"1074","endLine":90,"endColumn":48},{"ruleId":"1079","severity":1,"message":"1298","line":18,"column":5,"nodeType":"1081","messageId":"1082","endLine":18,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":68,"column":41,"nodeType":"1073","messageId":"1074","endLine":68,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1215","line":108,"column":26,"nodeType":"1073","messageId":"1074","endLine":108,"endColumn":28},{"ruleId":"1075","severity":1,"message":"1299","line":151,"column":7,"nodeType":"1077","endLine":151,"endColumn":30,"suggestions":"1300"},{"ruleId":"1071","severity":1,"message":"1072","line":204,"column":43,"nodeType":"1073","messageId":"1074","endLine":204,"endColumn":45},{"ruleId":"1071","severity":1,"message":"1072","line":215,"column":77,"nodeType":"1073","messageId":"1074","endLine":215,"endColumn":79},{"ruleId":"1071","severity":1,"message":"1072","line":221,"column":52,"nodeType":"1073","messageId":"1074","endLine":221,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":250,"column":52,"nodeType":"1073","messageId":"1074","endLine":250,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":61,"column":28,"nodeType":"1073","messageId":"1074","endLine":61,"endColumn":30},{"ruleId":"1075","severity":1,"message":"1301","line":134,"column":8,"nodeType":"1077","endLine":134,"endColumn":29,"suggestions":"1302"},{"ruleId":"1071","severity":1,"message":"1072","line":183,"column":55,"nodeType":"1073","messageId":"1074","endLine":183,"endColumn":57},{"ruleId":"1071","severity":1,"message":"1072","line":196,"column":113,"nodeType":"1073","messageId":"1074","endLine":196,"endColumn":115},{"ruleId":"1071","severity":1,"message":"1072","line":205,"column":106,"nodeType":"1073","messageId":"1074","endLine":205,"endColumn":108},{"ruleId":"1071","severity":1,"message":"1072","line":225,"column":57,"nodeType":"1073","messageId":"1074","endLine":225,"endColumn":59},{"ruleId":"1071","severity":1,"message":"1072","line":237,"column":89,"nodeType":"1073","messageId":"1074","endLine":237,"endColumn":91},{"ruleId":"1071","severity":1,"message":"1072","line":243,"column":56,"nodeType":"1073","messageId":"1074","endLine":243,"endColumn":58},{"ruleId":"1071","severity":1,"message":"1072","line":255,"column":62,"nodeType":"1073","messageId":"1074","endLine":255,"endColumn":64},{"ruleId":"1079","severity":1,"message":"1303","line":83,"column":11,"nodeType":"1081","messageId":"1082","endLine":83,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":136,"column":46,"nodeType":"1073","messageId":"1074","endLine":136,"endColumn":48},{"ruleId":"1079","severity":1,"message":"1210","line":3,"column":13,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1135","line":13,"column":53,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":69},{"ruleId":"1079","severity":1,"message":"1304","line":13,"column":70,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":86},{"ruleId":"1138","severity":1,"message":"1168","line":163,"column":35,"nodeType":"1140","messageId":"1169","endLine":163,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1072","line":164,"column":42,"nodeType":"1073","messageId":"1074","endLine":164,"endColumn":44},{"ruleId":"1079","severity":1,"message":"1210","line":3,"column":13,"nodeType":"1081","messageId":"1082","endLine":3,"endColumn":16},{"ruleId":"1079","severity":1,"message":"1305","line":13,"column":26,"nodeType":"1081","messageId":"1082","endLine":13,"endColumn":41},{"ruleId":"1079","severity":1,"message":"1306","line":21,"column":9,"nodeType":"1081","messageId":"1082","endLine":21,"endColumn":16},"no-native-reassign",["1307"],"no-negated-in-lhs",["1308"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'userInfo.isSystemMng'. Either include them or remove the dependency array.","ArrayExpression",["1309"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'jsonToUrlencoded' is defined but never used.","'postFetch' is defined but never used.","'makeStyles' is defined but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'stuId'. Either include it or remove the dependency array.",["1310"],"'useRef' is defined but never used.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.",["1311"],"React Hook useEffect has missing dependencies: 'id' and 'userInfo.isEducateMng'. Either include them or remove the dependency array.",["1312"],"React Hook useEffect has a missing dependency: 'userInfo.name'. Either include it or remove the dependency array.",["1313"],"'ViewStyle' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'userInfo.type' and 'userStuId'. Either include them or remove the dependency array.",["1314"],"'useHistory' is defined but never used.","'defaultStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'stuId' and 'userInfo.type'. Either include them or remove the dependency array.",["1315"],["1316"],"'AppBar' is defined but never used.","'Box' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'PageView' is defined but never used.","'PropTypes' is defined but never used.","'ProcessEssentialForStu' is defined but never used.","'ProcessBaseForStu' is defined but never used.","'ProcessConfig' is defined but never used.",["1317"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'hasPermission' and 'id'. Either include them or remove the dependency array.",["1318"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserList'. Either include it or remove the dependency array.",["1319"],"React Hook useEffect has a missing dependency: 'planId'. Either include it or remove the dependency array.",["1320"],"'Badge' is defined but never used.","'Page' is defined but never used.","'NotificationsIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllBulletin'. Either include it or remove the dependency array.",["1321"],"'React' is defined but never used.","'MNG_GET_ALL_USER' is defined but never used.","React Hook useEffect has a missing dependency: 'groupId'. Either include it or remove the dependency array.",["1322"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'getUserLastScore', 'nowDate', 'page', and 'userInfo.name'. Either include them or remove the dependency array.",["1323"],"React Hook useEffect has missing dependencies: 'date', 'getUserLastScore', and 'nowDate'. Either include them or remove the dependency array.",["1324"],"React Hook useEffect has missing dependencies: 'date' and 'getUserLastScore'. Either include them or remove the dependency array.",["1325"],"React Hook useEffect has missing dependencies: 'date' and 'userInfo.name'. Either include them or remove the dependency array.",["1326"],"'STUDYTYPE' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getADVCategory', 'getADVTiny', 'getBaseCategory', and 'getBaseTiny'. Either include them or remove the dependency array.",["1327"],"'getAllLeader' is defined but never used.","React Hook useEffect has missing dependencies: 'getUserLastScore', 'nowDate', 'page', 'sortNum', and 'teacherName'. Either include them or remove the dependency array.",["1328"],"React Hook useEffect has missing dependencies: 'date', 'getUserLastScore', and 'sortNum'. Either include them or remove the dependency array.",["1329"],"React Hook useEffect has missing dependencies: 'date', 'getUserLastScore', 'nowDate', and 'teacherName'. Either include them or remove the dependency array.",["1330"],"'TextField' is defined but never used.","Nested block is redundant.","redundantNestedBlock","React Hook useEffect has missing dependencies: 'getAllProcessCategory' and 'getAllTintProcessCategory'. Either include them or remove the dependency array.",["1331"],"'MNG_ADD_BULLETIN_URL' is defined but never used.","React Hook useEffect has a missing dependency: 'getGroupStudents'. Either include it or remove the dependency array.",["1332"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'confirmForm' is assigned a value but never used.","'setConfirmForm' is assigned a value but never used.","'confirmDetail' is assigned a value but never used.","'setConfirmDetail' is assigned a value but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'studyType' is assigned a value but never used.","'setStudyType' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllMission' and 'queryTeacher'. Either include them or remove the dependency array.",["1333"],"'theme' is defined but never used.","Assignments to the 'xLine' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","no-whitespace-before-property","Unexpected whitespace before property season.","MemberExpression","unexpectedWhitespace",{"range":"1334","text":"1335"},"Assignments to the 'yLine' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'queryTeacher' and 'userDetail.stuId'. Either include them or remove the dependency array.",["1336"],"React Hook useEffect has a missing dependency: 'getEssentialMission'. Either include it or remove the dependency array.",["1337"],"React Hook useEffect has missing dependencies: 'queryTeacher', 'type', and 'userDetail.stuId'. Either include them or remove the dependency array.",["1338"],"React Hook useEffect has a missing dependency: 'getBaseMission'. Either include it or remove the dependency array.",["1339"],"React Hook useEffect has missing dependencies: 'queryTeacher', 'userDetail?.id', and 'userDetail?.stuId'. Either include them or remove the dependency array.",["1340"],["1341"],"React Hook useEffect has a missing dependency: 'getTotal'. Either include it or remove the dependency array.",["1342"],"React Hook useEffect has a missing dependency: 'getGraduateInformation'. Either include it or remove the dependency array.",["1343"],"React Hook useEffect has missing dependencies: 'getAllApprove' and 'getAllDelay'. Either include them or remove the dependency array.",["1344"],"'Formik' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["1345"],"'Yup' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["1346"],"Expected '!==' and instead saw '!='.","'MARK_AS_READ_URL' is defined but never used.","'formFetch' is defined but never used.","'refreshValue' is assigned a value but never used.","'cookie' is defined but never used.","'MNG_GET_PROCESS_LIST' is defined but never used.","'UserContext' is defined but never used.","'MNG_PROCESS_GROUP_UPDATE' is defined but never used.","'time' is assigned a value but never used.","'MNG_PROCESS_ADD' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllDelay'. Either include it or remove the dependency array.",["1347"],"React Hook useEffect has missing dependencies: 'allDelay' and 'length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOnlineAgree' needs the current value of 'allDelay'.",["1348"],"React Hook useEffect has a missing dependency: 'getAllApprove'. Either include it or remove the dependency array.",["1349"],"React Hook useEffect has missing dependencies: 'allApprove' and 'length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setOnlineAgree' needs the current value of 'allApprove'.",["1350"],"dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"1351","text":"1352"},{"range":"1353","text":"1352"},"'types' is assigned a value but never used.","'handleOnRefresh' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'DOWNLOAD_WEEKLYPUBLICATION' is defined but never used.","'UPLOAD_WEEKLYPUBLICATION' is defined but never used.","'alertBox' is defined but never used.","'message' is defined but never used.","'notification' is defined but never used.","'Upload' is defined but never used.","'DownloadOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.stuId'. Either include it or remove the dependency array.",["1354"],"'MENTOR_STATISTICS_PUBLICATION' is defined but never used.",["1355"],["1356"],"'Card' is defined but never used.","'setAllApprove' is assigned a value but never used.","'setAllDelay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCount' and 'getTotal'. Either include them or remove the dependency array.",["1357"],"React Hook useEffect has missing dependencies: 'getAllStudent' and 'getAllStudentMissionStatus'. Either include them or remove the dependency array.",["1358"],"'InputIcon' is defined but never used.","'BulletinContext' is defined but never used.","'RefreshContext' is defined but never used.","'BulletinListView' is defined but never used.",["1359"],"'forceGetAllUser' is defined but never used.","'setMissionStatus' is assigned a value but never used.","'mngPermission' is assigned a value but never used.","'getLab' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'confirmModal' is defined but never used.","'MNG_PROCESS_GROUP_APPROBE_DELAY' is defined but never used.","'MNG_PROCESS_GROUP_APPROVE' is defined but never used.","'onClose' is assigned a value but never used.","no-useless-rename","Import Book unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1360","text":"1361"},"React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1362"],"React Hook useEffect has a missing dependency: 'labName'. Either include it or remove the dependency array.",["1363"],"'Divider' is defined but never used.","'List' is defined but never used.","'getProcessAlert' is defined but never used.","'editOpen' is assigned a value but never used.","'setEditOpen' is assigned a value but never used.","'stuId' is assigned a value but never used.","'setStuId' is assigned a value but never used.",["1364"],["1365"],"'GET_ALL_CLASS_URL' is defined but never used.",["1366"],"React Hook useEffect has missing dependencies: 'mentorGetWeeklyPublication' and 'userInfo.name'. Either include them or remove the dependency array.",["1367"],["1368"],"'DOWNLOAD_SEMINAR_URL' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllSection'. Either include it or remove the dependency array.",["1369"],"React Hook useEffect has missing dependencies: 'getAllGroupMembers' and 'getAllSeminar'. Either include them or remove the dependency array.",["1370"],"'refreshHistory' is assigned a value but never used.","'GET_ALL_USER_URL' is defined but never used.","'ADD_SEMINAR_URL' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1371","fix":"1372"},{"desc":"1373","fix":"1374"},{"desc":"1375","fix":"1376"},{"desc":"1377","fix":"1378"},{"desc":"1379","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1383","fix":"1384"},{"desc":"1383","fix":"1385"},{"desc":"1383","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1391","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1397","fix":"1398"},{"desc":"1399","fix":"1400"},{"desc":"1401","fix":"1402"},{"desc":"1403","fix":"1404"},{"desc":"1405","fix":"1406"},{"desc":"1407","fix":"1408"},{"desc":"1409","fix":"1410"},{"desc":"1411","fix":"1412"},{"desc":"1413","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1417","fix":"1418"},[2878,2880],".",{"desc":"1419","fix":"1420"},{"desc":"1421","fix":"1422"},{"desc":"1423","fix":"1424"},{"desc":"1425","fix":"1426"},{"desc":"1427","fix":"1428"},{"desc":"1413","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1434","fix":"1435"},{"desc":"1436","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1446","fix":"1447"},[1006,1033],"\r\n                        .",[1102,1129],{"desc":"1448","fix":"1449"},{"desc":"1450","fix":"1451"},{"desc":"1452","fix":"1453"},{"desc":"1454","fix":"1455"},{"desc":"1456","fix":"1457"},{"desc":"1458","fix":"1459"},[329,341],"Book",{"desc":"1460","fix":"1461"},{"desc":"1462","fix":"1463"},{"desc":"1464","fix":"1465"},{"desc":"1448","fix":"1466"},{"desc":"1450","fix":"1467"},{"desc":"1468","fix":"1469"},{"desc":"1448","fix":"1470"},{"desc":"1471","fix":"1472"},{"desc":"1473","fix":"1474"},"Update the dependencies array to be: [id, refresh, userInfo.isSystemMng]",{"range":"1475","text":"1476"},"Update the dependencies array to be: [stuId]",{"range":"1477","text":"1478"},"Update the dependencies array to be: [stuId, value]",{"range":"1479","text":"1480"},"Update the dependencies array to be: [id, refresh, userInfo.isEducateMng]",{"range":"1481","text":"1482"},"Update the dependencies array to be: [refresh, userInfo.name]",{"range":"1483","text":"1484"},"Update the dependencies array to be: [userInfo.type, userStuId]",{"range":"1485","text":"1486"},"Update the dependencies array to be: [stuId, userInfo.type]",{"range":"1487","text":"1488"},{"range":"1489","text":"1488"},{"range":"1490","text":"1488"},"Update the dependencies array to be: [hasPermission, id, refresh]",{"range":"1491","text":"1492"},"Update the dependencies array to be: [getUserList]",{"range":"1493","text":"1494"},"Update the dependencies array to be: [refresh, page, planId]",{"range":"1495","text":"1496"},"Update the dependencies array to be: [getAllBulletin, page, pageNo, refresh]",{"range":"1497","text":"1498"},"Update the dependencies array to be: [groupId, page, pageNo]",{"range":"1499","text":"1500"},"Update the dependencies array to be: [getUserLastScore, nowDate, page, userInfo.name]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [date, getUserLastScore, nowDate, page, refresh]",{"range":"1503","text":"1504"},"Update the dependencies array to be: [date, getUserLastScore, nowDate]",{"range":"1505","text":"1506"},"Update the dependencies array to be: [date, nowDate, userInfo.name]",{"range":"1507","text":"1508"},"Update the dependencies array to be: [getADVCategory, getADVTiny, getBaseCategory, getBaseTiny, refresh]",{"range":"1509","text":"1510"},"Update the dependencies array to be: [getUserLastScore, nowDate, page, sortNum, teacherName]",{"range":"1511","text":"1512"},"Update the dependencies array to be: [date, getUserLastScore, nowDate, sortNum, teacherName]",{"range":"1513","text":"1514"},"Update the dependencies array to be: [refresh, sortNum, page, getUserLastScore, teacherName, date, nowDate]",{"range":"1515","text":"1516"},"Update the dependencies array to be: [getAllProcessCategory, getAllTintProcessCategory, refresh]",{"range":"1517","text":"1518"},"Update the dependencies array to be: [refresh, page, pageNo, getGroupStudents]",{"range":"1519","text":"1520"},"Update the dependencies array to be: [getAllMission, queryTeacher, refresh]",{"range":"1521","text":"1522"},"Update the dependencies array to be: [queryTeacher, userDetail.stuId]",{"range":"1523","text":"1524"},"Update the dependencies array to be: [getEssentialMission, refresh]",{"range":"1525","text":"1526"},"Update the dependencies array to be: [queryTeacher, type, userDetail.stuId]",{"range":"1527","text":"1528"},"Update the dependencies array to be: [getBaseMission, refresh]",{"range":"1529","text":"1530"},"Update the dependencies array to be: [queryTeacher, refresh, userDetail?.id, userDetail?.stuId]",{"range":"1531","text":"1532"},{"range":"1533","text":"1518"},"Update the dependencies array to be: [getTotal]",{"range":"1534","text":"1535"},"Update the dependencies array to be: [getGraduateInformation, page]",{"range":"1536","text":"1537"},"Update the dependencies array to be: [getAllApprove, getAllDelay, refresh]",{"range":"1538","text":"1539"},"Update the dependencies array to be: [getInfo]",{"range":"1540","text":"1541"},"Update the dependencies array to be: [name, keshuo, studyType, users]",{"range":"1542","text":"1543"},"Update the dependencies array to be: [getAllDelay, refresh]",{"range":"1544","text":"1545"},"Update the dependencies array to be: [allCheck, allDelay, length]",{"range":"1546","text":"1547"},"Update the dependencies array to be: [getAllApprove, refresh]",{"range":"1548","text":"1549"},"Update the dependencies array to be: [allApprove, allCheck, length]",{"range":"1550","text":"1551"},"Update the dependencies array to be: [refresh, page, pageNo, userInfo.stuId]",{"range":"1552","text":"1553"},"Update the dependencies array to be: [userInfo.name, week]",{"range":"1554","text":"1555"},"Update the dependencies array to be: [refresh, page, pageNo, week, userInfo.name]",{"range":"1556","text":"1557"},"Update the dependencies array to be: [getCount, getTotal]",{"range":"1558","text":"1559"},"Update the dependencies array to be: [getAllStudent, getAllStudentMissionStatus, page, pageNo]",{"range":"1560","text":"1561"},"Update the dependencies array to be: [userInfo.stuId]",{"range":"1562","text":"1563"},"Update the dependencies array to be: [onMobileClose, openMobile]",{"range":"1564","text":"1565"},"Update the dependencies array to be: [labName, refresh]",{"range":"1566","text":"1567"},"Update the dependencies array to be: [refresh, page, name, userInfo.stuId]",{"range":"1568","text":"1569"},{"range":"1570","text":"1553"},{"range":"1571","text":"1555"},"Update the dependencies array to be: [refresh, page, pageNo, week, mentorGetWeeklyPublication, userInfo.name]",{"range":"1572","text":"1573"},{"range":"1574","text":"1553"},"Update the dependencies array to be: [refresh, page, pageNo, getAllSection]",{"range":"1575","text":"1576"},"Update the dependencies array to be: [refresh, page, pageNo, getAllSeminar, getAllGroupMembers]",{"range":"1577","text":"1578"},[1316,1325],"[id, refresh, userInfo.isSystemMng]",[1442,1444],"[stuId]",[1075,1082],"[stuId, value]",[1431,1440],"[id, refresh, userInfo.isEducateMng]",[1361,1370],"[refresh, userInfo.name]",[1264,1266],"[userInfo.type, userStuId]",[1076,1078],"[stuId, userInfo.type]",[1381,1383],[1522,1524],[2497,2506],"[hasPermission, id, refresh]",[2429,2431],"[getUserList]",[4115,4130],"[refresh, page, planId]",[1715,1738],"[getAllBulletin, page, pageNo, refresh]",[923,937],"[groupId, page, pageNo]",[3377,3379],"[getUserLastScore, nowDate, page, userInfo.name]",[3570,3585],"[date, getUserLastScore, nowDate, page, refresh]",[3866,3875],"[date, getUserLastScore, nowDate]",[4010,4019],"[date, nowDate, userInfo.name]",[6733,6742],"[getADVCategory, getADVTiny, getBaseCategory, getBaseTiny, refresh]",[4293,4295],"[getUserLastScore, nowDate, page, sortNum, teacherName]",[4609,4631],"[date, getUserLastScore, nowDate, sortNum, teacherName]",[4855,4879],"[refresh, sortNum, page, getUserLastScore, teacherName, date, nowDate]",[8134,8143],"[getAllProcessCategory, getAllTintProcessCategory, refresh]",[6344,6365],"[refresh, page, pageNo, getGroupStudents]",[3090,3099],"[getAllMission, queryTeacher, refresh]",[5303,5305],"[queryTeacher, userDetail.stuId]",[5368,5377],"[getEssentialMission, refresh]",[6003,6005],"[queryTeacher, type, userDetail.stuId]",[6063,6072],"[getBaseMission, refresh]",[3308,3317],"[queryTeacher, refresh, userDetail?.id, userDetail?.stuId]",[7933,7942],[1434,1436],"[getTotal]",[1502,1508],"[getGraduateInformation, page]",[1658,1667],"[getAllApprove, getAllDelay, refresh]",[2233,2235],"[getInfo]",[2440,2465],"[name, keshuo, studyType, users]",[3365,3374],"[getAllDelay, refresh]",[3650,3660],"[allCheck, allDelay, length]",[3272,3281],"[getAllApprove, refresh]",[3560,3570],"[allApprove, allCheck, length]",[1980,2003],"[refresh, page, pageNo, userInfo.stuId]",[3069,3075],"[userInfo.name, week]",[3455,3484],"[refresh, page, pageNo, week, userInfo.name]",[2788,2790],"[getCount, getTotal]",[2885,2899],"[getAllStudent, getAllStudentMissionStatus, page, pageNo]",[1846,1848],"[userInfo.stuId]",[2189,2191],"[onMobileClose, openMobile]",[1035,1044],"[labName, refresh]",[2941,2962],"[refresh, page, name, userInfo.stuId]",[1601,1624],[4079,4085],[4459,4488],"[refresh, page, pageNo, week, mentorGetWeeklyPublication, userInfo.name]",[2178,2201],[4923,4946],"[refresh, page, pageNo, getAllSection]",[4609,4630],"[refresh, page, pageNo, getAllSeminar, getAllGroupMembers]"]